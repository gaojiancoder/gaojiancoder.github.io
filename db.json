{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"themes/matery/source/favicon.png","path":"favicon.png","modified":1,"renderable":1},{"_id":"themes/matery/source/css/barrager.css","path":"css/barrager.css","modified":1,"renderable":1},{"_id":"themes/matery/source/css/bb.css","path":"css/bb.css","modified":1,"renderable":1},{"_id":"themes/matery/source/css/matery.css","path":"css/matery.css","modified":1,"renderable":1},{"_id":"themes/matery/source/css/gitment.css","path":"css/gitment.css","modified":1,"renderable":1},{"_id":"themes/matery/source/css/my-gitalk.css","path":"css/my-gitalk.css","modified":1,"renderable":1},{"_id":"themes/matery/source/css/my.css","path":"css/my.css","modified":1,"renderable":1},{"_id":"themes/matery/source/js/jquery.barrager.js","path":"js/jquery.barrager.js","modified":1,"renderable":1},{"_id":"themes/matery/source/js/matery.js","path":"js/matery.js","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/avatar.jpg","path":"medias/avatar.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/js/search.js","path":"js/search.js","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/cover.jpg","path":"medias/cover.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/comment_bg.png","path":"medias/comment_bg.png","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/icp.png","path":"medias/icp.png","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/logo.png","path":"medias/logo.png","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/animate/animate.min.css","path":"libs/animate/animate.min.css","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/aplayer/APlayer.min.css","path":"libs/aplayer/APlayer.min.css","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/aos/aos.js","path":"libs/aos/aos.js","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/aos/aos.css","path":"libs/aos/aos.css","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/aplayer/APlayer.min.js","path":"libs/aplayer/APlayer.min.js","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/background/canvas-nest.js","path":"libs/background/canvas-nest.js","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/background/ribbon-dynamic.js","path":"libs/background/ribbon-dynamic.js","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/background/ribbon-refresh.min.js","path":"libs/background/ribbon-refresh.min.js","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/background/ribbon.min.js","path":"libs/background/ribbon.min.js","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/codeBlock/codeBlockFuction.js","path":"libs/codeBlock/codeBlockFuction.js","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/cryptojs/crypto-js.min.js","path":"libs/cryptojs/crypto-js.min.js","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/codeBlock/codeShrink.js","path":"libs/codeBlock/codeShrink.js","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/dplayer/DPlayer.min.css","path":"libs/dplayer/DPlayer.min.css","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/codeBlock/codeLang.js","path":"libs/codeBlock/codeLang.js","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/codeBlock/codeCopy.js","path":"libs/codeBlock/codeCopy.js","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/dplayer/DPlayer.min.js","path":"libs/dplayer/DPlayer.min.js","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/echarts/echarts.min.js","path":"libs/echarts/echarts.min.js","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/instantpage/instantpage.js","path":"libs/instantpage/instantpage.js","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/gitalk/gitalk.min.js","path":"libs/gitalk/gitalk.min.js","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/gitalk/gitalk.css","path":"libs/gitalk/gitalk.css","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/gitment/gitment.js","path":"libs/gitment/gitment.js","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/gitment/gitment-default.css","path":"libs/gitment/gitment-default.css","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/jquery/jquery.min.js","path":"libs/jquery/jquery.min.js","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/jqcloud/jqcloud.css","path":"libs/jqcloud/jqcloud.css","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/jqcloud/jqcloud-1.0.4.min.js","path":"libs/jqcloud/jqcloud-1.0.4.min.js","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/materialize/materialize.min.css","path":"libs/materialize/materialize.min.css","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/materialize/materialize.min.js","path":"libs/materialize/materialize.min.js","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/masonry/masonry.pkgd.min.js","path":"libs/masonry/masonry.pkgd.min.js","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/minivaline/MiniValine.js","path":"libs/minivaline/MiniValine.js","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/others/busuanzi.pure.mini.js","path":"libs/others/busuanzi.pure.mini.js","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/others/clicklove.js","path":"libs/others/clicklove.js","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/scrollprogress/scrollProgress.min.js","path":"libs/scrollprogress/scrollProgress.min.js","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/prism/prism.css","path":"libs/prism/prism.css","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/tocbot/tocbot.min.js","path":"libs/tocbot/tocbot.min.js","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/tocbot/tocbot.css","path":"libs/tocbot/tocbot.css","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/twikoo/twikoo.all.min.js","path":"libs/twikoo/twikoo.all.min.js","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/twikoo/twikoo.all.min.js.LICENSE.txt","path":"libs/twikoo/twikoo.all.min.js.LICENSE.txt","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/valine/av-min.js","path":"libs/valine/av-min.js","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/valine/Valine.min.js","path":"libs/valine/Valine.min.js","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/banner/0.jpg","path":"medias/banner/0.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/banner/1.jpg","path":"medias/banner/1.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/banner/3.jpg","path":"medias/banner/3.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/banner/2.jpg","path":"medias/banner/2.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/banner/4.jpg","path":"medias/banner/4.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/banner/5.jpg","path":"medias/banner/5.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/banner/6.jpg","path":"medias/banner/6.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/barrager/0.png","path":"medias/barrager/0.png","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/barrager/1.png","path":"medias/barrager/1.png","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/barrager/2.png","path":"medias/barrager/2.png","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/barrager/close.png","path":"medias/barrager/close.png","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/1.jpg","path":"medias/featureimages/1.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/0.jpg","path":"medias/featureimages/0.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/10.jpg","path":"medias/featureimages/10.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/11.jpg","path":"medias/featureimages/11.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/12.jpg","path":"medias/featureimages/12.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/13.jpg","path":"medias/featureimages/13.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/15.jpg","path":"medias/featureimages/15.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/14.jpg","path":"medias/featureimages/14.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/16.jpg","path":"medias/featureimages/16.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/17.jpg","path":"medias/featureimages/17.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/18.jpg","path":"medias/featureimages/18.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/19.jpg","path":"medias/featureimages/19.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/2.jpg","path":"medias/featureimages/2.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/20.jpg","path":"medias/featureimages/20.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/21.jpg","path":"medias/featureimages/21.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/23.jpg","path":"medias/featureimages/23.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/3.jpg","path":"medias/featureimages/3.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/22.jpg","path":"medias/featureimages/22.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/4.jpg","path":"medias/featureimages/4.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/5.jpg","path":"medias/featureimages/5.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/6.jpg","path":"medias/featureimages/6.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/reward/alipay.jpg","path":"medias/reward/alipay.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/7.jpg","path":"medias/featureimages/7.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/9.jpg","path":"medias/featureimages/9.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/8.jpg","path":"medias/featureimages/8.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/reward/wechat.png","path":"medias/reward/wechat.png","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/awesome/css/all.css","path":"libs/awesome/css/all.css","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/awesome/webfonts/fa-brands-400.eot","path":"libs/awesome/webfonts/fa-brands-400.eot","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/awesome/webfonts/fa-brands-400.svg","path":"libs/awesome/webfonts/fa-brands-400.svg","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/awesome/webfonts/fa-brands-400.woff","path":"libs/awesome/webfonts/fa-brands-400.woff","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/awesome/webfonts/fa-brands-400.ttf","path":"libs/awesome/webfonts/fa-brands-400.ttf","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/awesome/webfonts/fa-brands-400.woff2","path":"libs/awesome/webfonts/fa-brands-400.woff2","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/awesome/webfonts/fa-regular-400.eot","path":"libs/awesome/webfonts/fa-regular-400.eot","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/awesome/webfonts/fa-regular-400.svg","path":"libs/awesome/webfonts/fa-regular-400.svg","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/awesome/webfonts/fa-regular-400.ttf","path":"libs/awesome/webfonts/fa-regular-400.ttf","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/awesome/webfonts/fa-regular-400.woff","path":"libs/awesome/webfonts/fa-regular-400.woff","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/awesome/webfonts/fa-regular-400.woff2","path":"libs/awesome/webfonts/fa-regular-400.woff2","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/awesome/webfonts/fa-solid-900.eot","path":"libs/awesome/webfonts/fa-solid-900.eot","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/awesome/webfonts/fa-solid-900.svg","path":"libs/awesome/webfonts/fa-solid-900.svg","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/awesome/webfonts/fa-solid-900.ttf","path":"libs/awesome/webfonts/fa-solid-900.ttf","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/awesome/webfonts/fa-solid-900.woff","path":"libs/awesome/webfonts/fa-solid-900.woff","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/awesome/webfonts/fa-solid-900.woff2","path":"libs/awesome/webfonts/fa-solid-900.woff2","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/lightGallery/fonts/lg.svg","path":"libs/lightGallery/fonts/lg.svg","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/lightGallery/css/lightgallery.min.css","path":"libs/lightGallery/css/lightgallery.min.css","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/lightGallery/fonts/lg.eot","path":"libs/lightGallery/fonts/lg.eot","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/lightGallery/fonts/lg.woff","path":"libs/lightGallery/fonts/lg.woff","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/lightGallery/fonts/lg.ttf","path":"libs/lightGallery/fonts/lg.ttf","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/lightGallery/img/loading.gif","path":"libs/lightGallery/img/loading.gif","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/lightGallery/img/video-play.png","path":"libs/lightGallery/img/video-play.png","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/lightGallery/img/youtube-play.png","path":"libs/lightGallery/img/youtube-play.png","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/lightGallery/img/vimeo-play.png","path":"libs/lightGallery/img/vimeo-play.png","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/lightGallery/js/lightgallery-all.min.js","path":"libs/lightGallery/js/lightgallery-all.min.js","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/share/css/share.min.css","path":"libs/share/css/share.min.css","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/share/fonts/iconfont.eot","path":"libs/share/fonts/iconfont.eot","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/share/fonts/iconfont.svg","path":"libs/share/fonts/iconfont.svg","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/share/js/jquery.share.min.js","path":"libs/share/js/jquery.share.min.js","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/share/fonts/iconfont.ttf","path":"libs/share/fonts/iconfont.ttf","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/share/fonts/iconfont.woff","path":"libs/share/fonts/iconfont.woff","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/share/js/social-share.min.js","path":"libs/share/js/social-share.min.js","modified":1,"renderable":1}],"Cache":[{"_id":"source/_date/friends.json","hash":"b64f6bcb4f47bb6b55d90b76673381d723f3e5b4","modified":1669031743540},{"_id":"source/404/index.md","hash":"d4b0910eb9ad39a70f9d0f69197622e21a9a9612","modified":1669031743539},{"_id":"source/_posts/.多线程.md.swp","hash":"05b331060d12896bb95b51910028264d01fa34cc","modified":1669031743540},{"_id":"source/_posts/Docker.md","hash":"a1a0cd4f633deba50d6e7d8a18d8b3935b77016f","modified":1669031743541},{"_id":"source/_posts/HTML.md","hash":"f75364233b39bd40ba091ca6b857415da4c1c9a0","modified":1669036602286},{"_id":"source/_posts/JDBC初阶.md","hash":"d03e24acc88c3f6268ef72be1f66e7040caae247","modified":1669031743542},{"_id":"source/_posts/MySQL学习笔记3.md","hash":"2e2f29364941f59e8f18bf1e59b110656246bc29","modified":1669031743547},{"_id":"source/_posts/MySQL学习笔记2.md","hash":"005407cb66fbc5bc3abbf97e484b9a22de1cf021","modified":1669031743545},{"_id":"source/_posts/MySQL学习笔记4.md","hash":"6be1dcb7104244dbe7be16b42b665aa4713d39eb","modified":1669031743547},{"_id":"source/_posts/MySQL学习笔记5.md","hash":"b3af31db1683cdabfdc0c16a3f517f985e0554c9","modified":1669031743548},{"_id":"source/_posts/MySQL学习笔记6.md","hash":"1e65f86a824f656aca9695e0d943072d7d748daf","modified":1669031743548},{"_id":"source/_posts/Tomcat细小问题解决.md","hash":"b90560bc9a89c43792ee4b0e497136bc0d31b6e2","modified":1669031743613},{"_id":"source/_posts/Redis初阶.md","hash":"ceff4d30e65b8cf54bce78e40fd09e78b53763d0","modified":1669031743549},{"_id":"source/_posts/java8-Stream-API-了解.md","hash":"0b4b2b2b3554d0f52259118de65126f5ad152e69","modified":1669031743620},{"_id":"source/_posts/Sevelet2.md","hash":"884a83acdababccea18e3f3c63dc915828e3be91","modified":1669031743566},{"_id":"source/_posts/maven创建与使用.md","hash":"34fa4e28776dd8089a3119cc185b7a288c8bb252","modified":1669031743620},{"_id":"source/_posts/web工程tomcat部署.md","hash":"e3949b45ab10eddabd62c5f8226c5147efa52be8","modified":1669031743680},{"_id":"source/_posts/mybatis第一次框架操作.md","hash":"34f705afa065b0d529b36e0254a231759b9dc904","modified":1669031743647},{"_id":"source/_posts/redis下载与安装.md","hash":"199fd74678927595066cbb2bdc8195a8acffcf54","modified":1669031743675},{"_id":"source/about/index.md","hash":"9cc4c55a423effe9d47db6940d599609e97560d0","modified":1669031743745},{"_id":"source/_posts/“MySQL如何在终端操作1”.md","hash":"927eb5bd5b5cd579ff60b85e76d1dff18c2c76ec","modified":1669031743695},{"_id":"source/_posts/个人页面云服务.md","hash":"ebe7981ef985517d3f74bf9305826074a06c5b44","modified":1669031743695},{"_id":"source/categories/index.md","hash":"ca1adc2e55c6c89096ed87863b227d6dd178f0fe","modified":1669031743746},{"_id":"source/_posts/枚举.md","hash":"1b3fa31ee0d33617aeccb25461d3d212c976cbd1","modified":1669031743725},{"_id":"source/_posts/多线程.md","hash":"299d3f98f4884c792db8edc93f6411299322daba","modified":1669031743716},{"_id":"source/_posts/面向对象.md","hash":"ddbd9898563919bc9a042db31cab6ad708591169","modified":1669031743725},{"_id":"source/contact/index.md","hash":"a56aae7edf83c0ecdcb98b9ec72af2f5c53f68d4","modified":1669031743747},{"_id":"source/tags/index.md","hash":"ffb24c6d391ab48fc6ec692034a8ef417c98f3e0","modified":1669031743749},{"_id":"source/friends/index.md","hash":"181626928108e732d63c6b70458e50dae76039b3","modified":1669031743748},{"_id":"source/_posts/Docker/1.png","hash":"80f37196cca06a7e90cbe278c3846c3d51a14448","modified":1669031743541},{"_id":"source/_posts/Docker/2.png","hash":"e0775cfbecedec76c3d322b9075b90503058b100","modified":1669031743542},{"_id":"source/_posts/Redis初阶/4.png","hash":"2c2834c6504dff2b53237bdad87c0568f370eb40","modified":1669031743559},{"_id":"source/_posts/Redis初阶/8.png","hash":"a26b4b8bb38ceac228b840bb8aa8eb131e795826","modified":1669031743563},{"_id":"source/_posts/maven创建与使用/1.png","hash":"d0eb8d7641a0e7506f04472d099dcd335e9eb100","modified":1669031743621},{"_id":"source/_posts/Tomcat细小问题解决/小问题.png","hash":"fdcea5435aa797ab287587f41576213b19585710","modified":1669031743619},{"_id":"source/_posts/maven创建与使用/12.png","hash":"0b488b07276f6db37910baa8727203ca39be3c15","modified":1669031743624},{"_id":"source/_posts/maven创建与使用/13.png","hash":"3cf489d6e421205c5ecffab56c058297da3d165b","modified":1669031743625},{"_id":"source/_posts/maven创建与使用/4.png","hash":"5b41c38eb64914ba19906f4a9ee50f665b23071d","modified":1669031743630},{"_id":"source/_posts/maven创建与使用/7.png","hash":"ab73c5a96e57ec697a3d388b4974df79a16a56ec","modified":1669031743644},{"_id":"source/_posts/mybatis第一次框架操作/1.png","hash":"99c8fba7e95bd4f37841ba58333d7e742dd6fe8d","modified":1669031743648},{"_id":"source/_posts/mybatis第一次框架操作/13.png","hash":"3dbcf75484cfadce71e5b3597d57f7651b521114","modified":1669031743654},{"_id":"source/_posts/web工程tomcat部署/image-2.png","hash":"88623016b44b0ce40e22848badeee04759749d55","modified":1669031743683},{"_id":"source/_posts/个人页面云服务/12.png","hash":"e05831ab3cc99305e92546d8f7326e293bc53cd5","modified":1669031743700},{"_id":"source/_posts/面向对象/4.png","hash":"3901d28fef38a478be036d5637356b06076afa93","modified":1669031743739},{"_id":"source/_posts/面向对象/5.png","hash":"8ee4867f069708e1c4b641c84c6be61f1d28d03b","modified":1669031743740},{"_id":"source/_posts/面向对象/6.png","hash":"61566e7bb2b7d5d88f1a774a9d2e4cbfcb281a8d","modified":1669031743741},{"_id":"source/_posts/面向对象/9.png","hash":"124b66204edabf61adc7d8c41c2c70c0ed1fa39f","modified":1669031743745},{"_id":"source/_posts/Redis初阶/14.png","hash":"5ca5ef6e7ba3be5641ca350088222ece4b8fd7f7","modified":1669031743557},{"_id":"source/_posts/Redis初阶/2.png","hash":"c2761269adbb65ae4613efe8804b480e407acbad","modified":1669031743558},{"_id":"source/_posts/Redis初阶/3.png","hash":"261e65c514bf537c700f8918c09c4ec4edafb688","modified":1669031743559},{"_id":"source/_posts/Redis初阶/6.png","hash":"52cebc7cb2efd9c5adf7f8562313c1dcd3d63bb8","modified":1669031743561},{"_id":"source/_posts/Redis初阶/5.png","hash":"1bc693f7dee6a3ddfc5d3bae0b7a12aa6f1c08d0","modified":1669031743560},{"_id":"source/_posts/Sevelet2/11.png","hash":"ced7b3a394ded7f25a66b4f2813b4a5f15fd83b8","modified":1669031743569},{"_id":"source/_posts/Sevelet2/6.png","hash":"6ae9ab39b3be7d9f4c9d63e2105b2c89f1bef34a","modified":1669031743589},{"_id":"source/_posts/Sevelet2/7.png","hash":"41fb23b3f35933be5adf2221e170200ad1aa8d23","modified":1669031743606},{"_id":"source/_posts/Tomcat细小问题解决/1.png","hash":"09a3423f11f44a73204d8b32748e2e96a20906c0","modified":1669031743615},{"_id":"source/_posts/maven创建与使用/10.png","hash":"b13e82a75ab33dced338f7db6b878eeb44c63cbb","modified":1669031743622},{"_id":"source/_posts/maven创建与使用/11.png","hash":"75dc6396148eea46ce89cccc5eb0bdf401fac294","modified":1669031743623},{"_id":"source/_posts/maven创建与使用/8.png","hash":"9fc6070d886a29cda49b26690751f067b6ed671a","modified":1669031743645},{"_id":"source/_posts/maven创建与使用/9.png","hash":"8516b93672847e19d4974eda29d901acae0aeac1","modified":1669031743646},{"_id":"source/_posts/redis下载与安装/2.png","hash":"c3c39db9bbd41e0f77063951b4c1119452f1d1b0","modified":1669031743678},{"_id":"source/_posts/mybatis第一次框架操作/12.png","hash":"d7e3223909fdfb40a047e93b009e2d6a29db15c0","modified":1669031743653},{"_id":"source/_posts/mybatis第一次框架操作/8.png","hash":"c740e5336f903298f9e10cd8fcfdaacfc3925d39","modified":1669031743672},{"_id":"source/_posts/mybatis第一次框架操作/7.png","hash":"7966cc509f76d5ec29156f9bb1c5e1bf20f2b5c8","modified":1669031743672},{"_id":"source/_posts/web工程tomcat部署/image-3.png","hash":"d1cf740b4be5471688f195047daccdb6a158f3cb","modified":1669031743684},{"_id":"source/_posts/web工程tomcat部署/image-6.png","hash":"80a6be2ad8bed2bb9fdbcb377455fab91ae42962","modified":1669031743688},{"_id":"source/_posts/web工程tomcat部署/image-9.png","hash":"404475347b473a52d24064055f9483327755f806","modified":1669031743694},{"_id":"source/_posts/个人页面云服务/10.png","hash":"8ae30efefe628f1e567e24b3c5e1a0feab5c309c","modified":1669031743698},{"_id":"source/_posts/个人页面云服务/4.png","hash":"e575718e2b10f0adf8db26f86c6c4648a5dc7e60","modified":1669031743707},{"_id":"source/_posts/面向对象/1.png","hash":"48162c44aa435bd81c6ebc3e30c753e5fa08631b","modified":1669031743727},{"_id":"source/_posts/面向对象/2.png","hash":"87363b70afcc4258b25b24e1e9b5f9f7fd6b0ba6","modified":1669031743733},{"_id":"source/_posts/JDBC初阶/1.png","hash":"012f555c3ab03dec7cfb50a63e9c04dacb305d0e","modified":1669031743544},{"_id":"source/_posts/JDBC初阶/2.png","hash":"08e5175b77c677284a514631fa378517afdadc84","modified":1669031743545},{"_id":"source/_posts/Redis初阶/1.png","hash":"7294def12096c89e2c372c5f9799c03903a45465","modified":1669031743550},{"_id":"source/_posts/Sevelet2/1.png","hash":"50465b229b83192d329c3676828bc819e93bdba1","modified":1669031743567},{"_id":"source/_posts/Sevelet2/2.png","hash":"ea411f50d5df892e0b914aed4829c6c44b2758ae","modified":1669031743584},{"_id":"source/_posts/Sevelet2/3.png","hash":"42a44ce022a9311983e0c1e77bdb7a9d89ce014b","modified":1669031743586},{"_id":"source/_posts/Sevelet2/5.png","hash":"4b2a3f4aec24aa0f414a0344029aea789ac4aaf0","modified":1669031743588},{"_id":"source/_posts/Sevelet2/4.png","hash":"66ff7b1dbcd3dbbd115ed9e88add74272d3768d2","modified":1669031743587},{"_id":"source/_posts/maven创建与使用/5.png","hash":"93e19b3e159d36a08b454c734493d5937673eea2","modified":1669031743641},{"_id":"source/_posts/mybatis第一次框架操作/16.png","hash":"60f9ebad6886af0edf027a314a58870a1170db6d","modified":1669031743660},{"_id":"source/_posts/mybatis第一次框架操作/2.png","hash":"0f5f5240d4006c7916877161d52ac68c91e9a283","modified":1669031743664},{"_id":"source/_posts/mybatis第一次框架操作/9.png","hash":"e2f8445701d4bcfc77ce72f31044148bea534fab","modified":1669031743674},{"_id":"source/_posts/个人页面云服务/1.png","hash":"983b881487f14ab2cccecffcea2203732ddb6da4","modified":1669031743696},{"_id":"source/_posts/个人页面云服务/8.png","hash":"5517b898eca43ab36c68d4d0cc57274175821d52","modified":1669031743714},{"_id":"source/_posts/面向对象/22.png","hash":"a8548af1a832bcb7022e74b2b16420062b8e40de","modified":1669031743737},{"_id":"source/_posts/Redis初阶/10.png","hash":"463a674353e3e2ccfa4f999534811ff268df3595","modified":1669031743552},{"_id":"source/_posts/Redis初阶/7.png","hash":"c1c434d53f3c148b73464005d5afb2f2cc58792e","modified":1669031743563},{"_id":"source/_posts/Tomcat细小问题解决/2.png","hash":"984814eadb56e0389857e2646cbaf41374b254b0","modified":1669031743616},{"_id":"source/_posts/maven创建与使用/6.png","hash":"bf59969bd0cf3d449fbcebdcd61376a3de7b6cc4","modified":1669031743643},{"_id":"source/_posts/maven创建与使用/3.png","hash":"c674e1cfab591c56c6d6466ed2f6f0591d0bf3a4","modified":1669031743629},{"_id":"source/_posts/mybatis第一次框架操作/11.png","hash":"b34dbcc493dc505a5d25e08e0caf346fb9929cbe","modified":1669031743652},{"_id":"source/_posts/mybatis第一次框架操作/15.png","hash":"e48819d2f63526225ad3ad3f2ea9cb67c563b8b2","modified":1669031743658},{"_id":"source/_posts/mybatis第一次框架操作/6.png","hash":"82658f3ca176dda2ab7dd71a82f2ff2e2182103d","modified":1669031743671},{"_id":"source/_posts/mybatis第一次框架操作/5.png","hash":"aa5bd97a48681769ac34c80e2138f859769db4b7","modified":1669031743669},{"_id":"source/_posts/web工程tomcat部署/image-4.png","hash":"f782b7d8c7dac4206724e8827560cd8674961482","modified":1669031743685},{"_id":"source/_posts/web工程tomcat部署/image-5.png","hash":"71a0840402f492c15840787d181aa91653b74364","modified":1669031743687},{"_id":"source/_posts/个人页面云服务/7.png","hash":"4dab4b1702cc9457c4bd6faa2234e056659d0d4c","modified":1669031743713},{"_id":"source/_posts/Sevelet2/10.png","hash":"374df8675f876a6b2c3bcb8fe29dec0442321d27","modified":1669031743569},{"_id":"source/_posts/Redis初阶/9.png","hash":"bbc82b46fc4fede15239c2500474bb3ee9a09043","modified":1669031743565},{"_id":"source/_posts/Sevelet2/12.png","hash":"0a332390be139806ee51f96c24cf6a6e1c988add","modified":1669031743572},{"_id":"source/_posts/Sevelet2/9.png","hash":"155ffe415a550f161bbd723a3379bad570932c81","modified":1669031743613},{"_id":"source/_posts/Tomcat细小问题解决/3.png","hash":"28333f3c28638ec64f54c91d0fd4baf7c1afb5da","modified":1669031743618},{"_id":"source/_posts/redis下载与安装/3.png","hash":"020285eeba41352bc22b4810646dd834993e2a12","modified":1669031743680},{"_id":"source/_posts/mybatis第一次框架操作/14.png","hash":"9665367f7bbc81115902aa94493523274d68d9bc","modified":1669031743656},{"_id":"source/_posts/mybatis第一次框架操作/4.png","hash":"9d56fecae700d5d9ea1b246ae991109d354cc479","modified":1669031743668},{"_id":"source/_posts/web工程tomcat部署/image-1.png","hash":"66311048db61ccf20bc0f4e4f73e0674c84545b3","modified":1669031743682},{"_id":"source/_posts/个人页面云服务/13.png","hash":"4e4dc13653efd165fd280acb283fe26a86cec653","modified":1669031743702},{"_id":"source/_posts/个人页面云服务/11.png","hash":"4740d9ab95b60a580ee79be01566a448b198cbe2","modified":1669031743699},{"_id":"source/_posts/个人页面云服务/2.png","hash":"e8de669a5bf9a1dc8d35f0fcf0b022b2cf8c3bd2","modified":1669031743703},{"_id":"source/_posts/个人页面云服务/9.png","hash":"5ddf7792019c626cab227c195929091f11427014","modified":1669031743716},{"_id":"source/_posts/多线程/5.png","hash":"5c086e7af184379609d67f8089fb76f51d14fb10","modified":1669031743724},{"_id":"source/_posts/面向对象/10.png","hash":"803470fc18c50454e11077a82a1e6aafe0bcd7c0","modified":1669031743732},{"_id":"source/_posts/面向对象/7.png","hash":"4dd999027ddcca2ce03606fefb5864cbb1416c4c","modified":1669031743742},{"_id":"source/_posts/面向对象/8.png","hash":"20f4dad09a236686e163fe5cbac63aabba6e168e","modified":1669031743744},{"_id":"source/_posts/Redis初阶/13.png","hash":"b963a702b9e67176777ce5417e4b4abe1d54567d","modified":1669031743555},{"_id":"source/_posts/Redis初阶/11.png","hash":"f435a80e967a31bce14529987019f5a53bd93653","modified":1669031743554},{"_id":"themes/matery/CHANGELOG.md","hash":"084ec8b110a20170d08a0aa5fd8accf601051835","modified":1669031743750},{"_id":"themes/matery/README.md","hash":"ddaf6310154e314385d63041da61c418055314f6","modified":1669031743751},{"_id":"themes/matery/languages/default.yml","hash":"bb583b880bebd29bdba0487068db60b37c2fdebf","modified":1669031743753},{"_id":"themes/matery/LICENSE","hash":"7df059597099bb7dcf25d2a9aedfaf4465f72d8d","modified":1669031743750},{"_id":"themes/matery/README_CN.md","hash":"a2267aed16d52f4adeb13f555d36d076855387af","modified":1669031743751},{"_id":"themes/matery/languages/zh-CN.yml","hash":"6013123fd47d481ce0a64fc75c5a39bb1948046b","modified":1669031743753},{"_id":"themes/matery/_config.yml","hash":"9e9288267d995b4fee5c21a5f4ec776aa33db416","modified":1669031743752},{"_id":"themes/matery/languages/zh-HK.yml","hash":"6fb0903b32d3d2518576aae0b1a5d03ea720fcf4","modified":1669031743754},{"_id":"themes/matery/layout/404.ejs","hash":"9c8ca67377211e5d60fdde272a975faa9a91a22a","modified":1669031743754},{"_id":"themes/matery/source/favicon.png","hash":"774fee8c6d0be9dbb010b20f36c06848d06e3da0","modified":1669031743785},{"_id":"themes/matery/layout/about.ejs","hash":"99a74316aed478efb0db823c4460ee2e660f101c","modified":1669031743775},{"_id":"themes/matery/layout/bb.ejs","hash":"21959d702f17a3d98b716daf44c8b5eecd59c7c5","modified":1669031743776},{"_id":"themes/matery/layout/categories.ejs","hash":"8e54665cc25d7c333da7d9f312987190be6215da","modified":1669031743777},{"_id":"themes/matery/layout/archive.ejs","hash":"cdac701de8370f9f3794a0eed4165983993a1ca7","modified":1669031743775},{"_id":"themes/matery/layout/category.ejs","hash":"00019bca11fb46477f22017cb1f5ad8444da0580","modified":1669031743777},{"_id":"themes/matery/layout/contact.ejs","hash":"a777733e03d954ac265a3d0523245bd191732130","modified":1669031743778},{"_id":"themes/matery/layout/index.ejs","hash":"f421840a8076ebe6a53c85483d6a8e8634af9cc0","modified":1669031743779},{"_id":"themes/matery/layout/friends.ejs","hash":"51e5369ec6b017cc702a8d957fc052c59dd4c3d7","modified":1669031743778},{"_id":"themes/matery/layout/post.ejs","hash":"7f982867c091ec32fe3f1f4aace7808feff75543","modified":1669031743780},{"_id":"themes/matery/layout/layout.ejs","hash":"1f7056a4ed6bb3f4a34bf4d45b995517033aead0","modified":1669031743780},{"_id":"themes/matery/layout/tags.ejs","hash":"cf9517aa6a0111355121f44615d6923e312283c7","modified":1669031743781},{"_id":"themes/matery/layout/tag.ejs","hash":"85a4b05bd8a6ad0f17ff2e97dae56949b379c204","modified":1669031743781},{"_id":"themes/matery/source/css/barrager.css","hash":"862879d9313ed8d4c721fa32ef8f94ac2f0a28ae","modified":1669031743782},{"_id":"themes/matery/source/css/bb.css","hash":"aa15633888c7cf9baea8bb48d796c68b57cf14bf","modified":1669031743783},{"_id":"themes/matery/source/css/matery.css","hash":"a630f6e8643904073dce9eada57b5c16c4dba5e2","modified":1669031743784},{"_id":"themes/matery/source/css/my-gitalk.css","hash":"af18dd29e58642c18bab9b89541767b494c468dd","modified":1669031743784},{"_id":"themes/matery/source/css/gitment.css","hash":"2bd15cc17dca35ac3ecc0acf167a23a1dd362acd","modified":1669031743783},{"_id":"themes/matery/source/css/my.css","hash":"497e50351f7838f8546cac76850a42e7e380a110","modified":1669031743785},{"_id":"themes/matery/source/medias/avatar.jpg","hash":"2a6287308628881ce27b9a7de53ba15c2be00d02","modified":1669031743861},{"_id":"themes/matery/source/js/matery.js","hash":"b86de5fe3e9766b7ff80df12ea41c3a9e30825f7","modified":1669031743787},{"_id":"themes/matery/source/js/jquery.barrager.js","hash":"19c8b2498ca1083e537f7f443172970912107f83","modified":1669031743786},{"_id":"themes/matery/source/js/search.js","hash":"e1482406c58ea2a0eb178d7e4efb2c879cdddc80","modified":1669031743787},{"_id":"themes/matery/layout/_partial/back-top.ejs","hash":"47ee36a042bb6d52bbe1d0f329637e8ffcf1d0aa","modified":1669031743755},{"_id":"themes/matery/source/medias/icp.png","hash":"27a96f31f7d0413c6ade6f40e06f021f501151c7","modified":1669031743887},{"_id":"themes/matery/source/medias/comment_bg.png","hash":"dfc93d24081884fbc58cab0f8fd19e77d31d6123","modified":1669031743870},{"_id":"themes/matery/layout/_partial/background.ejs","hash":"aef6edeeb11209831a11d8c7f5d59992e2573335","modified":1669031743755},{"_id":"themes/matery/layout/_partial/baidu-analytics.ejs","hash":"3bbcdb474ca1dcad514bdc4b7763e17c55df04fd","modified":1669031743756},{"_id":"themes/matery/source/medias/logo.png","hash":"d9095f5ea8719374d9d1ff020279426f5b2a1396","modified":1669031743887},{"_id":"themes/matery/layout/_partial/bg-cover.ejs","hash":"02191109712f61c0e487b8f0b8466597181a9004","modified":1669031743757},{"_id":"themes/matery/layout/_partial/baidu-push.ejs","hash":"2cebcc5ea3614d7f76ec36670e68050cbe611202","modified":1669031743756},{"_id":"themes/matery/layout/_partial/changyan.ejs","hash":"cd919d31564e118c2ee8d5cbfb7d51ee6da15d82","modified":1669031743758},{"_id":"themes/matery/layout/_partial/bg-cover-content.ejs","hash":"c35e4254ff0738878f65251a657b4fdcafc4b270","modified":1669031743757},{"_id":"themes/matery/layout/_partial/footer.ejs","hash":"5ad05cdc0544d77f0058b9faeb1742628b61d002","modified":1669031743759},{"_id":"themes/matery/layout/_partial/disqus.ejs","hash":"b2dc2c8b5ed56815e55cc2ea54a6dc4eeba2375d","modified":1669031743758},{"_id":"themes/matery/layout/_partial/gitalk.ejs","hash":"2aa8fbb04b046fa7679092a48372d7e036835dff","modified":1669031743759},{"_id":"themes/matery/layout/_partial/github-link.ejs","hash":"3aeb581bd78ab8e15b858e4c44c03bcf92f20b9e","modified":1669031743759},{"_id":"themes/matery/layout/_partial/google-analytics.ejs","hash":"5f4992205617da5f8cc5863c62b5ec46e414e2fb","modified":1669031743760},{"_id":"themes/matery/layout/_partial/gitment.ejs","hash":"90f6218512ef2eab63ada7ad2fc766ae635a2297","modified":1669031743760},{"_id":"themes/matery/layout/_partial/head.ejs","hash":"f8438ac80df005934a330b029de292d26f0b6ecb","modified":1669031743760},{"_id":"themes/matery/layout/_partial/header.ejs","hash":"59e38c70f3d8e7165e686e5e84a627835f4321b0","modified":1669031743761},{"_id":"themes/matery/layout/_partial/minivaline.ejs","hash":"738b83cd90fe1b26971d803fc89c56193323da1e","modified":1669031743762},{"_id":"themes/matery/layout/_partial/livere.ejs","hash":"9c3401b42ea7f26410a5593bae93ada7e57b43be","modified":1669031743762},{"_id":"themes/matery/layout/_partial/navigation.ejs","hash":"78b70ff24b3039c871331ebec114b936c1756cc8","modified":1669031743763},{"_id":"themes/matery/layout/_partial/index-cover.ejs","hash":"85f0ef1c390694a1661e77f44a3ed76555099385","modified":1669031743761},{"_id":"themes/matery/layout/_partial/mobile-nav.ejs","hash":"cb0cb452be1cd1857ba600f04025b506f3b6fc79","modified":1669031743762},{"_id":"themes/matery/layout/_partial/post-cover.ejs","hash":"d1c873c5de54498c722e155aadb8c0ec39485dfa","modified":1669031743763},{"_id":"themes/matery/layout/_partial/paging.ejs","hash":"e2df12cf92a82b1a7a7add2eac1db1d954bc5511","modified":1669031743763},{"_id":"themes/matery/layout/_partial/post-detail-toc.ejs","hash":"3ff94aff01936242a9f4e1f31adb9b43bfab8d53","modified":1669031743764},{"_id":"themes/matery/layout/_partial/post-detail.ejs","hash":"4002adc615f6d3959993dcb62004a07adfc3fe4f","modified":1669031743764},{"_id":"themes/matery/layout/_partial/prev-next.ejs","hash":"c76b78782ea82340104fccc089417572e0adece4","modified":1669031743765},{"_id":"themes/matery/layout/_partial/post-statis.ejs","hash":"04889f9031743c6b081d02fa4027b0dbfcc45ecf","modified":1669031743764},{"_id":"themes/matery/layout/_partial/reprint-statement.ejs","hash":"0ce3f9361f558b99cc2f059c5e50b0e2a152ae38","modified":1669031743765},{"_id":"themes/matery/layout/_partial/reward.ejs","hash":"ffc55bc7e73bc698bfc58d8e3780c336b83282cf","modified":1669031743766},{"_id":"themes/matery/layout/_partial/share.ejs","hash":"c941730a2471d6aab367cbb6e09ed08b56c83143","modified":1669031743766},{"_id":"themes/matery/layout/_partial/search.ejs","hash":"150529c9fb9aa8ddb42ec3e02645d301faa2503b","modified":1669031743766},{"_id":"themes/matery/layout/_partial/twikoo.ejs","hash":"f9cb8c82b9d2a7cdb644e10718f1cdeb9400414c","modified":1669031743767},{"_id":"themes/matery/layout/_partial/social-link.ejs","hash":"6f871bd3a70f720e4e451f1f4f625cbc6d8994a4","modified":1669031743767},{"_id":"themes/matery/layout/_widget/artitalk.ejs","hash":"b14e486f12b9ac42a273b80e4d785fcb94cf04b2","modified":1669031743768},{"_id":"themes/matery/layout/_partial/valine.ejs","hash":"045f3aaade1dc6749a1f824b0405b5fdb9e041e4","modified":1669031743768},{"_id":"themes/matery/layout/_widget/category-cloud.ejs","hash":"1b3df1009234c0112424b497b18b4ad8240b3bc7","modified":1669031743769},{"_id":"themes/matery/layout/_widget/dream.ejs","hash":"9a472ad5591100cdb65d0df9d01034163bd6dd9d","modified":1669031743770},{"_id":"themes/matery/layout/_widget/category-radar.ejs","hash":"1d8747fda89a0b2ca3c7008867cbfeecad0578a6","modified":1669031743769},{"_id":"themes/matery/layout/_widget/my-projects.ejs","hash":"ef60b64021fa349b0048425d858dfcf6c906fede","modified":1669031743771},{"_id":"themes/matery/layout/_widget/music.ejs","hash":"e9e3e327d5de9d7aeadbde32e1d558652d9e9195","modified":1669031743770},{"_id":"themes/matery/layout/_widget/my-gallery.ejs","hash":"65a2d2f9722f84c7fd98f6bdf79087a14848ebd8","modified":1669031743771},{"_id":"themes/matery/layout/_widget/post-calendar.ejs","hash":"48821e644bc73553d7c5c56d2e8ee111a70cd776","modified":1669031743772},{"_id":"themes/matery/layout/_widget/my-skills.ejs","hash":"89a0092df72d23093128f2fbbdc8ca7f83ebcfd9","modified":1669031743772},{"_id":"themes/matery/layout/_widget/post-charts.ejs","hash":"ab5f986f428215941aeaa0c88aefd440c47d3bcf","modified":1669031743773},{"_id":"themes/matery/layout/_widget/recommend.ejs","hash":"8551137e94ca4e2e3b8b63d5626255884cb60cb5","modified":1669031743773},{"_id":"themes/matery/layout/_widget/tag-cloud.ejs","hash":"fc42b72cddc231f7485cdc1fd6852b66be6add26","modified":1669031743773},{"_id":"themes/matery/layout/_widget/tag-wordcloud.ejs","hash":"487aacb2454d6bf0d21cdb07ddd1fd5ddbca9038","modified":1669031743773},{"_id":"themes/matery/layout/_widget/video.ejs","hash":"5e5ec78f8ab229d54786ef2e0ea2864af2dc459f","modified":1669031743774},{"_id":"themes/matery/source/libs/animate/animate.min.css","hash":"97afa151569f046b2e01f27c1871646e9cd87caf","modified":1669031743788},{"_id":"themes/matery/source/libs/aplayer/APlayer.min.css","hash":"07372a2ba507388d0fed166d761b1c2c2a659dce","modified":1669031743790},{"_id":"themes/matery/source/libs/aos/aos.js","hash":"02bfb40b0c4b6e9b0b4081218357145cbb327d74","modified":1669031743789},{"_id":"themes/matery/source/libs/aplayer/APlayer.min.js","hash":"22caa28ff6b41a16ff40f15d38f1739e22359478","modified":1669031743790},{"_id":"themes/matery/source/libs/aos/aos.css","hash":"191a3705a8f63e589a50a0ff2f2c5559f1a1b6b2","modified":1669031743788},{"_id":"themes/matery/source/libs/background/canvas-nest.js","hash":"65333d0dbb9c1173a1b13031b230161fc42c8b2f","modified":1669031743811},{"_id":"themes/matery/source/libs/codeBlock/codeBlockFuction.js","hash":"c7ab06d27a525b15b1eb69027135269e9b9132fb","modified":1669031743814},{"_id":"themes/matery/source/libs/cryptojs/crypto-js.min.js","hash":"5989527a378b55011a59522f41eeb3981518325c","modified":1669031743816},{"_id":"themes/matery/source/libs/codeBlock/codeShrink.js","hash":"201e8cd761b4be557247bdaf1ebc7c11c83194f6","modified":1669031743815},{"_id":"themes/matery/source/libs/background/ribbon-refresh.min.js","hash":"6d98692b2cad8c746a562db18b170b35c24402f4","modified":1669031743813},{"_id":"themes/matery/source/libs/background/ribbon-dynamic.js","hash":"052b80c29e6bc585aa28d4504b743bdbac220a88","modified":1669031743812},{"_id":"themes/matery/source/libs/background/ribbon.min.js","hash":"6a99d494c030388f96f6086a7aaa0f03f3fe532e","modified":1669031743813},{"_id":"themes/matery/source/libs/dplayer/DPlayer.min.css","hash":"f7d19655f873b813ffba5d1a17145c91f82631b8","modified":1669031743817},{"_id":"themes/matery/source/libs/codeBlock/codeLang.js","hash":"bac88b4d4e3679732d29bd037c34f089cf27cf05","modified":1669031743815},{"_id":"themes/matery/source/libs/codeBlock/codeCopy.js","hash":"6d39a766af62e625f177c4d5cf3adc35eed71e61","modified":1669031743814},{"_id":"themes/matery/source/libs/instantpage/instantpage.js","hash":"83ce8919b1a69b2f1809ffaf99b52a8627e650e9","modified":1669031743828},{"_id":"themes/matery/source/libs/gitment/gitment-default.css","hash":"2903c59ee06b965bef32e937bd69f5b0b2190717","modified":1669031743827},{"_id":"themes/matery/source/libs/gitalk/gitalk.css","hash":"61d71cb30f5f34cbb1f2b5bc469784d6cb908c22","modified":1669031743823},{"_id":"themes/matery/source/libs/jqcloud/jqcloud.css","hash":"20d9f11a19d95c70e27cb922e0d6dccbec4eae89","modified":1669031743829},{"_id":"themes/matery/source/libs/jqcloud/jqcloud-1.0.4.min.js","hash":"257eaae3020599e4939f50d5008a743827f25b8c","modified":1669031743829},{"_id":"themes/matery/source/libs/masonry/masonry.pkgd.min.js","hash":"ff940b4ea68368ca0e4d5560cbb79fb147dfc3c5","modified":1669031743837},{"_id":"themes/matery/source/libs/minivaline/MiniValine.js","hash":"f7f6cdc1b22297e02334e304444e9a8351acb455","modified":1669031743845},{"_id":"themes/matery/source/libs/others/busuanzi.pure.mini.js","hash":"6e41f31100ae7eb3a6f23f2c168f6dd56e7f7a9a","modified":1669031743846},{"_id":"themes/matery/source/libs/others/clicklove.js","hash":"6a39b8c683ba5dcd92f70c6ab45d1cfac3213e8e","modified":1669031743847},{"_id":"themes/matery/source/libs/scrollprogress/scrollProgress.min.js","hash":"777ffe5d07e85a14fbe97d846f45ffc0087251cc","modified":1669031743848},{"_id":"themes/matery/source/libs/prism/prism.css","hash":"62e5474893dece076534352f564ceabd6e088a5a","modified":1669031743848},{"_id":"themes/matery/source/libs/tocbot/tocbot.min.js","hash":"5ec27317f0270b8cf6b884c6f12025700b9a565c","modified":1669031743854},{"_id":"themes/matery/source/libs/tocbot/tocbot.css","hash":"9ab8ef576c9a57115194152e79cca79b0a41dd70","modified":1669031743854},{"_id":"themes/matery/source/medias/banner/0.jpg","hash":"42cef2f1cad2645acc09eff8b59305e0d667efae","modified":1669031743862},{"_id":"themes/matery/source/libs/twikoo/twikoo.all.min.js.LICENSE.txt","hash":"1e286a31ef472fb864fe2b9502e87df9242df56b","modified":1669031743857},{"_id":"themes/matery/source/medias/barrager/0.png","hash":"b30416fd3b3aec5af3fa90823a7e2e9c0af4cda8","modified":1669031743869},{"_id":"themes/matery/source/medias/barrager/1.png","hash":"b8c211690dba3addedfe7b928e3936cd487df0d6","modified":1669031743869},{"_id":"themes/matery/source/medias/barrager/close.png","hash":"045346df61ee01abe5018c5d9ba805d2831ce7b1","modified":1669031743869},{"_id":"themes/matery/source/medias/barrager/2.png","hash":"52b2b13373fe611ad2327b9b40426d6dc05b69cd","modified":1669031743869},{"_id":"themes/matery/source/medias/featureimages/10.jpg","hash":"98e7f6fd9c97d4de9044b6871ca08ebf14db11b9","modified":1669031743873},{"_id":"themes/matery/source/medias/featureimages/13.jpg","hash":"35a320174f8e316e3eadaec658024276b651c6e9","modified":1669031743875},{"_id":"themes/matery/source/medias/featureimages/15.jpg","hash":"da0fbee3b7bde1607eace377ddf834c0be99edfe","modified":1669031743876},{"_id":"themes/matery/source/medias/featureimages/16.jpg","hash":"97a829c4bc94f9d2929b20a1a9b798c57b9f7205","modified":1669031743877},{"_id":"themes/matery/source/medias/featureimages/2.jpg","hash":"4bba691cf71a517ecaeaf42afd3e8f8b31e346c1","modified":1669031743879},{"_id":"themes/matery/source/medias/featureimages/21.jpg","hash":"b26edb128bb0bf58b23fd2f014e9555e89a2ca3b","modified":1669031743881},{"_id":"themes/matery/source/medias/featureimages/23.jpg","hash":"7d7f37da3fa7128343adac23866449eb2c6a549a","modified":1669031743882},{"_id":"themes/matery/source/medias/featureimages/3.jpg","hash":"6ec646c2a70f5f11edacf225c1477f2200a37a96","modified":1669031743883},{"_id":"themes/matery/source/medias/featureimages/22.jpg","hash":"754579747a3e99747d890fca3162f370b96a7941","modified":1669031743881},{"_id":"themes/matery/source/medias/featureimages/5.jpg","hash":"41ca20129a37fedc573eec28dd7d7b9e5b09228a","modified":1669031743884},{"_id":"themes/matery/source/medias/reward/alipay.jpg","hash":"1abc719b95d1b26f1f898e6b0a9b7609146e332f","modified":1669031743888},{"_id":"themes/matery/source/medias/featureimages/7.jpg","hash":"7975141cd64e875122c0ea33daaca1a06bf00b8e","modified":1669031743885},{"_id":"themes/matery/source/medias/reward/wechat.png","hash":"fe93385aa92fe328e01c8221a80b039be9e4e140","modified":1669031743889},{"_id":"themes/matery/source/medias/featureimages/8.jpg","hash":"8e4b7186352085483ca1174c7c0800114c48df8b","modified":1669031743886},{"_id":"themes/matery/source/libs/awesome/webfonts/fa-regular-400.eot","hash":"439c8afd3373acb4a73135a34e220464a89cd5e2","modified":1669031743800},{"_id":"themes/matery/source/libs/awesome/webfonts/fa-regular-400.ttf","hash":"0f4bd02942a54a6b3200d9078adff88c2812e751","modified":1669031743802},{"_id":"themes/matery/source/libs/awesome/webfonts/fa-regular-400.woff","hash":"59439d3ad31d856d78ec3e2bd9f1eafa2c7a581c","modified":1669031743802},{"_id":"themes/matery/source/libs/awesome/webfonts/fa-regular-400.woff2","hash":"f6f653b4ea8fc487bdb590d39d5a726258a55f40","modified":1669031743803},{"_id":"themes/matery/source/libs/lightGallery/fonts/lg.svg","hash":"9c6632aeec67d3e84a1434884aa801514ff8103b","modified":1669031743833},{"_id":"themes/matery/source/libs/lightGallery/css/lightgallery.min.css","hash":"1b7227237f9785c66062a4811508916518e4132c","modified":1669031743832},{"_id":"themes/matery/source/libs/lightGallery/img/loading.gif","hash":"15a76af2739482d8de7354abc6d8dc4fca8d145e","modified":1669031743834},{"_id":"themes/matery/source/libs/lightGallery/fonts/lg.woff","hash":"3048de344dd5cad4624e0127e58eaae4b576f574","modified":1669031743834},{"_id":"themes/matery/source/libs/lightGallery/fonts/lg.eot","hash":"54caf05a81e33d7bf04f2e420736ce6f1de5f936","modified":1669031743833},{"_id":"themes/matery/source/libs/lightGallery/fonts/lg.ttf","hash":"f6421c0c397311ae09f9257aa58bcd5e9720f493","modified":1669031743833},{"_id":"themes/matery/source/libs/lightGallery/img/video-play.png","hash":"2962e03ddbe04d7e201a5acccac531a2bbccddfc","modified":1669031743835},{"_id":"themes/matery/source/libs/lightGallery/img/youtube-play.png","hash":"f8d11384d33b7a79ee2ba8d522844f14d5067a80","modified":1669031743836},{"_id":"themes/matery/source/libs/share/css/share.min.css","hash":"8a778a86f3ce9a042df6be63a9f1039631e351a5","modified":1669031743850},{"_id":"themes/matery/source/libs/lightGallery/js/lightgallery-all.min.js","hash":"9f5ef4bc8a0a3c746ca4f3c3e6d64493b1a977d8","modified":1669031743836},{"_id":"themes/matery/source/libs/lightGallery/img/vimeo-play.png","hash":"9b72fc0f86a01467ed0b68c9cc4d604ec316d517","modified":1669031743835},{"_id":"themes/matery/source/libs/share/fonts/iconfont.eot","hash":"00ff749c8e202401190cc98d56087cdda716abe4","modified":1669031743850},{"_id":"themes/matery/source/libs/share/js/jquery.share.min.js","hash":"41367dcb857e02e3c417ebe68a554ce1d4430806","modified":1669031743853},{"_id":"themes/matery/source/libs/share/fonts/iconfont.svg","hash":"1d56c9d5db0273f07c43cc1397e440f98ba7827a","modified":1669031743851},{"_id":"themes/matery/source/libs/share/js/social-share.min.js","hash":"a3090a02786dcd4efc6355c1c1dc978add8d6827","modified":1669031743853},{"_id":"themes/matery/source/libs/share/fonts/iconfont.woff","hash":"2e3fce1dcfbd6e2114e7bfbeaf72d3c62e15a1bd","modified":1669031743852},{"_id":"themes/matery/source/libs/share/fonts/iconfont.ttf","hash":"afd898f59d363887418669520b24d175f966a083","modified":1669031743851},{"_id":"source/_posts/Sevelet2/8.png","hash":"334bd88223de554f1ec45cea0789acb7d025a495","modified":1669031743611},{"_id":"source/_posts/maven创建与使用/2.png","hash":"4c53cde1a018158d7edebed342f34a1cc5780907","modified":1669031743627},{"_id":"source/_posts/redis下载与安装/1.png","hash":"edda73153531ac0ec082f40d024f8a617444c2d4","modified":1669031743677},{"_id":"source/_posts/mybatis第一次框架操作/17.png","hash":"271036c3a655f66dcbdac6c3855dac426b050cd0","modified":1669031743662},{"_id":"source/_posts/个人页面云服务/6.png","hash":"660d791b1b9c0544ac9d8a6b321471e6816a5c22","modified":1669031743712},{"_id":"source/_posts/个人页面云服务/5.png","hash":"71bd85618c6dff28860a8cad45718ddb4b87d2a6","modified":1669031743709},{"_id":"source/_posts/面向对象/3.png","hash":"c7b70aea1ff65a02a7ff037f387075fc2bd544c1","modified":1669031743739},{"_id":"themes/matery/source/libs/dplayer/DPlayer.min.js","hash":"c3bad7b265574fab0ae4d45867422ea1cb9d6599","modified":1669031743818},{"_id":"themes/matery/source/libs/gitment/gitment.js","hash":"28c02c45ce568e084cd1041dc493f83f9c6c88c6","modified":1669031743828},{"_id":"themes/matery/source/libs/jquery/jquery.min.js","hash":"2115753ca5fb7032aec498db7bb5dca624dbe6be","modified":1669031743831},{"_id":"themes/matery/source/libs/valine/Valine.min.js","hash":"6cbdbf91e1f046dd41267a5ff0691a1fccba99df","modified":1669031743858},{"_id":"themes/matery/source/medias/banner/1.jpg","hash":"db144a7238f053d56ae2c575a54c85c4abaf8eb4","modified":1669031743862},{"_id":"themes/matery/source/medias/banner/2.jpg","hash":"6e1e8a2e42cc129039ee261c96b72e6dd39270b6","modified":1669031743864},{"_id":"themes/matery/source/medias/featureimages/0.jpg","hash":"1c3300f029fc85d6dda6fa4f1d699551034cdaf7","modified":1669031743871},{"_id":"themes/matery/source/medias/featureimages/1.jpg","hash":"684ae89de8cb7acefae19f5aee6c612037c46393","modified":1669031743872},{"_id":"themes/matery/source/medias/featureimages/11.jpg","hash":"f55972ce7175684f2b11c3c9fc2b5b14bccbfae8","modified":1669031743873},{"_id":"themes/matery/source/medias/featureimages/12.jpg","hash":"8a4b2e7d92ae95c3b0c921db23c35aa9a41a7d58","modified":1669031743874},{"_id":"themes/matery/source/medias/featureimages/14.jpg","hash":"38e11221406785bcd93aa9cd23e568e164630ef1","modified":1669031743876},{"_id":"themes/matery/source/medias/featureimages/17.jpg","hash":"42d47903551ee81885c1386022982cae165841c5","modified":1669031743877},{"_id":"themes/matery/source/medias/featureimages/18.jpg","hash":"64829272ec85bb819d55ff89e5b5fd6f64aa436b","modified":1669031743878},{"_id":"themes/matery/source/medias/featureimages/19.jpg","hash":"eb250906fdbc0c408f42ae9933725bc1a05d79fb","modified":1669031743879},{"_id":"themes/matery/source/medias/featureimages/20.jpg","hash":"3b11f9b461168d907073f793190865fe621a8573","modified":1669031743880},{"_id":"themes/matery/source/medias/featureimages/4.jpg","hash":"e06c47de27619984be9d5d02947f8370a432dfea","modified":1669031743883},{"_id":"themes/matery/source/medias/featureimages/6.jpg","hash":"c8f2aa4bbb041158b4e73733a341e6a77c8583f7","modified":1669031743884},{"_id":"themes/matery/source/medias/featureimages/9.jpg","hash":"b956a2291a04b2132366b53666cf34858b8bdb1f","modified":1669031743886},{"_id":"themes/matery/source/libs/awesome/webfonts/fa-brands-400.eot","hash":"22f9e7d5226408eb2d0a11e118257a3ca22b8670","modified":1669031743793},{"_id":"themes/matery/source/libs/awesome/css/all.css","hash":"ecc41e32ad2696877a1656749841f3b5543bbe3d","modified":1669031743791},{"_id":"themes/matery/source/libs/awesome/webfonts/fa-brands-400.woff","hash":"18838f5260317da3c5ed29bf844ac8a4f7ad0529","modified":1669031743799},{"_id":"themes/matery/source/libs/awesome/webfonts/fa-brands-400.ttf","hash":"91cbeeaceb644a971241c08362898599d6d968ce","modified":1669031743798},{"_id":"themes/matery/source/libs/awesome/webfonts/fa-brands-400.woff2","hash":"a46bd47ff0a90b812aafafda587d095cdb844271","modified":1669031743799},{"_id":"themes/matery/source/libs/awesome/webfonts/fa-solid-900.woff","hash":"92803b8753ceda573c6906774677c5a7081d2fbb","modified":1669031743810},{"_id":"themes/matery/source/libs/awesome/webfonts/fa-solid-900.woff2","hash":"9c081b88b106c6c04ecb895ba7ba7d3dcb3b55ac","modified":1669031743811},{"_id":"source/_posts/mybatis第一次框架操作/10.png","hash":"eb352cd91d9f9fa7e3463bc337820872d9c65422","modified":1669031743651},{"_id":"source/_posts/web工程tomcat部署/image-7.png","hash":"1112b9cbb88476b46df3ef757e85300606a6b855","modified":1669031743691},{"_id":"source/_posts/web工程tomcat部署/image-8.png","hash":"1112b9cbb88476b46df3ef757e85300606a6b855","modified":1669031743693},{"_id":"source/_posts/个人页面云服务/3.png","hash":"70f5b962de8dee368dd9a29964c76bc5d2e77f93","modified":1669031743706},{"_id":"source/_posts/多线程/2.png","hash":"4efae28f7b109dc46a6e24713fa2e59d817b6ca7","modified":1669031743722},{"_id":"source/_posts/Sevelet2/13.png","hash":"4c1fa4060955e7bbb0a53ae90cb0fe7579c30a21","modified":1669031743574},{"_id":"themes/matery/source/medias/cover.jpg","hash":"d4957ff7cc5e88555cd840f2956ab0561e6f1ccf","modified":1669031743871},{"_id":"themes/matery/source/libs/materialize/materialize.min.css","hash":"a69d456e3345e7f59cd0d47d1b3e70fd4a496a05","modified":1669031743838},{"_id":"themes/matery/source/libs/materialize/materialize.min.js","hash":"c8b4c65651921d888cf5f27430dfe2ad190d35bf","modified":1669031743845},{"_id":"themes/matery/source/libs/valine/av-min.js","hash":"541efb9edc1ce425cbe3897cfc25803211fe6a05","modified":1669031743860},{"_id":"themes/matery/source/medias/banner/3.jpg","hash":"3171b663c25c79c9bf5040a105df072dcb457f85","modified":1669031743865},{"_id":"themes/matery/source/medias/banner/6.jpg","hash":"ed7282cc129c4ff9f322d2f2897fb4aac5c48589","modified":1669031743868},{"_id":"themes/matery/source/medias/banner/5.jpg","hash":"852418f4f09e796e12bc3bab7a1488d3f37d6486","modified":1669031743867},{"_id":"themes/matery/source/libs/awesome/webfonts/fa-regular-400.svg","hash":"3d3a49445343d80f3b553e3e3425b9a7bd49acaf","modified":1669031743801},{"_id":"themes/matery/source/libs/awesome/webfonts/fa-solid-900.eot","hash":"cab8e84ae5682d1d556e234df9c790985888def8","modified":1669031743804},{"_id":"themes/matery/source/libs/awesome/webfonts/fa-solid-900.ttf","hash":"9521ed12274c2cbc910cea77657116fcf6545da3","modified":1669031743809},{"_id":"source/_posts/mybatis第一次框架操作/3.png","hash":"7b00d4d4dc70ff8879939745bfcfb15d92b8a933","modified":1669031743666},{"_id":"source/_posts/Sevelet2/15.png","hash":"eba14a06ac87368c8261c30cadf0a5e353d86d96","modified":1669031743579},{"_id":"themes/matery/source/medias/banner/4.jpg","hash":"c0b4de005340839442a0622817a921b4f96c4793","modified":1669031743866},{"_id":"source/_posts/面向对象/21.png","hash":"3d7ea40e7b4c2685fa652d4f618720e5bc9be333","modified":1669031743736},{"_id":"source/_posts/Sevelet2/14.png","hash":"efac000a9c22f467aa27b5b133eeff8ed0cf4758","modified":1669031743577},{"_id":"source/_posts/多线程/1.png","hash":"213dc1abeb9eea1c0273d0ebfbf68b1b9525b770","modified":1669031743719},{"_id":"themes/matery/source/libs/twikoo/twikoo.all.min.js","hash":"c3f5f0a69b7864e7ef5bbf99fc774bec37947d7c","modified":1669031743857},{"_id":"source/_posts/Sevelet2/16.png","hash":"95908969d7531e9f1a8d2c98a61b166c759ab2d7","modified":1669031743583},{"_id":"themes/matery/source/libs/awesome/webfonts/fa-brands-400.svg","hash":"5e2d2a159294576bea69cc3360efb5ffe110ab2d","modified":1669031743797},{"_id":"themes/matery/source/libs/echarts/echarts.min.js","hash":"9496f386a0da4601cad22c479cc5543913a4d67f","modified":1669031743821},{"_id":"themes/matery/source/libs/gitalk/gitalk.min.js","hash":"564fc7c731d05fa70d71ef853a2c8cc7725739e2","modified":1669031743826},{"_id":"themes/matery/source/libs/awesome/webfonts/fa-solid-900.svg","hash":"7da88b19e1486f8c968d3cf5ab3f194f01ea17fd","modified":1669031743808},{"_id":"public/search.xml","hash":"80613d625586cada85278bc51be4b2d630b6d090","modified":1669044921909},{"_id":"public/404/index.html","hash":"3a6fab9dfc91f4f9a24f83fc0d0c41285f6b0b73","modified":1669044921909},{"_id":"public/categories/index.html","hash":"b20d2af8663f506460720068cfec27ebebbdf448","modified":1669044921909},{"_id":"public/about/index.html","hash":"6a8482d58830cb877affc77507338395970a245d","modified":1669044921909},{"_id":"public/contact/index.html","hash":"72e09ece6bfb56b4f80a42c85232166cf1767413","modified":1669044921909},{"_id":"public/friends/index.html","hash":"ecae866cda5e3230d9a38292c19a2af43f2765f3","modified":1669044921909},{"_id":"public/tags/index.html","hash":"80ae5e82bfb9cd99fa8b137d124cd2dcab69fbd6","modified":1669044921909},{"_id":"public/2022/11/21/html/index.html","hash":"f4adfa1f5e7a79f2923d794b2274e9b1d91eb699","modified":1669044921909},{"_id":"public/2021/08/21/ge-ren-ye-mian-yun-fu-wu/index.html","hash":"563a2f1de844edd3019ce602113cabbe603d74f0","modified":1669044921909},{"_id":"public/2021/08/21/mian-xiang-dui-xiang/index.html","hash":"37ff9b5377ca32ca4b8d1ded14da48b46effc75b","modified":1669044921909},{"_id":"public/2021/08/16/mei-ju/index.html","hash":"10f621cb242632001a5b705c7a1e5fed7de32109","modified":1669044921909},{"_id":"public/2021/08/16/java8-stream-api-liao-jie/index.html","hash":"51809d807cb35b531646cd17569684f10d26be59","modified":1669044921909},{"_id":"public/2021/08/15/duo-xian-cheng/index.html","hash":"92708989ca409c76d90ef48b7788fee944b57792","modified":1669044921909},{"_id":"public/2021/08/09/docker/index.html","hash":"180c8ca33ec8beca3b4cdc9de01eb27b5522cfd0","modified":1669044921909},{"_id":"public/2021/08/09/sevelet2/index.html","hash":"dec814d860c0938aa98be8804bc214d286bb3bfd","modified":1669044921909},{"_id":"public/2021/08/09/redis-chu-jie/index.html","hash":"5052fe93b8a4c048275b844de19a00b99aff9c4d","modified":1669044921909},{"_id":"public/2021/08/09/jdbc-chu-jie/index.html","hash":"d482966fa3a2422839cbaea67bcd44a9a45dbe28","modified":1669044921909},{"_id":"public/2021/08/06/redis-xia-zai-yu-an-zhuang/index.html","hash":"ff75b14536b2a24d690c57a1dfeb22a59d595813","modified":1669044921909},{"_id":"public/2021/08/05/tomcat-xi-xiao-wen-ti-jie-jue/index.html","hash":"61c378e1646b28837a2dfe3814377dd24bc52154","modified":1669044921909},{"_id":"public/2021/08/04/mybatis-di-yi-ci-kuang-jia-cao-zuo/index.html","hash":"621cf2a9c07fec94aabe8d891c28e6cfaf032831","modified":1669044921909},{"_id":"public/2021/08/03/web-gong-cheng-tomcat-bu-shu/index.html","hash":"5776805fa3a7f468b7afd32e0fe79cbc3324480b","modified":1669044921909},{"_id":"public/2021/08/01/mysql-xue-xi-bi-ji-6/index.html","hash":"7af1098913fc55b08ccbbbbc0f7d41d7d37636ee","modified":1669044921909},{"_id":"public/2021/08/01/mysql-xue-xi-bi-ji-5/index.html","hash":"9b6ef2957190ccadd55bdd5058c4a7e61d75be26","modified":1669044921909},{"_id":"public/2021/07/29/maven-chuang-jian-yu-shi-yong/index.html","hash":"61a365d4e137708770c0bda6239a468167b230f7","modified":1669044921909},{"_id":"public/2021/07/27/mysql-xue-xi-bi-ji-4/index.html","hash":"1e0a3804ff1ebc5ae1a6c0b481c582bfb2b9f9a6","modified":1669044921909},{"_id":"public/2021/07/26/mysql-xue-xi-bi-ji-3/index.html","hash":"48b06ad88ebd485ffd064a2e8643337d4f317434","modified":1669044921909},{"_id":"public/2021/07/26/mysql-xue-xi-bi-ji-2/index.html","hash":"5f6c120502ac415fa6c3b83791be89a30036ca31","modified":1669044921909},{"_id":"public/2021/07/25/mysql-ru-he-zai-zhong-duan-cao-zuo-1/index.html","hash":"746fbe1d9a7c33da238ec0e604fe4de53dc4335c","modified":1669044921909},{"_id":"public/archives/index.html","hash":"473f52ab0f1cb7a4f9dcfbf691093556c2cf1895","modified":1669044921909},{"_id":"public/archives/page/2/index.html","hash":"0b6b6ca3ef8e277c41cd9f643965ca8b35d8239a","modified":1669044921909},{"_id":"public/archives/2021/index.html","hash":"14f7db61897866de671826907bdb40aee413fde7","modified":1669044921909},{"_id":"public/archives/2021/page/2/index.html","hash":"2d4cf44567bf59a7fb6ed2af252f51f718c1a714","modified":1669044921909},{"_id":"public/archives/2021/07/index.html","hash":"5cfbfebe3c4d9008c869b532f22c743eb4747053","modified":1669044921909},{"_id":"public/archives/2021/08/index.html","hash":"455b9d392f0f76d2e559d9738e040c4d00ce4bfe","modified":1669044921909},{"_id":"public/archives/2022/index.html","hash":"0ae13b77252577795b791d19a9112c5f1025b013","modified":1669044921909},{"_id":"public/archives/2022/11/index.html","hash":"99a133f7edaaa137940915d811ac675fa137039f","modified":1669044921909},{"_id":"public/categories/Docker/index.html","hash":"b1c95f886174bac5097824d00dc7cf804228abbe","modified":1669044921909},{"_id":"public/categories/javaWeb/index.html","hash":"fe385c4129eddef52d33729ac66ca8886e2d1b82","modified":1669044921909},{"_id":"public/categories/JDBC/index.html","hash":"b1c8c5319b1f76ceac11604ec0f55de0a9108a13","modified":1669044921909},{"_id":"public/categories/MySQL/index.html","hash":"e9da360ab9ce1ba64bbb020e21323873295af12d","modified":1669044921909},{"_id":"public/categories/Tomcat/index.html","hash":"eb5b0d4bd68b2ea210d78b10952122b4d0f05c9c","modified":1669044921909},{"_id":"public/categories/redis/index.html","hash":"c043f6b585e8bb8588fb1328eebcc8044fd5f681","modified":1669044921909},{"_id":"public/categories/Stream/index.html","hash":"eabcec8ced8a47f191679cfbfc560441e568d4d1","modified":1669044921909},{"_id":"public/categories/Sevelet/index.html","hash":"f9bf2f0fab2103488860ce6c01b712f32710fa30","modified":1669044921909},{"_id":"public/categories/maven/index.html","hash":"81519587d93673d4f65add32f03549d1c7c33a28","modified":1669044921909},{"_id":"public/categories/mybatis/index.html","hash":"0644911fa5c22ccf3792c02d4d160a028b706856","modified":1669044921909},{"_id":"public/categories/Thread/index.html","hash":"45a1e178f10809d8e2a1036e1ab222b76137b748","modified":1669044921909},{"_id":"public/categories/Enum/index.html","hash":"0136fe9a1a977c2b4412eea04a585d21b75ce456","modified":1669044921909},{"_id":"public/categories/object/index.html","hash":"acd3e283b54633c618b3e812d1a7a6d6bf17387c","modified":1669044921909},{"_id":"public/index.html","hash":"3e2b2c6b9d370fecf152f3fc9a3f785c1b77f8af","modified":1669044921909},{"_id":"public/page/2/index.html","hash":"59c778cb037ccc2bfc2abcb259f58123e9fd1b73","modified":1669044921909},{"_id":"public/tags/notes/index.html","hash":"94793626c05a62c1fe068ba2900be1e16fa939df","modified":1669044921909},{"_id":"public/tags/notes/page/2/index.html","hash":"459e9aa7f417ffd218fa8a2e19a7cf5a9e776f4a","modified":1669044921909},{"_id":"public/tags/Study/index.html","hash":"a4bc809b3ba563e83425d3fdc20e6a4420a5aa4c","modified":1669044921909},{"_id":"public/favicon.png","hash":"774fee8c6d0be9dbb010b20f36c06848d06e3da0","modified":1669044921909},{"_id":"public/medias/avatar.jpg","hash":"2a6287308628881ce27b9a7de53ba15c2be00d02","modified":1669044921909},{"_id":"public/medias/comment_bg.png","hash":"dfc93d24081884fbc58cab0f8fd19e77d31d6123","modified":1669044921909},{"_id":"public/medias/icp.png","hash":"27a96f31f7d0413c6ade6f40e06f021f501151c7","modified":1669044921909},{"_id":"public/medias/logo.png","hash":"d9095f5ea8719374d9d1ff020279426f5b2a1396","modified":1669044921909},{"_id":"public/libs/twikoo/twikoo.all.min.js.LICENSE.txt","hash":"1e286a31ef472fb864fe2b9502e87df9242df56b","modified":1669044921909},{"_id":"public/medias/banner/0.jpg","hash":"42cef2f1cad2645acc09eff8b59305e0d667efae","modified":1669044921909},{"_id":"public/medias/barrager/0.png","hash":"b30416fd3b3aec5af3fa90823a7e2e9c0af4cda8","modified":1669044921909},{"_id":"public/medias/barrager/1.png","hash":"b8c211690dba3addedfe7b928e3936cd487df0d6","modified":1669044921909},{"_id":"public/medias/barrager/2.png","hash":"52b2b13373fe611ad2327b9b40426d6dc05b69cd","modified":1669044921909},{"_id":"public/medias/barrager/close.png","hash":"045346df61ee01abe5018c5d9ba805d2831ce7b1","modified":1669044921909},{"_id":"public/medias/featureimages/10.jpg","hash":"98e7f6fd9c97d4de9044b6871ca08ebf14db11b9","modified":1669044921909},{"_id":"public/medias/featureimages/13.jpg","hash":"35a320174f8e316e3eadaec658024276b651c6e9","modified":1669044921909},{"_id":"public/medias/featureimages/15.jpg","hash":"da0fbee3b7bde1607eace377ddf834c0be99edfe","modified":1669044921909},{"_id":"public/medias/featureimages/16.jpg","hash":"97a829c4bc94f9d2929b20a1a9b798c57b9f7205","modified":1669044921909},{"_id":"public/medias/featureimages/2.jpg","hash":"4bba691cf71a517ecaeaf42afd3e8f8b31e346c1","modified":1669044921909},{"_id":"public/medias/featureimages/21.jpg","hash":"b26edb128bb0bf58b23fd2f014e9555e89a2ca3b","modified":1669044921909},{"_id":"public/medias/featureimages/3.jpg","hash":"6ec646c2a70f5f11edacf225c1477f2200a37a96","modified":1669044921909},{"_id":"public/medias/featureimages/23.jpg","hash":"7d7f37da3fa7128343adac23866449eb2c6a549a","modified":1669044921909},{"_id":"public/medias/featureimages/22.jpg","hash":"754579747a3e99747d890fca3162f370b96a7941","modified":1669044921909},{"_id":"public/medias/reward/alipay.jpg","hash":"1abc719b95d1b26f1f898e6b0a9b7609146e332f","modified":1669044921909},{"_id":"public/medias/featureimages/5.jpg","hash":"41ca20129a37fedc573eec28dd7d7b9e5b09228a","modified":1669044921909},{"_id":"public/medias/featureimages/7.jpg","hash":"7975141cd64e875122c0ea33daaca1a06bf00b8e","modified":1669044921909},{"_id":"public/medias/reward/wechat.png","hash":"fe93385aa92fe328e01c8221a80b039be9e4e140","modified":1669044921909},{"_id":"public/medias/featureimages/8.jpg","hash":"8e4b7186352085483ca1174c7c0800114c48df8b","modified":1669044921909},{"_id":"public/libs/awesome/webfonts/fa-regular-400.eot","hash":"439c8afd3373acb4a73135a34e220464a89cd5e2","modified":1669044921909},{"_id":"public/libs/awesome/webfonts/fa-regular-400.woff","hash":"59439d3ad31d856d78ec3e2bd9f1eafa2c7a581c","modified":1669044921909},{"_id":"public/libs/awesome/webfonts/fa-regular-400.woff2","hash":"f6f653b4ea8fc487bdb590d39d5a726258a55f40","modified":1669044921909},{"_id":"public/libs/awesome/webfonts/fa-regular-400.ttf","hash":"0f4bd02942a54a6b3200d9078adff88c2812e751","modified":1669044921909},{"_id":"public/libs/lightGallery/fonts/lg.svg","hash":"9c6632aeec67d3e84a1434884aa801514ff8103b","modified":1669044921909},{"_id":"public/libs/lightGallery/fonts/lg.eot","hash":"54caf05a81e33d7bf04f2e420736ce6f1de5f936","modified":1669044921909},{"_id":"public/libs/lightGallery/img/loading.gif","hash":"15a76af2739482d8de7354abc6d8dc4fca8d145e","modified":1669044921909},{"_id":"public/libs/lightGallery/img/video-play.png","hash":"2962e03ddbe04d7e201a5acccac531a2bbccddfc","modified":1669044921909},{"_id":"public/libs/lightGallery/fonts/lg.woff","hash":"3048de344dd5cad4624e0127e58eaae4b576f574","modified":1669044921909},{"_id":"public/libs/lightGallery/fonts/lg.ttf","hash":"f6421c0c397311ae09f9257aa58bcd5e9720f493","modified":1669044921909},{"_id":"public/libs/lightGallery/img/youtube-play.png","hash":"f8d11384d33b7a79ee2ba8d522844f14d5067a80","modified":1669044921909},{"_id":"public/libs/lightGallery/img/vimeo-play.png","hash":"9b72fc0f86a01467ed0b68c9cc4d604ec316d517","modified":1669044921909},{"_id":"public/libs/share/fonts/iconfont.eot","hash":"00ff749c8e202401190cc98d56087cdda716abe4","modified":1669044921909},{"_id":"public/libs/share/fonts/iconfont.svg","hash":"1d56c9d5db0273f07c43cc1397e440f98ba7827a","modified":1669044921909},{"_id":"public/2021/08/09/docker/1.png","hash":"80f37196cca06a7e90cbe278c3846c3d51a14448","modified":1669044921909},{"_id":"public/libs/share/fonts/iconfont.ttf","hash":"afd898f59d363887418669520b24d175f966a083","modified":1669044921909},{"_id":"public/libs/share/fonts/iconfont.woff","hash":"2e3fce1dcfbd6e2114e7bfbeaf72d3c62e15a1bd","modified":1669044921909},{"_id":"public/2021/08/09/docker/2.png","hash":"e0775cfbecedec76c3d322b9075b90503058b100","modified":1669044921909},{"_id":"public/2021/08/05/tomcat-xi-xiao-wen-ti-jie-jue/小问题.png","hash":"fdcea5435aa797ab287587f41576213b19585710","modified":1669044921909},{"_id":"public/2021/08/09/redis-chu-jie/4.png","hash":"2c2834c6504dff2b53237bdad87c0568f370eb40","modified":1669044921909},{"_id":"public/2021/08/09/redis-chu-jie/8.png","hash":"a26b4b8bb38ceac228b840bb8aa8eb131e795826","modified":1669044921909},{"_id":"public/2021/07/29/maven-chuang-jian-yu-shi-yong/1.png","hash":"d0eb8d7641a0e7506f04472d099dcd335e9eb100","modified":1669044921909},{"_id":"public/2021/07/29/maven-chuang-jian-yu-shi-yong/12.png","hash":"0b488b07276f6db37910baa8727203ca39be3c15","modified":1669044921909},{"_id":"public/2021/07/29/maven-chuang-jian-yu-shi-yong/13.png","hash":"3cf489d6e421205c5ecffab56c058297da3d165b","modified":1669044921909},{"_id":"public/2021/07/29/maven-chuang-jian-yu-shi-yong/4.png","hash":"5b41c38eb64914ba19906f4a9ee50f665b23071d","modified":1669044921909},{"_id":"public/2021/07/29/maven-chuang-jian-yu-shi-yong/7.png","hash":"ab73c5a96e57ec697a3d388b4974df79a16a56ec","modified":1669044921909},{"_id":"public/2021/08/04/mybatis-di-yi-ci-kuang-jia-cao-zuo/1.png","hash":"99c8fba7e95bd4f37841ba58333d7e742dd6fe8d","modified":1669044921909},{"_id":"public/2021/08/04/mybatis-di-yi-ci-kuang-jia-cao-zuo/13.png","hash":"3dbcf75484cfadce71e5b3597d57f7651b521114","modified":1669044921909},{"_id":"public/2021/08/21/ge-ren-ye-mian-yun-fu-wu/12.png","hash":"e05831ab3cc99305e92546d8f7326e293bc53cd5","modified":1669044921909},{"_id":"public/2021/08/03/web-gong-cheng-tomcat-bu-shu/image-2.png","hash":"88623016b44b0ce40e22848badeee04759749d55","modified":1669044921909},{"_id":"public/2021/08/21/mian-xiang-dui-xiang/4.png","hash":"3901d28fef38a478be036d5637356b06076afa93","modified":1669044921909},{"_id":"public/2021/08/21/mian-xiang-dui-xiang/5.png","hash":"8ee4867f069708e1c4b641c84c6be61f1d28d03b","modified":1669044921909},{"_id":"public/2021/08/21/mian-xiang-dui-xiang/6.png","hash":"61566e7bb2b7d5d88f1a774a9d2e4cbfcb281a8d","modified":1669044921909},{"_id":"public/2021/08/21/mian-xiang-dui-xiang/9.png","hash":"124b66204edabf61adc7d8c41c2c70c0ed1fa39f","modified":1669044921909},{"_id":"public/medias/banner/1.jpg","hash":"db144a7238f053d56ae2c575a54c85c4abaf8eb4","modified":1669044921909},{"_id":"public/medias/banner/2.jpg","hash":"6e1e8a2e42cc129039ee261c96b72e6dd39270b6","modified":1669044921909},{"_id":"public/medias/featureimages/1.jpg","hash":"684ae89de8cb7acefae19f5aee6c612037c46393","modified":1669044921909},{"_id":"public/medias/featureimages/0.jpg","hash":"1c3300f029fc85d6dda6fa4f1d699551034cdaf7","modified":1669044921909},{"_id":"public/medias/featureimages/11.jpg","hash":"f55972ce7175684f2b11c3c9fc2b5b14bccbfae8","modified":1669044921909},{"_id":"public/medias/featureimages/12.jpg","hash":"8a4b2e7d92ae95c3b0c921db23c35aa9a41a7d58","modified":1669044921909},{"_id":"public/medias/featureimages/14.jpg","hash":"38e11221406785bcd93aa9cd23e568e164630ef1","modified":1669044921909},{"_id":"public/medias/featureimages/17.jpg","hash":"42d47903551ee81885c1386022982cae165841c5","modified":1669044921909},{"_id":"public/medias/featureimages/18.jpg","hash":"64829272ec85bb819d55ff89e5b5fd6f64aa436b","modified":1669044921909},{"_id":"public/medias/featureimages/19.jpg","hash":"eb250906fdbc0c408f42ae9933725bc1a05d79fb","modified":1669044921909},{"_id":"public/medias/featureimages/20.jpg","hash":"3b11f9b461168d907073f793190865fe621a8573","modified":1669044921909},{"_id":"public/medias/featureimages/4.jpg","hash":"e06c47de27619984be9d5d02947f8370a432dfea","modified":1669044921909},{"_id":"public/medias/featureimages/6.jpg","hash":"c8f2aa4bbb041158b4e73733a341e6a77c8583f7","modified":1669044921909},{"_id":"public/libs/awesome/webfonts/fa-brands-400.eot","hash":"22f9e7d5226408eb2d0a11e118257a3ca22b8670","modified":1669044921909},{"_id":"public/medias/featureimages/9.jpg","hash":"b956a2291a04b2132366b53666cf34858b8bdb1f","modified":1669044921909},{"_id":"public/libs/awesome/webfonts/fa-brands-400.woff","hash":"18838f5260317da3c5ed29bf844ac8a4f7ad0529","modified":1669044921909},{"_id":"public/libs/awesome/webfonts/fa-brands-400.ttf","hash":"91cbeeaceb644a971241c08362898599d6d968ce","modified":1669044921909},{"_id":"public/libs/awesome/webfonts/fa-brands-400.woff2","hash":"a46bd47ff0a90b812aafafda587d095cdb844271","modified":1669044921909},{"_id":"public/libs/awesome/webfonts/fa-solid-900.woff2","hash":"9c081b88b106c6c04ecb895ba7ba7d3dcb3b55ac","modified":1669044921909},{"_id":"public/libs/awesome/webfonts/fa-solid-900.woff","hash":"92803b8753ceda573c6906774677c5a7081d2fbb","modified":1669044921909},{"_id":"public/2021/08/05/tomcat-xi-xiao-wen-ti-jie-jue/1.png","hash":"09a3423f11f44a73204d8b32748e2e96a20906c0","modified":1669044921909},{"_id":"public/2021/08/09/redis-chu-jie/14.png","hash":"5ca5ef6e7ba3be5641ca350088222ece4b8fd7f7","modified":1669044921909},{"_id":"public/2021/08/09/redis-chu-jie/2.png","hash":"c2761269adbb65ae4613efe8804b480e407acbad","modified":1669044921909},{"_id":"public/2021/08/09/redis-chu-jie/5.png","hash":"1bc693f7dee6a3ddfc5d3bae0b7a12aa6f1c08d0","modified":1669044921909},{"_id":"public/2021/08/09/redis-chu-jie/3.png","hash":"261e65c514bf537c700f8918c09c4ec4edafb688","modified":1669044921909},{"_id":"public/2021/08/09/redis-chu-jie/6.png","hash":"52cebc7cb2efd9c5adf7f8562313c1dcd3d63bb8","modified":1669044921909},{"_id":"public/2021/07/29/maven-chuang-jian-yu-shi-yong/10.png","hash":"b13e82a75ab33dced338f7db6b878eeb44c63cbb","modified":1669044921909},{"_id":"public/2021/07/29/maven-chuang-jian-yu-shi-yong/11.png","hash":"75dc6396148eea46ce89cccc5eb0bdf401fac294","modified":1669044921909},{"_id":"public/2021/07/29/maven-chuang-jian-yu-shi-yong/8.png","hash":"9fc6070d886a29cda49b26690751f067b6ed671a","modified":1669044921909},{"_id":"public/2021/07/29/maven-chuang-jian-yu-shi-yong/9.png","hash":"8516b93672847e19d4974eda29d901acae0aeac1","modified":1669044921909},{"_id":"public/2021/08/09/sevelet2/11.png","hash":"ced7b3a394ded7f25a66b4f2813b4a5f15fd83b8","modified":1669044921909},{"_id":"public/2021/08/09/sevelet2/6.png","hash":"6ae9ab39b3be7d9f4c9d63e2105b2c89f1bef34a","modified":1669044921909},{"_id":"public/2021/08/09/sevelet2/7.png","hash":"41fb23b3f35933be5adf2221e170200ad1aa8d23","modified":1669044921909},{"_id":"public/2021/08/06/redis-xia-zai-yu-an-zhuang/2.png","hash":"c3c39db9bbd41e0f77063951b4c1119452f1d1b0","modified":1669044921909},{"_id":"public/2021/08/04/mybatis-di-yi-ci-kuang-jia-cao-zuo/12.png","hash":"d7e3223909fdfb40a047e93b009e2d6a29db15c0","modified":1669044921909},{"_id":"public/2021/08/04/mybatis-di-yi-ci-kuang-jia-cao-zuo/7.png","hash":"7966cc509f76d5ec29156f9bb1c5e1bf20f2b5c8","modified":1669044921909},{"_id":"public/2021/08/21/ge-ren-ye-mian-yun-fu-wu/10.png","hash":"8ae30efefe628f1e567e24b3c5e1a0feab5c309c","modified":1669044921909},{"_id":"public/2021/08/04/mybatis-di-yi-ci-kuang-jia-cao-zuo/8.png","hash":"c740e5336f903298f9e10cd8fcfdaacfc3925d39","modified":1669044921909},{"_id":"public/2021/08/21/ge-ren-ye-mian-yun-fu-wu/4.png","hash":"e575718e2b10f0adf8db26f86c6c4648a5dc7e60","modified":1669044921909},{"_id":"public/2021/08/03/web-gong-cheng-tomcat-bu-shu/image-3.png","hash":"d1cf740b4be5471688f195047daccdb6a158f3cb","modified":1669044921909},{"_id":"public/2021/08/03/web-gong-cheng-tomcat-bu-shu/image-6.png","hash":"80a6be2ad8bed2bb9fdbcb377455fab91ae42962","modified":1669044921909},{"_id":"public/2021/08/03/web-gong-cheng-tomcat-bu-shu/image-9.png","hash":"404475347b473a52d24064055f9483327755f806","modified":1669044921909},{"_id":"public/2021/08/21/mian-xiang-dui-xiang/1.png","hash":"48162c44aa435bd81c6ebc3e30c753e5fa08631b","modified":1669044921909},{"_id":"public/2021/08/21/mian-xiang-dui-xiang/2.png","hash":"87363b70afcc4258b25b24e1e9b5f9f7fd6b0ba6","modified":1669044921909},{"_id":"public/css/barrager.css","hash":"862879d9313ed8d4c721fa32ef8f94ac2f0a28ae","modified":1669044921909},{"_id":"public/css/bb.css","hash":"aa15633888c7cf9baea8bb48d796c68b57cf14bf","modified":1669044921909},{"_id":"public/js/matery.js","hash":"b86de5fe3e9766b7ff80df12ea41c3a9e30825f7","modified":1669044921909},{"_id":"public/js/jquery.barrager.js","hash":"19c8b2498ca1083e537f7f443172970912107f83","modified":1669044921909},{"_id":"public/js/search.js","hash":"e1482406c58ea2a0eb178d7e4efb2c879cdddc80","modified":1669044921909},{"_id":"public/css/gitment.css","hash":"2bd15cc17dca35ac3ecc0acf167a23a1dd362acd","modified":1669044921909},{"_id":"public/css/my-gitalk.css","hash":"af18dd29e58642c18bab9b89541767b494c468dd","modified":1669044921909},{"_id":"public/css/my.css","hash":"497e50351f7838f8546cac76850a42e7e380a110","modified":1669044921909},{"_id":"public/libs/aplayer/APlayer.min.css","hash":"07372a2ba507388d0fed166d761b1c2c2a659dce","modified":1669044921909},{"_id":"public/libs/aos/aos.js","hash":"02bfb40b0c4b6e9b0b4081218357145cbb327d74","modified":1669044921909},{"_id":"public/libs/background/canvas-nest.js","hash":"65333d0dbb9c1173a1b13031b230161fc42c8b2f","modified":1669044921909},{"_id":"public/libs/background/ribbon-dynamic.js","hash":"052b80c29e6bc585aa28d4504b743bdbac220a88","modified":1669044921909},{"_id":"public/libs/background/ribbon-refresh.min.js","hash":"6d98692b2cad8c746a562db18b170b35c24402f4","modified":1669044921909},{"_id":"public/libs/codeBlock/codeBlockFuction.js","hash":"c7ab06d27a525b15b1eb69027135269e9b9132fb","modified":1669044921909},{"_id":"public/libs/codeBlock/codeShrink.js","hash":"201e8cd761b4be557247bdaf1ebc7c11c83194f6","modified":1669044921909},{"_id":"public/libs/codeBlock/codeLang.js","hash":"bac88b4d4e3679732d29bd037c34f089cf27cf05","modified":1669044921909},{"_id":"public/libs/codeBlock/codeCopy.js","hash":"6d39a766af62e625f177c4d5cf3adc35eed71e61","modified":1669044921909},{"_id":"public/libs/background/ribbon.min.js","hash":"6a99d494c030388f96f6086a7aaa0f03f3fe532e","modified":1669044921909},{"_id":"public/libs/instantpage/instantpage.js","hash":"83ce8919b1a69b2f1809ffaf99b52a8627e650e9","modified":1669044921909},{"_id":"public/libs/jqcloud/jqcloud.css","hash":"20d9f11a19d95c70e27cb922e0d6dccbec4eae89","modified":1669044921909},{"_id":"public/libs/jqcloud/jqcloud-1.0.4.min.js","hash":"257eaae3020599e4939f50d5008a743827f25b8c","modified":1669044921909},{"_id":"public/libs/minivaline/MiniValine.js","hash":"f7f6cdc1b22297e02334e304444e9a8351acb455","modified":1669044921909},{"_id":"public/libs/others/busuanzi.pure.mini.js","hash":"6e41f31100ae7eb3a6f23f2c168f6dd56e7f7a9a","modified":1669044921909},{"_id":"public/libs/prism/prism.css","hash":"62e5474893dece076534352f564ceabd6e088a5a","modified":1669044921909},{"_id":"public/libs/scrollprogress/scrollProgress.min.js","hash":"777ffe5d07e85a14fbe97d846f45ffc0087251cc","modified":1669044921909},{"_id":"public/libs/others/clicklove.js","hash":"6a39b8c683ba5dcd92f70c6ab45d1cfac3213e8e","modified":1669044921909},{"_id":"public/libs/tocbot/tocbot.css","hash":"9ab8ef576c9a57115194152e79cca79b0a41dd70","modified":1669044921909},{"_id":"public/libs/tocbot/tocbot.min.js","hash":"5ec27317f0270b8cf6b884c6f12025700b9a565c","modified":1669044921909},{"_id":"public/libs/share/css/share.min.css","hash":"8a778a86f3ce9a042df6be63a9f1039631e351a5","modified":1669044921909},{"_id":"public/css/matery.css","hash":"a630f6e8643904073dce9eada57b5c16c4dba5e2","modified":1669044921909},{"_id":"public/libs/aos/aos.css","hash":"191a3705a8f63e589a50a0ff2f2c5559f1a1b6b2","modified":1669044921909},{"_id":"public/libs/aplayer/APlayer.min.js","hash":"22caa28ff6b41a16ff40f15d38f1739e22359478","modified":1669044921909},{"_id":"public/libs/animate/animate.min.css","hash":"97afa151569f046b2e01f27c1871646e9cd87caf","modified":1669044921909},{"_id":"public/libs/cryptojs/crypto-js.min.js","hash":"5989527a378b55011a59522f41eeb3981518325c","modified":1669044921909},{"_id":"public/libs/dplayer/DPlayer.min.css","hash":"f7d19655f873b813ffba5d1a17145c91f82631b8","modified":1669044921909},{"_id":"public/libs/gitalk/gitalk.css","hash":"61d71cb30f5f34cbb1f2b5bc469784d6cb908c22","modified":1669044921909},{"_id":"public/libs/gitment/gitment-default.css","hash":"2903c59ee06b965bef32e937bd69f5b0b2190717","modified":1669044921909},{"_id":"public/libs/dplayer/DPlayer.min.js","hash":"c3bad7b265574fab0ae4d45867422ea1cb9d6599","modified":1669044921909},{"_id":"public/libs/gitment/gitment.js","hash":"28c02c45ce568e084cd1041dc493f83f9c6c88c6","modified":1669044921909},{"_id":"public/libs/masonry/masonry.pkgd.min.js","hash":"ff940b4ea68368ca0e4d5560cbb79fb147dfc3c5","modified":1669044921909},{"_id":"public/libs/jquery/jquery.min.js","hash":"2115753ca5fb7032aec498db7bb5dca624dbe6be","modified":1669044921909},{"_id":"public/libs/materialize/materialize.min.css","hash":"a69d456e3345e7f59cd0d47d1b3e70fd4a496a05","modified":1669044921909},{"_id":"public/libs/materialize/materialize.min.js","hash":"c8b4c65651921d888cf5f27430dfe2ad190d35bf","modified":1669044921909},{"_id":"public/libs/valine/Valine.min.js","hash":"6cbdbf91e1f046dd41267a5ff0691a1fccba99df","modified":1669044921909},{"_id":"public/libs/awesome/css/all.css","hash":"ecc41e32ad2696877a1656749841f3b5543bbe3d","modified":1669044921909},{"_id":"public/libs/lightGallery/css/lightgallery.min.css","hash":"1b7227237f9785c66062a4811508916518e4132c","modified":1669044921909},{"_id":"public/libs/valine/av-min.js","hash":"541efb9edc1ce425cbe3897cfc25803211fe6a05","modified":1669044921909},{"_id":"public/libs/lightGallery/js/lightgallery-all.min.js","hash":"9f5ef4bc8a0a3c746ca4f3c3e6d64493b1a977d8","modified":1669044921909},{"_id":"public/libs/share/js/jquery.share.min.js","hash":"41367dcb857e02e3c417ebe68a554ce1d4430806","modified":1669044921909},{"_id":"public/libs/share/js/social-share.min.js","hash":"a3090a02786dcd4efc6355c1c1dc978add8d6827","modified":1669044921909},{"_id":"public/libs/twikoo/twikoo.all.min.js","hash":"c3f5f0a69b7864e7ef5bbf99fc774bec37947d7c","modified":1669044921909},{"_id":"public/medias/cover.jpg","hash":"d4957ff7cc5e88555cd840f2956ab0561e6f1ccf","modified":1669044921909},{"_id":"public/medias/banner/3.jpg","hash":"3171b663c25c79c9bf5040a105df072dcb457f85","modified":1669044921909},{"_id":"public/medias/banner/5.jpg","hash":"852418f4f09e796e12bc3bab7a1488d3f37d6486","modified":1669044921909},{"_id":"public/medias/banner/6.jpg","hash":"ed7282cc129c4ff9f322d2f2897fb4aac5c48589","modified":1669044921909},{"_id":"public/libs/awesome/webfonts/fa-regular-400.svg","hash":"3d3a49445343d80f3b553e3e3425b9a7bd49acaf","modified":1669044921909},{"_id":"public/libs/awesome/webfonts/fa-solid-900.eot","hash":"cab8e84ae5682d1d556e234df9c790985888def8","modified":1669044921909},{"_id":"public/libs/awesome/webfonts/fa-solid-900.ttf","hash":"9521ed12274c2cbc910cea77657116fcf6545da3","modified":1669044921909},{"_id":"public/2021/08/09/jdbc-chu-jie/1.png","hash":"012f555c3ab03dec7cfb50a63e9c04dacb305d0e","modified":1669044921909},{"_id":"public/2021/08/09/jdbc-chu-jie/2.png","hash":"08e5175b77c677284a514631fa378517afdadc84","modified":1669044921909},{"_id":"public/2021/08/09/redis-chu-jie/1.png","hash":"7294def12096c89e2c372c5f9799c03903a45465","modified":1669044921909},{"_id":"public/2021/07/29/maven-chuang-jian-yu-shi-yong/5.png","hash":"93e19b3e159d36a08b454c734493d5937673eea2","modified":1669044921909},{"_id":"public/2021/08/09/sevelet2/1.png","hash":"50465b229b83192d329c3676828bc819e93bdba1","modified":1669044921909},{"_id":"public/2021/08/09/sevelet2/2.png","hash":"ea411f50d5df892e0b914aed4829c6c44b2758ae","modified":1669044921909},{"_id":"public/2021/08/09/sevelet2/3.png","hash":"42a44ce022a9311983e0c1e77bdb7a9d89ce014b","modified":1669044921909},{"_id":"public/2021/08/09/sevelet2/4.png","hash":"66ff7b1dbcd3dbbd115ed9e88add74272d3768d2","modified":1669044921909},{"_id":"public/2021/08/09/sevelet2/5.png","hash":"4b2a3f4aec24aa0f414a0344029aea789ac4aaf0","modified":1669044921909},{"_id":"public/2021/08/04/mybatis-di-yi-ci-kuang-jia-cao-zuo/16.png","hash":"60f9ebad6886af0edf027a314a58870a1170db6d","modified":1669044921909},{"_id":"public/2021/08/04/mybatis-di-yi-ci-kuang-jia-cao-zuo/2.png","hash":"0f5f5240d4006c7916877161d52ac68c91e9a283","modified":1669044921909},{"_id":"public/2021/08/21/ge-ren-ye-mian-yun-fu-wu/1.png","hash":"983b881487f14ab2cccecffcea2203732ddb6da4","modified":1669044921909},{"_id":"public/2021/08/04/mybatis-di-yi-ci-kuang-jia-cao-zuo/9.png","hash":"e2f8445701d4bcfc77ce72f31044148bea534fab","modified":1669044921909},{"_id":"public/2021/08/21/ge-ren-ye-mian-yun-fu-wu/8.png","hash":"5517b898eca43ab36c68d4d0cc57274175821d52","modified":1669044921909},{"_id":"public/2021/08/21/mian-xiang-dui-xiang/22.png","hash":"a8548af1a832bcb7022e74b2b16420062b8e40de","modified":1669044921909},{"_id":"public/libs/echarts/echarts.min.js","hash":"9496f386a0da4601cad22c479cc5543913a4d67f","modified":1669044921909},{"_id":"public/libs/gitalk/gitalk.min.js","hash":"564fc7c731d05fa70d71ef853a2c8cc7725739e2","modified":1669044921909},{"_id":"public/medias/banner/4.jpg","hash":"c0b4de005340839442a0622817a921b4f96c4793","modified":1669044921909},{"_id":"public/2021/08/05/tomcat-xi-xiao-wen-ti-jie-jue/2.png","hash":"984814eadb56e0389857e2646cbaf41374b254b0","modified":1669044921909},{"_id":"public/2021/08/09/redis-chu-jie/10.png","hash":"463a674353e3e2ccfa4f999534811ff268df3595","modified":1669044921909},{"_id":"public/2021/08/09/redis-chu-jie/7.png","hash":"c1c434d53f3c148b73464005d5afb2f2cc58792e","modified":1669044921909},{"_id":"public/2021/07/29/maven-chuang-jian-yu-shi-yong/3.png","hash":"c674e1cfab591c56c6d6466ed2f6f0591d0bf3a4","modified":1669044921909},{"_id":"public/2021/07/29/maven-chuang-jian-yu-shi-yong/6.png","hash":"bf59969bd0cf3d449fbcebdcd61376a3de7b6cc4","modified":1669044921909},{"_id":"public/2021/08/04/mybatis-di-yi-ci-kuang-jia-cao-zuo/11.png","hash":"b34dbcc493dc505a5d25e08e0caf346fb9929cbe","modified":1669044921909},{"_id":"public/2021/08/04/mybatis-di-yi-ci-kuang-jia-cao-zuo/15.png","hash":"e48819d2f63526225ad3ad3f2ea9cb67c563b8b2","modified":1669044921909},{"_id":"public/2021/08/04/mybatis-di-yi-ci-kuang-jia-cao-zuo/6.png","hash":"82658f3ca176dda2ab7dd71a82f2ff2e2182103d","modified":1669044921909},{"_id":"public/2021/08/04/mybatis-di-yi-ci-kuang-jia-cao-zuo/5.png","hash":"aa5bd97a48681769ac34c80e2138f859769db4b7","modified":1669044921909},{"_id":"public/2021/08/21/ge-ren-ye-mian-yun-fu-wu/7.png","hash":"4dab4b1702cc9457c4bd6faa2234e056659d0d4c","modified":1669044921909},{"_id":"public/2021/08/03/web-gong-cheng-tomcat-bu-shu/image-5.png","hash":"71a0840402f492c15840787d181aa91653b74364","modified":1669044921909},{"_id":"public/2021/08/03/web-gong-cheng-tomcat-bu-shu/image-4.png","hash":"f782b7d8c7dac4206724e8827560cd8674961482","modified":1669044921909},{"_id":"public/2021/08/05/tomcat-xi-xiao-wen-ti-jie-jue/3.png","hash":"28333f3c28638ec64f54c91d0fd4baf7c1afb5da","modified":1669044921909},{"_id":"public/2021/08/09/redis-chu-jie/9.png","hash":"bbc82b46fc4fede15239c2500474bb3ee9a09043","modified":1669044921909},{"_id":"public/2021/08/09/sevelet2/10.png","hash":"374df8675f876a6b2c3bcb8fe29dec0442321d27","modified":1669044921909},{"_id":"public/2021/08/09/sevelet2/12.png","hash":"0a332390be139806ee51f96c24cf6a6e1c988add","modified":1669044921909},{"_id":"public/2021/08/09/sevelet2/9.png","hash":"155ffe415a550f161bbd723a3379bad570932c81","modified":1669044921909},{"_id":"public/2021/08/06/redis-xia-zai-yu-an-zhuang/3.png","hash":"020285eeba41352bc22b4810646dd834993e2a12","modified":1669044921909},{"_id":"public/2021/08/04/mybatis-di-yi-ci-kuang-jia-cao-zuo/14.png","hash":"9665367f7bbc81115902aa94493523274d68d9bc","modified":1669044921909},{"_id":"public/2021/08/04/mybatis-di-yi-ci-kuang-jia-cao-zuo/4.png","hash":"9d56fecae700d5d9ea1b246ae991109d354cc479","modified":1669044921909},{"_id":"public/2021/08/21/ge-ren-ye-mian-yun-fu-wu/11.png","hash":"4740d9ab95b60a580ee79be01566a448b198cbe2","modified":1669044921909},{"_id":"public/2021/08/21/ge-ren-ye-mian-yun-fu-wu/2.png","hash":"e8de669a5bf9a1dc8d35f0fcf0b022b2cf8c3bd2","modified":1669044921909},{"_id":"public/2021/08/21/ge-ren-ye-mian-yun-fu-wu/13.png","hash":"4e4dc13653efd165fd280acb283fe26a86cec653","modified":1669044921909},{"_id":"public/2021/08/21/ge-ren-ye-mian-yun-fu-wu/9.png","hash":"5ddf7792019c626cab227c195929091f11427014","modified":1669044921909},{"_id":"public/2021/08/03/web-gong-cheng-tomcat-bu-shu/image-1.png","hash":"66311048db61ccf20bc0f4e4f73e0674c84545b3","modified":1669044921909},{"_id":"public/2021/08/15/duo-xian-cheng/5.png","hash":"5c086e7af184379609d67f8089fb76f51d14fb10","modified":1669044921909},{"_id":"public/2021/08/21/mian-xiang-dui-xiang/10.png","hash":"803470fc18c50454e11077a82a1e6aafe0bcd7c0","modified":1669044921909},{"_id":"public/2021/08/21/mian-xiang-dui-xiang/7.png","hash":"4dd999027ddcca2ce03606fefb5864cbb1416c4c","modified":1669044921909},{"_id":"public/2021/08/21/mian-xiang-dui-xiang/8.png","hash":"20f4dad09a236686e163fe5cbac63aabba6e168e","modified":1669044921909},{"_id":"public/2021/08/09/redis-chu-jie/11.png","hash":"f435a80e967a31bce14529987019f5a53bd93653","modified":1669044921909},{"_id":"public/2021/08/09/redis-chu-jie/13.png","hash":"b963a702b9e67176777ce5417e4b4abe1d54567d","modified":1669044921909},{"_id":"public/2021/07/29/maven-chuang-jian-yu-shi-yong/2.png","hash":"4c53cde1a018158d7edebed342f34a1cc5780907","modified":1669044921909},{"_id":"public/2021/08/09/sevelet2/8.png","hash":"334bd88223de554f1ec45cea0789acb7d025a495","modified":1669044921909},{"_id":"public/2021/08/06/redis-xia-zai-yu-an-zhuang/1.png","hash":"edda73153531ac0ec082f40d024f8a617444c2d4","modified":1669044921909},{"_id":"public/2021/08/04/mybatis-di-yi-ci-kuang-jia-cao-zuo/17.png","hash":"271036c3a655f66dcbdac6c3855dac426b050cd0","modified":1669044921909},{"_id":"public/2021/08/21/ge-ren-ye-mian-yun-fu-wu/5.png","hash":"71bd85618c6dff28860a8cad45718ddb4b87d2a6","modified":1669044921909},{"_id":"public/2021/08/21/ge-ren-ye-mian-yun-fu-wu/6.png","hash":"660d791b1b9c0544ac9d8a6b321471e6816a5c22","modified":1669044921909},{"_id":"public/2021/08/21/mian-xiang-dui-xiang/3.png","hash":"c7b70aea1ff65a02a7ff037f387075fc2bd544c1","modified":1669044921909},{"_id":"public/2021/08/04/mybatis-di-yi-ci-kuang-jia-cao-zuo/10.png","hash":"eb352cd91d9f9fa7e3463bc337820872d9c65422","modified":1669044921909},{"_id":"public/2021/08/21/ge-ren-ye-mian-yun-fu-wu/3.png","hash":"70f5b962de8dee368dd9a29964c76bc5d2e77f93","modified":1669044921909},{"_id":"public/2021/08/03/web-gong-cheng-tomcat-bu-shu/image-7.png","hash":"1112b9cbb88476b46df3ef757e85300606a6b855","modified":1669044921909},{"_id":"public/2021/08/03/web-gong-cheng-tomcat-bu-shu/image-8.png","hash":"1112b9cbb88476b46df3ef757e85300606a6b855","modified":1669044921909},{"_id":"public/2021/08/15/duo-xian-cheng/2.png","hash":"4efae28f7b109dc46a6e24713fa2e59d817b6ca7","modified":1669044921909},{"_id":"public/2021/08/09/sevelet2/13.png","hash":"4c1fa4060955e7bbb0a53ae90cb0fe7579c30a21","modified":1669044921909},{"_id":"public/2021/08/04/mybatis-di-yi-ci-kuang-jia-cao-zuo/3.png","hash":"7b00d4d4dc70ff8879939745bfcfb15d92b8a933","modified":1669044921909},{"_id":"public/2021/08/09/sevelet2/15.png","hash":"eba14a06ac87368c8261c30cadf0a5e353d86d96","modified":1669044921909},{"_id":"public/2021/08/21/mian-xiang-dui-xiang/21.png","hash":"3d7ea40e7b4c2685fa652d4f618720e5bc9be333","modified":1669044921909},{"_id":"public/2021/08/09/sevelet2/14.png","hash":"efac000a9c22f467aa27b5b133eeff8ed0cf4758","modified":1669044921909},{"_id":"public/libs/awesome/webfonts/fa-brands-400.svg","hash":"5e2d2a159294576bea69cc3360efb5ffe110ab2d","modified":1669044921909},{"_id":"public/2021/08/15/duo-xian-cheng/1.png","hash":"213dc1abeb9eea1c0273d0ebfbf68b1b9525b770","modified":1669044921909},{"_id":"public/libs/awesome/webfonts/fa-solid-900.svg","hash":"7da88b19e1486f8c968d3cf5ab3f194f01ea17fd","modified":1669044921909},{"_id":"public/2021/08/09/sevelet2/16.png","hash":"95908969d7531e9f1a8d2c98a61b166c759ab2d7","modified":1669044921909}],"Category":[{"name":"Docker","_id":"claqy94jt0004bklg0nv87f6o"},{"name":"javaWeb","_id":"claqy94k8000cbklg0i5m3e6x"},{"name":"JDBC","_id":"claqy94kc000kbklgfafi4clw"},{"name":"MySQL","_id":"claqy94kh000rbklg3os9enz1"},{"name":"Tomcat","_id":"claqy94kq001kbklgfbmv6d98"},{"name":"redis","_id":"claqy94kr001qbklgapg9ct52"},{"name":"Stream","_id":"claqy94ks001sbklg4bn7dbe2"},{"name":"Sevelet","_id":"claqy94ks001ubklg8sjf9oce"},{"name":"maven","_id":"claqy94ks001wbklg9dpugcbl"},{"name":"mybatis","_id":"claqy94kt001ybklg7bxze0g8"},{"name":"Thread","_id":"claqy94l30027bklgdxdb25uf"},{"name":"Enum","_id":"claqy94l5002cbklg34l94o48"},{"name":"object","_id":"claqy94l5002ebklg074a7s6i"}],"Data":[],"Page":[{"title":"404","date":"2021-07-21T13:29:58.000Z","type":"404","layout":"404","description":"你来到了没有知识的荒原 :(","_content":"","source":"404/index.md","raw":"---\ntitle: 404\ndate: 2021-07-21 21:29:58\ntype: \"404\"\nlayout: \"404\"\ndescription: \"你来到了没有知识的荒原 :(\"\n---\n","updated":"2022-11-21T11:55:43.539Z","path":"404/index.html","comments":1,"_id":"claqy94jh0000bklgecv83e4i","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"categories","date":"2021-07-21T12:36:52.000Z","type":"categories","layout":"categories","_content":"\n","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2021-07-21 20:36:52\ntype: \"categories\"\nlayout: \"categories\"\n---\n\n","updated":"2022-11-21T11:55:43.746Z","path":"categories/index.html","comments":1,"_id":"claqy94jq0002bklgabi1el53","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"about","date":"2021-07-21T12:41:20.000Z","type":"about","layout":"about","_content":"","source":"about/index.md","raw":"---\ntitle: about\ndate: 2021-07-21 20:41:20\ntype: \"about\"\nlayout: \"about\"\n---\n","updated":"2022-11-21T11:55:43.745Z","path":"about/index.html","comments":1,"_id":"claqy94jv0006bklg2pwo4zje","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"contact","date":"2021-07-20T09:25:30.000Z","type":"contact","layout":"contact","_content":"","source":"contact/index.md","raw":"\n---\ntitle: contact\ndate: 2021-07-20 17:25:30\ntype: \"contact\"\nlayout: \"contact\"\n---\n","updated":"2022-11-21T11:55:43.747Z","path":"contact/index.html","comments":1,"_id":"claqy94k00008bklg3g4me8fm","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"friends","date":"2021-07-20T13:25:30.000Z","type":"friends","layout":"friends","_content":"\n","source":"friends/index.md","raw":"---\ntitle: friends\ndate: 2021-7-20 21:25:30\ntype: \"friends\"\nlayout: \"friends\"\n---\n\n","updated":"2022-11-21T11:55:43.748Z","path":"friends/index.html","comments":1,"_id":"claqy94k7000abklg07bcey2b","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"tags","date":"2021-07-21T12:40:05.000Z","type":"tags","layout":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2021-07-21 20:40:05\ntype: \"tags\"\nlayout: \"tags\"\n---\n","updated":"2022-11-21T11:55:43.749Z","path":"tags/index.html","comments":1,"_id":"claqy94k9000fbklg02rt6m2g","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"Docker","top":false,"cover":false,"toc":true,"mathjax":true,"date":"2021-08-09T14:59:10.000Z","password":null,"summary":null,"_content":"\n#   \t\t\t\t\t\t\t\t\t\tdocker\n\n1.下载打开docker\n\n2.docker images\n\n![](1.png)\n\n3.docker pull ubuntu\n\n从Docker Hub下载ubuntu最新版镜像\n\n4.docker run --name test  -ti --rm ubuntu  /bin/bash\n\nti进入终端交互式操作\n\n进入镜像\n\n![](2.png)\n\n5.docker ps查看在运行的容器\n","source":"_posts/Docker.md","raw":"---\ntitle: Docker\ntop: false\ncover: false\ntoc: true\nmathjax: true\ndate: 2021-08-09 22:59:10\npassword:\nsummary:\ntags: notes\ncategories: Docker\n---\n\n#   \t\t\t\t\t\t\t\t\t\tdocker\n\n1.下载打开docker\n\n2.docker images\n\n![](1.png)\n\n3.docker pull ubuntu\n\n从Docker Hub下载ubuntu最新版镜像\n\n4.docker run --name test  -ti --rm ubuntu  /bin/bash\n\nti进入终端交互式操作\n\n进入镜像\n\n![](2.png)\n\n5.docker ps查看在运行的容器\n","slug":"Docker","published":1,"updated":"2022-11-21T11:55:43.541Z","comments":1,"layout":"post","photos":[],"link":"","_id":"claqy94jm0001bklg73sd5omv","content":"<h1 id=\"docker\"><a href=\"#docker\" class=\"headerlink\" title=\"docker\"></a>docker</h1><p>1.下载打开docker</p>\n<p>2.docker images</p>\n<p><img src=\"/2021/08/09/docker/1.png\"></p>\n<p>3.docker pull ubuntu</p>\n<p>从Docker Hub下载ubuntu最新版镜像</p>\n<p>4.docker run –name test  -ti –rm ubuntu  /bin/bash</p>\n<p>ti进入终端交互式操作</p>\n<p>进入镜像</p>\n<p><img src=\"/2021/08/09/docker/2.png\"></p>\n<p>5.docker ps查看在运行的容器</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"docker\"><a href=\"#docker\" class=\"headerlink\" title=\"docker\"></a>docker</h1><p>1.下载打开docker</p>\n<p>2.docker images</p>\n<p><img src=\"/2021/08/09/docker/1.png\"></p>\n<p>3.docker pull ubuntu</p>\n<p>从Docker Hub下载ubuntu最新版镜像</p>\n<p>4.docker run –name test  -ti –rm ubuntu  /bin/bash</p>\n<p>ti进入终端交互式操作</p>\n<p>进入镜像</p>\n<p><img src=\"/2021/08/09/docker/2.png\"></p>\n<p>5.docker ps查看在运行的容器</p>\n"},{"title":"HTML","top":false,"cover":false,"toc":true,"mathjax":true,"date":"2022-11-21T13:15:40.000Z","password":null,"summary":null,"_content":"\n\n\n# Html\n\n## 1.适合编写html的便利软件\n\nHBuilderx：https://www.dcloud.io/hbuilderx.html\n\n## 2.什么是html\n\n- 超文本标记语言\n- 并不是编程语言\n\n### 2.1网络三要素：协议，IP，端口\n\n- http://www.baidu.com:80（对标）\n\n\n\n### 2.2html的每一个标签都是成对出现\n\n```html\n<!-- html标签是html网页的根标签 -->\n<html> \n\t<head>\n\t\t<title>第一个html</title>\n\t</head>\n\t\n\t<!-- 我们主要关注这个body标签 -->\n\t<body>\n\t\t网页中的内容\n\t</body>\n</html>\n```\n\n## 3.标签介绍\n\n### 3.1 标签含义\n\n```txt\n<!DOCTYPE html> : 表示本文档遵循html5规范\n<html> ： 表示一个网页根标签/根元素（root element）\n<head> : 定义了一个html网页的头信息，主要是一些元数据【描述或者管理数据的数据】\n<meta charset=\"utf-8\"> : 设置浏览器以哪种编码来解析网页，如果不设置就有可能会产生乱码\n<title> : 设置浏览器的标签页的显示\n<body> : HTML所有要显示在网页的内容\n```\n\n### 3.2 单标签和双标签\n\n```html\n双标签：<title>双标签内部</title>\n单标签：<hr>，<br>\n  一般不需要在双标签内部输入内容时都可以简写为单标签\n```\n\n## 4.需要了解的见标签\n\n### 4.1标题标签，段落标签，换行标签以及水平线标签\n\n```html\n<h1>一级标题</h1>\n<h2>二级标题</h2>\n...一直到6级标题\n\n\n<p>这里添加的内容为一个段落 </p>\n<p>可以有多个p标签</p>\n相当于换行的功能\n\n换行标签  在需要换行的位置添加<br>就可以自动换行\n<br>\n\n水平线标签添加一条线\t单标签 <hr/>中的修饰内容可加可不加 \n<hr size=\"5\" color=\"red\" aign=\"left\"/>\n```\n\n### 4.2字体标签，特殊字符，文本格式标签以及锚点\n\n```html\n字体标签\n\t<font size =\"5\" ;color=\"red\"; face=\"宋体\">这里是要改变的字体</font>\n\n特殊字符\n\t&lt &gt\n\t<     >  转义字符 &lt就是<  &gt就是>的意思\n    \n文本格式标签\n\t粗体<strong>粗体</strong>\n    斜体<em>斜体</em>\n    删除线<del>删除线</del>\n    下划线<u>下划线</u>\n    大号<big>大号字体</big>\n    小号<small>小号字体</small>\n    \n        \n锚点\n    <a name=\"top\"></a>\n    <a harf=\"#top\">回到top这个定位了锚点的位置</a> （相当于回到顶部）\n```\n\n## 5.重要的标签\n\n### 5.1 div 和span\n\n- div和span都属于容器标签 可以用来存放任何东西 包括标签\n- 区别\n  - div换行\n  - span不换行  多个span共享一行\n\n```html\n<!DOCTYPE html>\n<html>\n\t<head>\n\t\t<meta charset=\"utf-8\" />\n\t\t<title>标题</title>\n\t</head>\n\t<body>\n\t\t<div style=\"border: 1px solid red; width: 300px; height: 200px;\">\n\t\t\t这里是div的内容在这里添加一个span容器容器的内容是我的span\n\t\t\t<span style=\"border: 1px solid blue;\">我是span</span>\n\t\t</div>\n\t\t<div>\n\t\t\t这里是第二个div\n\t\t</div>\n\t\t<span style=\"border: 1px solid red;\">这里是div外的span容器</span>\t\n\t</body>\n</html>\n```\n\n### 5.2 图片和超链接以及列表标签\n\n- 图片标签\n\n```html\n<body>\n    <img src=\"这里放图片的路径\" width=\"200\" heigth=\"200\" alt=\"当图片不能显示时出现的提示信息\" title=\"这里是鼠标放在图片上的提示信息\">\n</body>\n```\n\n- 超链接标签\n\n```html\n<body>\n    <a hraf=\"这里放需要跳转的链接路径 可以是绝对路径也可以是相对路径\" target=\"_self\">超链接</a>\n</body>\ntarget : 开启新链接的方式\n\t_blank: 在浏览器中打开一个新的窗口\n\t_parent: 在父窗口打开\n\t_self: 在当前窗口打开，默认\n\t_top: 在整个浏览器中打开链接，删除其他所有框架\n```\n\n\n\n- 列表标签\n  - 列表分为有序列表和无序列表\n\n```html\n1.有序列表\n\t有序可选项有: 数字 大小写字母 大小写阿拉伯数组i或者I\n<body>\n    <ol type = \"1\">\n       <li>新闻</li> \n        <li>娱乐</li>\n    </ol>\n</body>\n2.无序列表\n\t无序列表可选项：\n\t\t空心圆：circle\n\t\t实心圆：disc\n\t\t黑色实心方块：square\n<body>\n    <ul type=\"disc\">\n        <li>体育</li>\n    </ul>\n</body>\n```\n\n\n\n### 5.3表格标签\n\n#### 1.表格的结构化标签\n\n1. caption：表格的标题\n2. thead：表格的头部\n3. tbody：表格的整体\n4. tfoot：表格的尾部\n\n#### 2.表格的标签\n\n1. table：表格的根标签\n2. tr：   一个tr标签就表示一行\n3. td：   一个td标签表示一个单元格 \n   1. th和td一样 不过th用于thead中用来表示标题格\n\n#### 3.标签的属性\n\n1. border ：边框值 可选”0“或者“1”\n2. borderColor ：边框颜色\n3. align ：   表格对齐功能   center    left    right\n4. cellpadding :  单元格填充，单元格与内容之间的间距\n5. cellspacing ： 单元格和单元格之间的距离\n\n#### 4.跨行和跨列\n\n1. colspan：横向合并\n2. rowspan：纵向合并\n\n```html\n<!DOCTYPE html>\n<html>\n\t<head>\n\t\t<meta charset=\"utf-8\">\n\t\t<title>标题</title>\n\t</head>\n\t<body>\n\t\t<table border=\"1\" cellspacing=\"0\" cellpadding=\"10\" align=\"center\">\n\t\t\t<!-- 标题标签 -->\n\t\t\t<caption>每日工作计划表</caption>\n\t\t\t<!-- 表格头部 -->\n\t\t\t<thead>\n\t\t\t\t<tr>\n\t\t\t\t\t<th>序号</th>\n\t\t\t\t\t<th>工作事项</th>\n\t\t\t\t</tr>\n\t\t\t</thead>\n\t\t\t<!-- 表格主体 -->\n\t\t\t<tbody>\n\t\t\t\t<tr align=\"center\">\n\t\t\t\t\t<td>1</td>\n\t\t\t\t\t<td></td>\n\t\t\t\t</tr>\n\t\t\t</tbody>\n\t\t\t<!-- 表格底部 -->\n\t\t\t<tfoot>\n\t\t\t\t<tr align=\"center\">\n\t\t\t\t\t<td colspan=\"2\">版权所有</td>\n\t\t\t\t</tr>\n\t\t\t</tfoot>\n\t\t</table>\n\t</body>\n</html>\n```\n\n\n\n### 5.4表单标签\n\nform元素就是html中的表单标签。\n\n```html\n<form action=\"提交的表单的目标的地址\" method=\"post\">\n    ....\n</form>\n```\n\n5.4.1 表单标签中常用的标签框\n\n- 文本框\n- 密码框\n- 单选框\n- 复选框\n- 普通按钮\n- 提交按钮\n- 重置按钮\n- 上传选项\n- 下拉列表\n- 文本域\n- 隐藏域\n\n```html\n<!DOCTYPE html>\n<html>\n\t<head>\n\t\t<meta charset=\"utf-8\">\n\t\t<title>表单标签的标签框练习</title>\n\t</head>\n\t<body>\n\t\t<form>\n\t\t\t<!-- 文本框 -->\n\t\t\t<p>\n\t\t\t\t<!-- placeholder ： 提示文字 -->\n\t\t\t\t用户名称: <input type=\"text\" name=\"username\" placeholder=\"请输入用户名称\"/>\n\t\t\t</p>\n\t\t\t<!-- 密码框 -->\n\t\t\t<p>\n\t\t\t\t<!-- placeholder ： 提示文字 -->\n\t\t\t\t用户密码: <input type=\"password\" name=\"password\" placeholder=\"请输入用户密码\"/>\n\t\t\t</p>\n\t\t\t<!-- 单选框 -->\n\t\t\t<p>\n\t\t\t\t<!-- \n\t\t\t\tname ： 单选框的名字必须要相同，否则就无法实现单选 \n\t\t\t\tvalue : 手动的给单选项赋值\n\t\t\t\tchecked=\"checked\" : 加上了这句话表示默认的选项\n\t\t\t\t-->\n\t\t\t\t性别: <input type=\"radio\" name=\"gender\" value=\"1\" checked=\"checked\"/>男\n\t\t\t\t\t<input type=\"radio\" name=\"gender\" value=\"2\"/>女\n\t\t\t</p>\n\t\t\t<!-- 复选框 -->\n\t\t\t<p>\n\t\t\t\t爱好:<input type=\"checkbox\" name=\"hobby\" value=\"basketball\"/>篮球\n\t\t\t\t\t<input type=\"checkbox\" name=\"hobby\" value=\"football\"/>足球\n\t\t\t\t\t<input type=\"checkbox\" name=\"hobby\" value=\"pingpang\"/>乒乓球\n\t\t\t</p>\n\t\t\t\n\t\t\t<!-- 上传选项 -->\n\t\t\t<p>\n\t\t\t\t文件上传:<input type=\"file\" name=\"user\"/>\n\t\t\t</p>\n\t\t\t\n\t\t\t<!-- 下拉列表 \n\t\t\tmultiple : 开启下拉列表的多选模式\n\t\t\t-->\n\t\t\t<select name=\"addr\" >\n\t\t\t\t<option value=\"china\">中国</option>\n\t\t\t\t<option value=\"japan\">小日子</option>\n\t\t\t\t<option value=\"korea\">棒子</option>\n\t\t\t</select>\n\t\t\t\n\t\t\t<!-- 文本域 -->\n\t\t\t<textarea name=\"info\" rows=\"10\" cols=\"10\"></textarea>\n\t\t\t\n\t\t\t<!-- 隐藏域 -->\n\t\t\t<input type=\"hidden\" value=\"123\" name=\"hid\"/>\n\t\t\t\n\t\t\t<!-- 按钮 -->\n\t\t\t<input type=\"button\" value=\"我很普通\"/>\n\t\t\t<input type=\"reset\" value=\"重置\"/>\n\t\t\t\n\t\t\t<!-- 提交表单 -->\n\t\t\t<input type=\"image\" src=\"img/001.png\"/>\n\t\t\t<input type=\"submit\" value=\"提交\"/>\n\t\t</form>\n\t</body>\n</html>\n```\n\n","source":"_posts/HTML.md","raw":"---\ntitle: HTML\ntop: false\ncover: false\ntoc: true\nmathjax: true\ndate: 2022-11-21 21:15:40\npassword:\nsummary:\ntags: Study\ncategories: javaWeb\n---\n\n\n\n# Html\n\n## 1.适合编写html的便利软件\n\nHBuilderx：https://www.dcloud.io/hbuilderx.html\n\n## 2.什么是html\n\n- 超文本标记语言\n- 并不是编程语言\n\n### 2.1网络三要素：协议，IP，端口\n\n- http://www.baidu.com:80（对标）\n\n\n\n### 2.2html的每一个标签都是成对出现\n\n```html\n<!-- html标签是html网页的根标签 -->\n<html> \n\t<head>\n\t\t<title>第一个html</title>\n\t</head>\n\t\n\t<!-- 我们主要关注这个body标签 -->\n\t<body>\n\t\t网页中的内容\n\t</body>\n</html>\n```\n\n## 3.标签介绍\n\n### 3.1 标签含义\n\n```txt\n<!DOCTYPE html> : 表示本文档遵循html5规范\n<html> ： 表示一个网页根标签/根元素（root element）\n<head> : 定义了一个html网页的头信息，主要是一些元数据【描述或者管理数据的数据】\n<meta charset=\"utf-8\"> : 设置浏览器以哪种编码来解析网页，如果不设置就有可能会产生乱码\n<title> : 设置浏览器的标签页的显示\n<body> : HTML所有要显示在网页的内容\n```\n\n### 3.2 单标签和双标签\n\n```html\n双标签：<title>双标签内部</title>\n单标签：<hr>，<br>\n  一般不需要在双标签内部输入内容时都可以简写为单标签\n```\n\n## 4.需要了解的见标签\n\n### 4.1标题标签，段落标签，换行标签以及水平线标签\n\n```html\n<h1>一级标题</h1>\n<h2>二级标题</h2>\n...一直到6级标题\n\n\n<p>这里添加的内容为一个段落 </p>\n<p>可以有多个p标签</p>\n相当于换行的功能\n\n换行标签  在需要换行的位置添加<br>就可以自动换行\n<br>\n\n水平线标签添加一条线\t单标签 <hr/>中的修饰内容可加可不加 \n<hr size=\"5\" color=\"red\" aign=\"left\"/>\n```\n\n### 4.2字体标签，特殊字符，文本格式标签以及锚点\n\n```html\n字体标签\n\t<font size =\"5\" ;color=\"red\"; face=\"宋体\">这里是要改变的字体</font>\n\n特殊字符\n\t&lt &gt\n\t<     >  转义字符 &lt就是<  &gt就是>的意思\n    \n文本格式标签\n\t粗体<strong>粗体</strong>\n    斜体<em>斜体</em>\n    删除线<del>删除线</del>\n    下划线<u>下划线</u>\n    大号<big>大号字体</big>\n    小号<small>小号字体</small>\n    \n        \n锚点\n    <a name=\"top\"></a>\n    <a harf=\"#top\">回到top这个定位了锚点的位置</a> （相当于回到顶部）\n```\n\n## 5.重要的标签\n\n### 5.1 div 和span\n\n- div和span都属于容器标签 可以用来存放任何东西 包括标签\n- 区别\n  - div换行\n  - span不换行  多个span共享一行\n\n```html\n<!DOCTYPE html>\n<html>\n\t<head>\n\t\t<meta charset=\"utf-8\" />\n\t\t<title>标题</title>\n\t</head>\n\t<body>\n\t\t<div style=\"border: 1px solid red; width: 300px; height: 200px;\">\n\t\t\t这里是div的内容在这里添加一个span容器容器的内容是我的span\n\t\t\t<span style=\"border: 1px solid blue;\">我是span</span>\n\t\t</div>\n\t\t<div>\n\t\t\t这里是第二个div\n\t\t</div>\n\t\t<span style=\"border: 1px solid red;\">这里是div外的span容器</span>\t\n\t</body>\n</html>\n```\n\n### 5.2 图片和超链接以及列表标签\n\n- 图片标签\n\n```html\n<body>\n    <img src=\"这里放图片的路径\" width=\"200\" heigth=\"200\" alt=\"当图片不能显示时出现的提示信息\" title=\"这里是鼠标放在图片上的提示信息\">\n</body>\n```\n\n- 超链接标签\n\n```html\n<body>\n    <a hraf=\"这里放需要跳转的链接路径 可以是绝对路径也可以是相对路径\" target=\"_self\">超链接</a>\n</body>\ntarget : 开启新链接的方式\n\t_blank: 在浏览器中打开一个新的窗口\n\t_parent: 在父窗口打开\n\t_self: 在当前窗口打开，默认\n\t_top: 在整个浏览器中打开链接，删除其他所有框架\n```\n\n\n\n- 列表标签\n  - 列表分为有序列表和无序列表\n\n```html\n1.有序列表\n\t有序可选项有: 数字 大小写字母 大小写阿拉伯数组i或者I\n<body>\n    <ol type = \"1\">\n       <li>新闻</li> \n        <li>娱乐</li>\n    </ol>\n</body>\n2.无序列表\n\t无序列表可选项：\n\t\t空心圆：circle\n\t\t实心圆：disc\n\t\t黑色实心方块：square\n<body>\n    <ul type=\"disc\">\n        <li>体育</li>\n    </ul>\n</body>\n```\n\n\n\n### 5.3表格标签\n\n#### 1.表格的结构化标签\n\n1. caption：表格的标题\n2. thead：表格的头部\n3. tbody：表格的整体\n4. tfoot：表格的尾部\n\n#### 2.表格的标签\n\n1. table：表格的根标签\n2. tr：   一个tr标签就表示一行\n3. td：   一个td标签表示一个单元格 \n   1. th和td一样 不过th用于thead中用来表示标题格\n\n#### 3.标签的属性\n\n1. border ：边框值 可选”0“或者“1”\n2. borderColor ：边框颜色\n3. align ：   表格对齐功能   center    left    right\n4. cellpadding :  单元格填充，单元格与内容之间的间距\n5. cellspacing ： 单元格和单元格之间的距离\n\n#### 4.跨行和跨列\n\n1. colspan：横向合并\n2. rowspan：纵向合并\n\n```html\n<!DOCTYPE html>\n<html>\n\t<head>\n\t\t<meta charset=\"utf-8\">\n\t\t<title>标题</title>\n\t</head>\n\t<body>\n\t\t<table border=\"1\" cellspacing=\"0\" cellpadding=\"10\" align=\"center\">\n\t\t\t<!-- 标题标签 -->\n\t\t\t<caption>每日工作计划表</caption>\n\t\t\t<!-- 表格头部 -->\n\t\t\t<thead>\n\t\t\t\t<tr>\n\t\t\t\t\t<th>序号</th>\n\t\t\t\t\t<th>工作事项</th>\n\t\t\t\t</tr>\n\t\t\t</thead>\n\t\t\t<!-- 表格主体 -->\n\t\t\t<tbody>\n\t\t\t\t<tr align=\"center\">\n\t\t\t\t\t<td>1</td>\n\t\t\t\t\t<td></td>\n\t\t\t\t</tr>\n\t\t\t</tbody>\n\t\t\t<!-- 表格底部 -->\n\t\t\t<tfoot>\n\t\t\t\t<tr align=\"center\">\n\t\t\t\t\t<td colspan=\"2\">版权所有</td>\n\t\t\t\t</tr>\n\t\t\t</tfoot>\n\t\t</table>\n\t</body>\n</html>\n```\n\n\n\n### 5.4表单标签\n\nform元素就是html中的表单标签。\n\n```html\n<form action=\"提交的表单的目标的地址\" method=\"post\">\n    ....\n</form>\n```\n\n5.4.1 表单标签中常用的标签框\n\n- 文本框\n- 密码框\n- 单选框\n- 复选框\n- 普通按钮\n- 提交按钮\n- 重置按钮\n- 上传选项\n- 下拉列表\n- 文本域\n- 隐藏域\n\n```html\n<!DOCTYPE html>\n<html>\n\t<head>\n\t\t<meta charset=\"utf-8\">\n\t\t<title>表单标签的标签框练习</title>\n\t</head>\n\t<body>\n\t\t<form>\n\t\t\t<!-- 文本框 -->\n\t\t\t<p>\n\t\t\t\t<!-- placeholder ： 提示文字 -->\n\t\t\t\t用户名称: <input type=\"text\" name=\"username\" placeholder=\"请输入用户名称\"/>\n\t\t\t</p>\n\t\t\t<!-- 密码框 -->\n\t\t\t<p>\n\t\t\t\t<!-- placeholder ： 提示文字 -->\n\t\t\t\t用户密码: <input type=\"password\" name=\"password\" placeholder=\"请输入用户密码\"/>\n\t\t\t</p>\n\t\t\t<!-- 单选框 -->\n\t\t\t<p>\n\t\t\t\t<!-- \n\t\t\t\tname ： 单选框的名字必须要相同，否则就无法实现单选 \n\t\t\t\tvalue : 手动的给单选项赋值\n\t\t\t\tchecked=\"checked\" : 加上了这句话表示默认的选项\n\t\t\t\t-->\n\t\t\t\t性别: <input type=\"radio\" name=\"gender\" value=\"1\" checked=\"checked\"/>男\n\t\t\t\t\t<input type=\"radio\" name=\"gender\" value=\"2\"/>女\n\t\t\t</p>\n\t\t\t<!-- 复选框 -->\n\t\t\t<p>\n\t\t\t\t爱好:<input type=\"checkbox\" name=\"hobby\" value=\"basketball\"/>篮球\n\t\t\t\t\t<input type=\"checkbox\" name=\"hobby\" value=\"football\"/>足球\n\t\t\t\t\t<input type=\"checkbox\" name=\"hobby\" value=\"pingpang\"/>乒乓球\n\t\t\t</p>\n\t\t\t\n\t\t\t<!-- 上传选项 -->\n\t\t\t<p>\n\t\t\t\t文件上传:<input type=\"file\" name=\"user\"/>\n\t\t\t</p>\n\t\t\t\n\t\t\t<!-- 下拉列表 \n\t\t\tmultiple : 开启下拉列表的多选模式\n\t\t\t-->\n\t\t\t<select name=\"addr\" >\n\t\t\t\t<option value=\"china\">中国</option>\n\t\t\t\t<option value=\"japan\">小日子</option>\n\t\t\t\t<option value=\"korea\">棒子</option>\n\t\t\t</select>\n\t\t\t\n\t\t\t<!-- 文本域 -->\n\t\t\t<textarea name=\"info\" rows=\"10\" cols=\"10\"></textarea>\n\t\t\t\n\t\t\t<!-- 隐藏域 -->\n\t\t\t<input type=\"hidden\" value=\"123\" name=\"hid\"/>\n\t\t\t\n\t\t\t<!-- 按钮 -->\n\t\t\t<input type=\"button\" value=\"我很普通\"/>\n\t\t\t<input type=\"reset\" value=\"重置\"/>\n\t\t\t\n\t\t\t<!-- 提交表单 -->\n\t\t\t<input type=\"image\" src=\"img/001.png\"/>\n\t\t\t<input type=\"submit\" value=\"提交\"/>\n\t\t</form>\n\t</body>\n</html>\n```\n\n","slug":"HTML","published":1,"updated":"2022-11-21T13:16:42.286Z","comments":1,"layout":"post","photos":[],"link":"","_id":"claqy94jr0003bklg2bw90cx4","content":"<h1 id=\"Html\"><a href=\"#Html\" class=\"headerlink\" title=\"Html\"></a>Html</h1><h2 id=\"1-适合编写html的便利软件\"><a href=\"#1-适合编写html的便利软件\" class=\"headerlink\" title=\"1.适合编写html的便利软件\"></a>1.适合编写html的便利软件</h2><p>HBuilderx：<a href=\"https://www.dcloud.io/hbuilderx.html\">https://www.dcloud.io/hbuilderx.html</a></p>\n<h2 id=\"2-什么是html\"><a href=\"#2-什么是html\" class=\"headerlink\" title=\"2.什么是html\"></a>2.什么是html</h2><ul>\n<li>超文本标记语言</li>\n<li>并不是编程语言</li>\n</ul>\n<h3 id=\"2-1网络三要素：协议，IP，端口\"><a href=\"#2-1网络三要素：协议，IP，端口\" class=\"headerlink\" title=\"2.1网络三要素：协议，IP，端口\"></a>2.1网络三要素：协议，IP，端口</h3><ul>\n<li><a href=\"http://www.baidu.com:80（对标）\">http://www.baidu.com:80（对标）</a></li>\n</ul>\n<h3 id=\"2-2html的每一个标签都是成对出现\"><a href=\"#2-2html的每一个标签都是成对出现\" class=\"headerlink\" title=\"2.2html的每一个标签都是成对出现\"></a>2.2html的每一个标签都是成对出现</h3><pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token comment\">&lt;!-- html标签是html网页的根标签 --></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">></span></span> \n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>第一个html<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n\t\n\t<span class=\"token comment\">&lt;!-- 我们主要关注这个body标签 --></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n\t\t网页中的内容\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"3-标签介绍\"><a href=\"#3-标签介绍\" class=\"headerlink\" title=\"3.标签介绍\"></a>3.标签介绍</h2><h3 id=\"3-1-标签含义\"><a href=\"#3-1-标签含义\" class=\"headerlink\" title=\"3.1 标签含义\"></a>3.1 标签含义</h3><pre class=\"line-numbers language-txt\" data-language=\"txt\"><code class=\"language-txt\">&lt;!DOCTYPE html> : 表示本文档遵循html5规范\n&lt;html> ： 表示一个网页根标签/根元素（root element）\n&lt;head> : 定义了一个html网页的头信息，主要是一些元数据【描述或者管理数据的数据】\n&lt;meta charset=\"utf-8\"> : 设置浏览器以哪种编码来解析网页，如果不设置就有可能会产生乱码\n&lt;title> : 设置浏览器的标签页的显示\n&lt;body> : HTML所有要显示在网页的内容<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"3-2-单标签和双标签\"><a href=\"#3-2-单标签和双标签\" class=\"headerlink\" title=\"3.2 单标签和双标签\"></a>3.2 单标签和双标签</h3><pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\">双标签：<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>双标签内部<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span>\n单标签：<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>hr</span><span class=\"token punctuation\">></span></span>，<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span><span class=\"token punctuation\">></span></span>\n  一般不需要在双标签内部输入内容时都可以简写为单标签<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"4-需要了解的见标签\"><a href=\"#4-需要了解的见标签\" class=\"headerlink\" title=\"4.需要了解的见标签\"></a>4.需要了解的见标签</h2><h3 id=\"4-1标题标签，段落标签，换行标签以及水平线标签\"><a href=\"#4-1标题标签，段落标签，换行标签以及水平线标签\" class=\"headerlink\" title=\"4.1标题标签，段落标签，换行标签以及水平线标签\"></a>4.1标题标签，段落标签，换行标签以及水平线标签</h3><pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span>一级标题<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">></span></span>二级标题<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">></span></span>\n...一直到6级标题\n\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>这里添加的内容为一个段落 <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>可以有多个p标签<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n相当于换行的功能\n\n换行标签  在需要换行的位置添加<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span><span class=\"token punctuation\">></span></span>就可以自动换行\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span><span class=\"token punctuation\">></span></span>\n\n水平线标签添加一条线\t单标签 <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>hr</span><span class=\"token punctuation\">/></span></span>中的修饰内容可加可不加 \n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>hr</span> <span class=\"token attr-name\">size</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>5<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">color</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>red<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">aign</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>left<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"4-2字体标签，特殊字符，文本格式标签以及锚点\"><a href=\"#4-2字体标签，特殊字符，文本格式标签以及锚点\" class=\"headerlink\" title=\"4.2字体标签，特殊字符，文本格式标签以及锚点\"></a>4.2字体标签，特殊字符，文本格式标签以及锚点</h3><pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\">字体标签\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>font</span> <span class=\"token attr-name\">size</span> <span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>5<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">;color</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>red<span class=\"token punctuation\">\"</span></span><span class=\"token attr-name\">;</span> <span class=\"token attr-name\">face</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>宋体<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>这里是要改变的字体<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>font</span><span class=\"token punctuation\">></span></span>\n\n特殊字符\n\t&amp;lt &amp;gt\n\t&lt;     >  转义字符 &amp;lt就是&lt;  &amp;gt就是>的意思\n    \n文本格式标签\n\t粗体<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>strong</span><span class=\"token punctuation\">></span></span>粗体<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>strong</span><span class=\"token punctuation\">></span></span>\n    斜体<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>em</span><span class=\"token punctuation\">></span></span>斜体<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>em</span><span class=\"token punctuation\">></span></span>\n    删除线<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>del</span><span class=\"token punctuation\">></span></span>删除线<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>del</span><span class=\"token punctuation\">></span></span>\n    下划线<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>u</span><span class=\"token punctuation\">></span></span>下划线<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>u</span><span class=\"token punctuation\">></span></span>\n    大号<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>big</span><span class=\"token punctuation\">></span></span>大号字体<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>big</span><span class=\"token punctuation\">></span></span>\n    小号<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>small</span><span class=\"token punctuation\">></span></span>小号字体<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>small</span><span class=\"token punctuation\">></span></span>\n    \n        \n锚点\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>top<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">harf</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>#top<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>回到top这个定位了锚点的位置<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span> （相当于回到顶部）<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"5-重要的标签\"><a href=\"#5-重要的标签\" class=\"headerlink\" title=\"5.重要的标签\"></a>5.重要的标签</h2><h3 id=\"5-1-div-和span\"><a href=\"#5-1-div-和span\" class=\"headerlink\" title=\"5.1 div 和span\"></a>5.1 div 和span</h3><ul>\n<li>div和span都属于容器标签 可以用来存放任何东西 包括标签</li>\n<li>区别<ul>\n<li>div换行</li>\n<li>span不换行  多个span共享一行</li>\n</ul>\n</li>\n</ul>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>utf-8<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>标题<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">border</span><span class=\"token punctuation\">:</span> 1px solid red<span class=\"token punctuation\">;</span> <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 300px<span class=\"token punctuation\">;</span> <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 200px<span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">></span></span>\n\t\t\t这里是div的内容在这里添加一个span容器容器的内容是我的span\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">border</span><span class=\"token punctuation\">:</span> 1px solid blue<span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">></span></span>我是span<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span>\n\t\t\t这里是第二个div\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">border</span><span class=\"token punctuation\">:</span> 1px solid red<span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">></span></span>这里是div外的span容器<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span>\t\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"5-2-图片和超链接以及列表标签\"><a href=\"#5-2-图片和超链接以及列表标签\" class=\"headerlink\" title=\"5.2 图片和超链接以及列表标签\"></a>5.2 图片和超链接以及列表标签</h3><ul>\n<li>图片标签</li>\n</ul>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>这里放图片的路径<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>200<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">heigth</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>200<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>当图片不能显示时出现的提示信息<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">title</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>这里是鼠标放在图片上的提示信息<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>超链接标签</li>\n</ul>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">hraf</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>这里放需要跳转的链接路径 可以是绝对路径也可以是相对路径<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">target</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>_self<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>超链接<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\ntarget : 开启新链接的方式\n\t_blank: 在浏览器中打开一个新的窗口\n\t_parent: 在父窗口打开\n\t_self: 在当前窗口打开，默认\n\t_top: 在整个浏览器中打开链接，删除其他所有框架<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<ul>\n<li>列表标签<ul>\n<li>列表分为有序列表和无序列表</li>\n</ul>\n</li>\n</ul>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\">1.有序列表\n\t有序可选项有: 数字 大小写字母 大小写阿拉伯数组i或者I\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ol</span> <span class=\"token attr-name\">type</span> <span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span> <span class=\"token punctuation\">\"</span>1<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n       <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span>新闻<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span> \n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span>娱乐<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ol</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n2.无序列表\n\t无序列表可选项：\n\t\t空心圆：circle\n\t\t实心圆：disc\n\t\t黑色实心方块：square\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>disc<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span>体育<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h3 id=\"5-3表格标签\"><a href=\"#5-3表格标签\" class=\"headerlink\" title=\"5.3表格标签\"></a>5.3表格标签</h3><h4 id=\"1-表格的结构化标签\"><a href=\"#1-表格的结构化标签\" class=\"headerlink\" title=\"1.表格的结构化标签\"></a>1.表格的结构化标签</h4><ol>\n<li>caption：表格的标题</li>\n<li>thead：表格的头部</li>\n<li>tbody：表格的整体</li>\n<li>tfoot：表格的尾部</li>\n</ol>\n<h4 id=\"2-表格的标签\"><a href=\"#2-表格的标签\" class=\"headerlink\" title=\"2.表格的标签\"></a>2.表格的标签</h4><ol>\n<li>table：表格的根标签</li>\n<li>tr：   一个tr标签就表示一行</li>\n<li>td：   一个td标签表示一个单元格 <ol>\n<li>th和td一样 不过th用于thead中用来表示标题格</li>\n</ol>\n</li>\n</ol>\n<h4 id=\"3-标签的属性\"><a href=\"#3-标签的属性\" class=\"headerlink\" title=\"3.标签的属性\"></a>3.标签的属性</h4><ol>\n<li>border ：边框值 可选”0“或者“1”</li>\n<li>borderColor ：边框颜色</li>\n<li>align ：   表格对齐功能   center    left    right</li>\n<li>cellpadding :  单元格填充，单元格与内容之间的间距</li>\n<li>cellspacing ： 单元格和单元格之间的距离</li>\n</ol>\n<h4 id=\"4-跨行和跨列\"><a href=\"#4-跨行和跨列\" class=\"headerlink\" title=\"4.跨行和跨列\"></a>4.跨行和跨列</h4><ol>\n<li>colspan：横向合并</li>\n<li>rowspan：纵向合并</li>\n</ol>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>utf-8<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>标题<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>table</span> <span class=\"token attr-name\">border</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>1<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">cellspacing</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">cellpadding</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>10<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">align</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>center<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t\t\t<span class=\"token comment\">&lt;!-- 标题标签 --></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>caption</span><span class=\"token punctuation\">></span></span>每日工作计划表<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>caption</span><span class=\"token punctuation\">></span></span>\n\t\t\t<span class=\"token comment\">&lt;!-- 表格头部 --></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>thead</span><span class=\"token punctuation\">></span></span>\n\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>tr</span><span class=\"token punctuation\">></span></span>\n\t\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>th</span><span class=\"token punctuation\">></span></span>序号<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>th</span><span class=\"token punctuation\">></span></span>\n\t\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>th</span><span class=\"token punctuation\">></span></span>工作事项<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>th</span><span class=\"token punctuation\">></span></span>\n\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>tr</span><span class=\"token punctuation\">></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>thead</span><span class=\"token punctuation\">></span></span>\n\t\t\t<span class=\"token comment\">&lt;!-- 表格主体 --></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>tbody</span><span class=\"token punctuation\">></span></span>\n\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>tr</span> <span class=\"token attr-name\">align</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>center<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span><span class=\"token punctuation\">></span></span>1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">></span></span>\n\t\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">></span></span>\n\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>tr</span><span class=\"token punctuation\">></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>tbody</span><span class=\"token punctuation\">></span></span>\n\t\t\t<span class=\"token comment\">&lt;!-- 表格底部 --></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>tfoot</span><span class=\"token punctuation\">></span></span>\n\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>tr</span> <span class=\"token attr-name\">align</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>center<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span> <span class=\"token attr-name\">colspan</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>2<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>版权所有<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">></span></span>\n\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>tr</span><span class=\"token punctuation\">></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>tfoot</span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>table</span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h3 id=\"5-4表单标签\"><a href=\"#5-4表单标签\" class=\"headerlink\" title=\"5.4表单标签\"></a>5.4表单标签</h3><p>form元素就是html中的表单标签。</p>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span> <span class=\"token attr-name\">action</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>提交的表单的目标的地址<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">method</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>post<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    ....\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<p>5.4.1 表单标签中常用的标签框</p>\n<ul>\n<li>文本框</li>\n<li>密码框</li>\n<li>单选框</li>\n<li>复选框</li>\n<li>普通按钮</li>\n<li>提交按钮</li>\n<li>重置按钮</li>\n<li>上传选项</li>\n<li>下拉列表</li>\n<li>文本域</li>\n<li>隐藏域</li>\n</ul>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>utf-8<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>表单标签的标签框练习<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span><span class=\"token punctuation\">></span></span>\n\t\t\t<span class=\"token comment\">&lt;!-- 文本框 --></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>\n\t\t\t\t<span class=\"token comment\">&lt;!-- placeholder ： 提示文字 --></span>\n\t\t\t\t用户名称: <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>username<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">placeholder</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>请输入用户名称<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n\t\t\t<span class=\"token comment\">&lt;!-- 密码框 --></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>\n\t\t\t\t<span class=\"token comment\">&lt;!-- placeholder ： 提示文字 --></span>\n\t\t\t\t用户密码: <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>password<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>password<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">placeholder</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>请输入用户密码<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n\t\t\t<span class=\"token comment\">&lt;!-- 单选框 --></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>\n\t\t\t\t<span class=\"token comment\">&lt;!-- \n\t\t\t\tname ： 单选框的名字必须要相同，否则就无法实现单选 \n\t\t\t\tvalue : 手动的给单选项赋值\n\t\t\t\tchecked=\"checked\" : 加上了这句话表示默认的选项\n\t\t\t\t--></span>\n\t\t\t\t性别: <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>radio<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>gender<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>1<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">checked</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>checked<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>男\n\t\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>radio<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>gender<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>2<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>女\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n\t\t\t<span class=\"token comment\">&lt;!-- 复选框 --></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>\n\t\t\t\t爱好:<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>checkbox<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>hobby<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>basketball<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>篮球\n\t\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>checkbox<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>hobby<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>football<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>足球\n\t\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>checkbox<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>hobby<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>pingpang<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>乒乓球\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n\t\t\t\n\t\t\t<span class=\"token comment\">&lt;!-- 上传选项 --></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>\n\t\t\t\t文件上传:<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>file<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>user<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n\t\t\t\n\t\t\t<span class=\"token comment\">&lt;!-- 下拉列表 \n\t\t\tmultiple : 开启下拉列表的多选模式\n\t\t\t--></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>select</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>addr<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">></span></span>\n\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>option</span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>china<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>中国<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>option</span><span class=\"token punctuation\">></span></span>\n\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>option</span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>japan<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>小日子<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>option</span><span class=\"token punctuation\">></span></span>\n\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>option</span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>korea<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>棒子<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>option</span><span class=\"token punctuation\">></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>select</span><span class=\"token punctuation\">></span></span>\n\t\t\t\n\t\t\t<span class=\"token comment\">&lt;!-- 文本域 --></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>textarea</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>info<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">rows</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>10<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">cols</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>10<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>textarea</span><span class=\"token punctuation\">></span></span>\n\t\t\t\n\t\t\t<span class=\"token comment\">&lt;!-- 隐藏域 --></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>hidden<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>123<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>hid<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n\t\t\t\n\t\t\t<span class=\"token comment\">&lt;!-- 按钮 --></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>button<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>我很普通<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>reset<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>重置<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n\t\t\t\n\t\t\t<span class=\"token comment\">&lt;!-- 提交表单 --></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>image<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>img/001.png<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>submit<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>提交<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Html\"><a href=\"#Html\" class=\"headerlink\" title=\"Html\"></a>Html</h1><h2 id=\"1-适合编写html的便利软件\"><a href=\"#1-适合编写html的便利软件\" class=\"headerlink\" title=\"1.适合编写html的便利软件\"></a>1.适合编写html的便利软件</h2><p>HBuilderx：<a href=\"https://www.dcloud.io/hbuilderx.html\">https://www.dcloud.io/hbuilderx.html</a></p>\n<h2 id=\"2-什么是html\"><a href=\"#2-什么是html\" class=\"headerlink\" title=\"2.什么是html\"></a>2.什么是html</h2><ul>\n<li>超文本标记语言</li>\n<li>并不是编程语言</li>\n</ul>\n<h3 id=\"2-1网络三要素：协议，IP，端口\"><a href=\"#2-1网络三要素：协议，IP，端口\" class=\"headerlink\" title=\"2.1网络三要素：协议，IP，端口\"></a>2.1网络三要素：协议，IP，端口</h3><ul>\n<li><a href=\"http://www.baidu.com:80（对标）\">http://www.baidu.com:80（对标）</a></li>\n</ul>\n<h3 id=\"2-2html的每一个标签都是成对出现\"><a href=\"#2-2html的每一个标签都是成对出现\" class=\"headerlink\" title=\"2.2html的每一个标签都是成对出现\"></a>2.2html的每一个标签都是成对出现</h3><pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token comment\">&lt;!-- html标签是html网页的根标签 --></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">></span></span> \n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>第一个html<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n\t\n\t<span class=\"token comment\">&lt;!-- 我们主要关注这个body标签 --></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n\t\t网页中的内容\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"3-标签介绍\"><a href=\"#3-标签介绍\" class=\"headerlink\" title=\"3.标签介绍\"></a>3.标签介绍</h2><h3 id=\"3-1-标签含义\"><a href=\"#3-1-标签含义\" class=\"headerlink\" title=\"3.1 标签含义\"></a>3.1 标签含义</h3><pre class=\"line-numbers language-txt\" data-language=\"txt\"><code class=\"language-txt\">&lt;!DOCTYPE html> : 表示本文档遵循html5规范\n&lt;html> ： 表示一个网页根标签/根元素（root element）\n&lt;head> : 定义了一个html网页的头信息，主要是一些元数据【描述或者管理数据的数据】\n&lt;meta charset=\"utf-8\"> : 设置浏览器以哪种编码来解析网页，如果不设置就有可能会产生乱码\n&lt;title> : 设置浏览器的标签页的显示\n&lt;body> : HTML所有要显示在网页的内容<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"3-2-单标签和双标签\"><a href=\"#3-2-单标签和双标签\" class=\"headerlink\" title=\"3.2 单标签和双标签\"></a>3.2 单标签和双标签</h3><pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\">双标签：<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>双标签内部<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span>\n单标签：<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>hr</span><span class=\"token punctuation\">></span></span>，<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span><span class=\"token punctuation\">></span></span>\n  一般不需要在双标签内部输入内容时都可以简写为单标签<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"4-需要了解的见标签\"><a href=\"#4-需要了解的见标签\" class=\"headerlink\" title=\"4.需要了解的见标签\"></a>4.需要了解的见标签</h2><h3 id=\"4-1标题标签，段落标签，换行标签以及水平线标签\"><a href=\"#4-1标题标签，段落标签，换行标签以及水平线标签\" class=\"headerlink\" title=\"4.1标题标签，段落标签，换行标签以及水平线标签\"></a>4.1标题标签，段落标签，换行标签以及水平线标签</h3><pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span>一级标题<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">></span></span>二级标题<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">></span></span>\n...一直到6级标题\n\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>这里添加的内容为一个段落 <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>可以有多个p标签<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n相当于换行的功能\n\n换行标签  在需要换行的位置添加<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span><span class=\"token punctuation\">></span></span>就可以自动换行\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span><span class=\"token punctuation\">></span></span>\n\n水平线标签添加一条线\t单标签 <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>hr</span><span class=\"token punctuation\">/></span></span>中的修饰内容可加可不加 \n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>hr</span> <span class=\"token attr-name\">size</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>5<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">color</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>red<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">aign</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>left<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"4-2字体标签，特殊字符，文本格式标签以及锚点\"><a href=\"#4-2字体标签，特殊字符，文本格式标签以及锚点\" class=\"headerlink\" title=\"4.2字体标签，特殊字符，文本格式标签以及锚点\"></a>4.2字体标签，特殊字符，文本格式标签以及锚点</h3><pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\">字体标签\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>font</span> <span class=\"token attr-name\">size</span> <span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>5<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">;color</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>red<span class=\"token punctuation\">\"</span></span><span class=\"token attr-name\">;</span> <span class=\"token attr-name\">face</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>宋体<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>这里是要改变的字体<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>font</span><span class=\"token punctuation\">></span></span>\n\n特殊字符\n\t&amp;lt &amp;gt\n\t&lt;     >  转义字符 &amp;lt就是&lt;  &amp;gt就是>的意思\n    \n文本格式标签\n\t粗体<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>strong</span><span class=\"token punctuation\">></span></span>粗体<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>strong</span><span class=\"token punctuation\">></span></span>\n    斜体<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>em</span><span class=\"token punctuation\">></span></span>斜体<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>em</span><span class=\"token punctuation\">></span></span>\n    删除线<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>del</span><span class=\"token punctuation\">></span></span>删除线<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>del</span><span class=\"token punctuation\">></span></span>\n    下划线<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>u</span><span class=\"token punctuation\">></span></span>下划线<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>u</span><span class=\"token punctuation\">></span></span>\n    大号<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>big</span><span class=\"token punctuation\">></span></span>大号字体<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>big</span><span class=\"token punctuation\">></span></span>\n    小号<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>small</span><span class=\"token punctuation\">></span></span>小号字体<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>small</span><span class=\"token punctuation\">></span></span>\n    \n        \n锚点\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>top<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">harf</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>#top<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>回到top这个定位了锚点的位置<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span> （相当于回到顶部）<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"5-重要的标签\"><a href=\"#5-重要的标签\" class=\"headerlink\" title=\"5.重要的标签\"></a>5.重要的标签</h2><h3 id=\"5-1-div-和span\"><a href=\"#5-1-div-和span\" class=\"headerlink\" title=\"5.1 div 和span\"></a>5.1 div 和span</h3><ul>\n<li>div和span都属于容器标签 可以用来存放任何东西 包括标签</li>\n<li>区别<ul>\n<li>div换行</li>\n<li>span不换行  多个span共享一行</li>\n</ul>\n</li>\n</ul>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>utf-8<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>标题<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">border</span><span class=\"token punctuation\">:</span> 1px solid red<span class=\"token punctuation\">;</span> <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 300px<span class=\"token punctuation\">;</span> <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 200px<span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">></span></span>\n\t\t\t这里是div的内容在这里添加一个span容器容器的内容是我的span\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">border</span><span class=\"token punctuation\">:</span> 1px solid blue<span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">></span></span>我是span<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span>\n\t\t\t这里是第二个div\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">border</span><span class=\"token punctuation\">:</span> 1px solid red<span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">></span></span>这里是div外的span容器<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span>\t\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"5-2-图片和超链接以及列表标签\"><a href=\"#5-2-图片和超链接以及列表标签\" class=\"headerlink\" title=\"5.2 图片和超链接以及列表标签\"></a>5.2 图片和超链接以及列表标签</h3><ul>\n<li>图片标签</li>\n</ul>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>这里放图片的路径<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>200<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">heigth</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>200<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>当图片不能显示时出现的提示信息<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">title</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>这里是鼠标放在图片上的提示信息<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>超链接标签</li>\n</ul>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">hraf</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>这里放需要跳转的链接路径 可以是绝对路径也可以是相对路径<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">target</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>_self<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>超链接<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\ntarget : 开启新链接的方式\n\t_blank: 在浏览器中打开一个新的窗口\n\t_parent: 在父窗口打开\n\t_self: 在当前窗口打开，默认\n\t_top: 在整个浏览器中打开链接，删除其他所有框架<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<ul>\n<li>列表标签<ul>\n<li>列表分为有序列表和无序列表</li>\n</ul>\n</li>\n</ul>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\">1.有序列表\n\t有序可选项有: 数字 大小写字母 大小写阿拉伯数组i或者I\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ol</span> <span class=\"token attr-name\">type</span> <span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span> <span class=\"token punctuation\">\"</span>1<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n       <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span>新闻<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span> \n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span>娱乐<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ol</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n2.无序列表\n\t无序列表可选项：\n\t\t空心圆：circle\n\t\t实心圆：disc\n\t\t黑色实心方块：square\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>disc<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span>体育<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h3 id=\"5-3表格标签\"><a href=\"#5-3表格标签\" class=\"headerlink\" title=\"5.3表格标签\"></a>5.3表格标签</h3><h4 id=\"1-表格的结构化标签\"><a href=\"#1-表格的结构化标签\" class=\"headerlink\" title=\"1.表格的结构化标签\"></a>1.表格的结构化标签</h4><ol>\n<li>caption：表格的标题</li>\n<li>thead：表格的头部</li>\n<li>tbody：表格的整体</li>\n<li>tfoot：表格的尾部</li>\n</ol>\n<h4 id=\"2-表格的标签\"><a href=\"#2-表格的标签\" class=\"headerlink\" title=\"2.表格的标签\"></a>2.表格的标签</h4><ol>\n<li>table：表格的根标签</li>\n<li>tr：   一个tr标签就表示一行</li>\n<li>td：   一个td标签表示一个单元格 <ol>\n<li>th和td一样 不过th用于thead中用来表示标题格</li>\n</ol>\n</li>\n</ol>\n<h4 id=\"3-标签的属性\"><a href=\"#3-标签的属性\" class=\"headerlink\" title=\"3.标签的属性\"></a>3.标签的属性</h4><ol>\n<li>border ：边框值 可选”0“或者“1”</li>\n<li>borderColor ：边框颜色</li>\n<li>align ：   表格对齐功能   center    left    right</li>\n<li>cellpadding :  单元格填充，单元格与内容之间的间距</li>\n<li>cellspacing ： 单元格和单元格之间的距离</li>\n</ol>\n<h4 id=\"4-跨行和跨列\"><a href=\"#4-跨行和跨列\" class=\"headerlink\" title=\"4.跨行和跨列\"></a>4.跨行和跨列</h4><ol>\n<li>colspan：横向合并</li>\n<li>rowspan：纵向合并</li>\n</ol>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>utf-8<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>标题<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>table</span> <span class=\"token attr-name\">border</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>1<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">cellspacing</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">cellpadding</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>10<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">align</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>center<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t\t\t<span class=\"token comment\">&lt;!-- 标题标签 --></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>caption</span><span class=\"token punctuation\">></span></span>每日工作计划表<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>caption</span><span class=\"token punctuation\">></span></span>\n\t\t\t<span class=\"token comment\">&lt;!-- 表格头部 --></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>thead</span><span class=\"token punctuation\">></span></span>\n\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>tr</span><span class=\"token punctuation\">></span></span>\n\t\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>th</span><span class=\"token punctuation\">></span></span>序号<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>th</span><span class=\"token punctuation\">></span></span>\n\t\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>th</span><span class=\"token punctuation\">></span></span>工作事项<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>th</span><span class=\"token punctuation\">></span></span>\n\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>tr</span><span class=\"token punctuation\">></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>thead</span><span class=\"token punctuation\">></span></span>\n\t\t\t<span class=\"token comment\">&lt;!-- 表格主体 --></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>tbody</span><span class=\"token punctuation\">></span></span>\n\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>tr</span> <span class=\"token attr-name\">align</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>center<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span><span class=\"token punctuation\">></span></span>1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">></span></span>\n\t\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">></span></span>\n\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>tr</span><span class=\"token punctuation\">></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>tbody</span><span class=\"token punctuation\">></span></span>\n\t\t\t<span class=\"token comment\">&lt;!-- 表格底部 --></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>tfoot</span><span class=\"token punctuation\">></span></span>\n\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>tr</span> <span class=\"token attr-name\">align</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>center<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span> <span class=\"token attr-name\">colspan</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>2<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>版权所有<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">></span></span>\n\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>tr</span><span class=\"token punctuation\">></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>tfoot</span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>table</span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h3 id=\"5-4表单标签\"><a href=\"#5-4表单标签\" class=\"headerlink\" title=\"5.4表单标签\"></a>5.4表单标签</h3><p>form元素就是html中的表单标签。</p>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span> <span class=\"token attr-name\">action</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>提交的表单的目标的地址<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">method</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>post<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    ....\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<p>5.4.1 表单标签中常用的标签框</p>\n<ul>\n<li>文本框</li>\n<li>密码框</li>\n<li>单选框</li>\n<li>复选框</li>\n<li>普通按钮</li>\n<li>提交按钮</li>\n<li>重置按钮</li>\n<li>上传选项</li>\n<li>下拉列表</li>\n<li>文本域</li>\n<li>隐藏域</li>\n</ul>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>utf-8<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>表单标签的标签框练习<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span><span class=\"token punctuation\">></span></span>\n\t\t\t<span class=\"token comment\">&lt;!-- 文本框 --></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>\n\t\t\t\t<span class=\"token comment\">&lt;!-- placeholder ： 提示文字 --></span>\n\t\t\t\t用户名称: <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>username<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">placeholder</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>请输入用户名称<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n\t\t\t<span class=\"token comment\">&lt;!-- 密码框 --></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>\n\t\t\t\t<span class=\"token comment\">&lt;!-- placeholder ： 提示文字 --></span>\n\t\t\t\t用户密码: <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>password<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>password<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">placeholder</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>请输入用户密码<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n\t\t\t<span class=\"token comment\">&lt;!-- 单选框 --></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>\n\t\t\t\t<span class=\"token comment\">&lt;!-- \n\t\t\t\tname ： 单选框的名字必须要相同，否则就无法实现单选 \n\t\t\t\tvalue : 手动的给单选项赋值\n\t\t\t\tchecked=\"checked\" : 加上了这句话表示默认的选项\n\t\t\t\t--></span>\n\t\t\t\t性别: <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>radio<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>gender<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>1<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">checked</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>checked<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>男\n\t\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>radio<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>gender<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>2<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>女\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n\t\t\t<span class=\"token comment\">&lt;!-- 复选框 --></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>\n\t\t\t\t爱好:<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>checkbox<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>hobby<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>basketball<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>篮球\n\t\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>checkbox<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>hobby<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>football<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>足球\n\t\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>checkbox<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>hobby<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>pingpang<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>乒乓球\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n\t\t\t\n\t\t\t<span class=\"token comment\">&lt;!-- 上传选项 --></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>\n\t\t\t\t文件上传:<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>file<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>user<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n\t\t\t\n\t\t\t<span class=\"token comment\">&lt;!-- 下拉列表 \n\t\t\tmultiple : 开启下拉列表的多选模式\n\t\t\t--></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>select</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>addr<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">></span></span>\n\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>option</span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>china<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>中国<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>option</span><span class=\"token punctuation\">></span></span>\n\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>option</span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>japan<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>小日子<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>option</span><span class=\"token punctuation\">></span></span>\n\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>option</span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>korea<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>棒子<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>option</span><span class=\"token punctuation\">></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>select</span><span class=\"token punctuation\">></span></span>\n\t\t\t\n\t\t\t<span class=\"token comment\">&lt;!-- 文本域 --></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>textarea</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>info<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">rows</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>10<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">cols</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>10<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>textarea</span><span class=\"token punctuation\">></span></span>\n\t\t\t\n\t\t\t<span class=\"token comment\">&lt;!-- 隐藏域 --></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>hidden<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>123<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>hid<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n\t\t\t\n\t\t\t<span class=\"token comment\">&lt;!-- 按钮 --></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>button<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>我很普通<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>reset<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>重置<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n\t\t\t\n\t\t\t<span class=\"token comment\">&lt;!-- 提交表单 --></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>image<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>img/001.png<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>submit<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>提交<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n"},{"title":"JDBC初阶","top":false,"cover":false,"toc":true,"mathjax":true,"date":"2021-08-09T09:11:47.000Z","password":null,"summary":null,"_content":"\n## JDBC\n\n### 1.概念:Java Database Connectivity    Java 数据库连接\n\n本质:其实是官方（sun公司）定义的一套操作所有关系型数据库的规则，各个数据库的厂商去实现这套接口，提供数据库jar包。我们可以使用这套接口（JDBC）编程，真正的代码是驱动jar包中的实现类。\n\nEg:   person接口   worker类   person p = new worker(); \t\tp.eat();\n\n### 2.快速入门：我们依然用maven进行操作\n\n​\t1.打开mvnrepository搜索mysql-connector-java\n\n​\t2.选择最新版本打开复制maven里的所有链接\n\n![](1.png)\n\n​\t3.打开IDE创建maven工程项目\n\n​\t4.打开pom.xml文件在dependency中加入链接入下图\n\n![](2.png)\n\n### *代码实现\n\n注册驱动-->连接数据库-->定义sql语句-->循环输出语句\n\n```java\npublic class App {\n    static final String DB_URL = \"jdbc:mysql://localhost:3306/bank\";\n    static final String USER = \"root\";\n    static final String PASS = \"12345678\";//数据库密码\n    static final String QUERY = \"SELECT * FROM user\";\n\n    public static void main(String[] args) {\n        // Open a connection\n        try (Connection conn = DriverManager.getConnection(DB_URL, USER, PASS);\n             Statement stmt = conn.createStatement();\n             ResultSet rs = stmt.executeQuery(QUERY);) {\n            // Extract data from result set\n            while (rs.next()) {\n                // Retrieve by column name\n                System.out.print(\"ID: \" + rs.getInt(\"id\"));\n                System.out.print(\"name: \" + rs.getString(\"name\"));\n            }\n        } catch (SQLException e) {\n            e.printStackTrace();\n        }\n    }\n```\n\n到此我们已经初步的实现了JDBC操作\n\n## 解决sql注入\n\n```java\npackage jdbc;\n\nimport java.sql.*;\nimport java.util.HashMap;\nimport java.util.Map;\nimport java.util.Scanner;\n\npublic class JDBC {\n    public static void main(String[] args) {\n        Map<String, String> userLoginInfo = initUI();//创造方法管理登陆界面\n        boolean loginSuccess = login(userLoginInfo); //登陆方法\n        System.out.println(loginSuccess ? \"登陆成功\" : \"登陆失败\");//登陆反馈\n\n    }\n\n    private static boolean login(Map<String, String> userLoginInfo) {\n        boolean loginSuccess = false;\n        String loginName = userLoginInfo.get(\"loginName\");\n        String loginPwd = userLoginInfo.get(\"loginPwd\");\n        Connection coon = null;\n        PreparedStatement ps = null;\n        ResultSet rs = null;\n        try {\n            Class.forName(\"com.mysql.cj.jdbc.Driver\");\n            coon = DriverManager.getConnection(\"jdbc:mysql://localhost:3306/bank\", \"root\", \"12345678\");\n            String sql = \"select*from login where loginName = ? and loginpwd = ?\";\n            ps = coon.prepareStatement(sql);\n\n\n            rs = ps.executeQuery(sql);\n            if (rs.next()){\n                loginSuccess =true;\n            }\n\n        } catch (ClassNotFoundException | SQLException e) {\n            e.printStackTrace();\n        } finally {\n            if (rs != null) {\n                try {\n                    rs.close();\n                } catch (SQLException e) {\n                    e.printStackTrace();\n                }\n            }\n            if (ps != null) {\n                try {\n                    ps.close();\n                } catch (SQLException e) {\n                    e.printStackTrace();\n                }\n            }\n            if (coon != null) {\n                try {\n                    coon.close();\n                } catch (SQLException e) {\n                    e.printStackTrace();\n                }\n            }\n        }\n        return loginSuccess;\n    }\n\n    private static Map<String, String> initUI() {\n        Scanner scanner = new Scanner(System.in);\n        System.out.println(\"用户名：\");\n        String loginName = scanner.nextLine();\n        System.out.println(\"密码：\");\n        String loginPwd = scanner.nextLine();\n        //创建用户名密码\n        HashMap<String, String> userLoginInfo = new HashMap<>();\n        userLoginInfo.put(\"loginName\", loginName);\n        userLoginInfo.put(\"loginPwd\", loginPwd);\n        //组装map\n        return userLoginInfo;\n    }\n\n}\n\n\n```\n\n","source":"_posts/JDBC初阶.md","raw":"---\ntitle: JDBC初阶\ntop: false\ncover: false\ntoc: true\nmathjax: true\ndate: 2021-08-09 17:11:47\npassword:\nsummary:\ntags: notes\ncategories: JDBC\n---\n\n## JDBC\n\n### 1.概念:Java Database Connectivity    Java 数据库连接\n\n本质:其实是官方（sun公司）定义的一套操作所有关系型数据库的规则，各个数据库的厂商去实现这套接口，提供数据库jar包。我们可以使用这套接口（JDBC）编程，真正的代码是驱动jar包中的实现类。\n\nEg:   person接口   worker类   person p = new worker(); \t\tp.eat();\n\n### 2.快速入门：我们依然用maven进行操作\n\n​\t1.打开mvnrepository搜索mysql-connector-java\n\n​\t2.选择最新版本打开复制maven里的所有链接\n\n![](1.png)\n\n​\t3.打开IDE创建maven工程项目\n\n​\t4.打开pom.xml文件在dependency中加入链接入下图\n\n![](2.png)\n\n### *代码实现\n\n注册驱动-->连接数据库-->定义sql语句-->循环输出语句\n\n```java\npublic class App {\n    static final String DB_URL = \"jdbc:mysql://localhost:3306/bank\";\n    static final String USER = \"root\";\n    static final String PASS = \"12345678\";//数据库密码\n    static final String QUERY = \"SELECT * FROM user\";\n\n    public static void main(String[] args) {\n        // Open a connection\n        try (Connection conn = DriverManager.getConnection(DB_URL, USER, PASS);\n             Statement stmt = conn.createStatement();\n             ResultSet rs = stmt.executeQuery(QUERY);) {\n            // Extract data from result set\n            while (rs.next()) {\n                // Retrieve by column name\n                System.out.print(\"ID: \" + rs.getInt(\"id\"));\n                System.out.print(\"name: \" + rs.getString(\"name\"));\n            }\n        } catch (SQLException e) {\n            e.printStackTrace();\n        }\n    }\n```\n\n到此我们已经初步的实现了JDBC操作\n\n## 解决sql注入\n\n```java\npackage jdbc;\n\nimport java.sql.*;\nimport java.util.HashMap;\nimport java.util.Map;\nimport java.util.Scanner;\n\npublic class JDBC {\n    public static void main(String[] args) {\n        Map<String, String> userLoginInfo = initUI();//创造方法管理登陆界面\n        boolean loginSuccess = login(userLoginInfo); //登陆方法\n        System.out.println(loginSuccess ? \"登陆成功\" : \"登陆失败\");//登陆反馈\n\n    }\n\n    private static boolean login(Map<String, String> userLoginInfo) {\n        boolean loginSuccess = false;\n        String loginName = userLoginInfo.get(\"loginName\");\n        String loginPwd = userLoginInfo.get(\"loginPwd\");\n        Connection coon = null;\n        PreparedStatement ps = null;\n        ResultSet rs = null;\n        try {\n            Class.forName(\"com.mysql.cj.jdbc.Driver\");\n            coon = DriverManager.getConnection(\"jdbc:mysql://localhost:3306/bank\", \"root\", \"12345678\");\n            String sql = \"select*from login where loginName = ? and loginpwd = ?\";\n            ps = coon.prepareStatement(sql);\n\n\n            rs = ps.executeQuery(sql);\n            if (rs.next()){\n                loginSuccess =true;\n            }\n\n        } catch (ClassNotFoundException | SQLException e) {\n            e.printStackTrace();\n        } finally {\n            if (rs != null) {\n                try {\n                    rs.close();\n                } catch (SQLException e) {\n                    e.printStackTrace();\n                }\n            }\n            if (ps != null) {\n                try {\n                    ps.close();\n                } catch (SQLException e) {\n                    e.printStackTrace();\n                }\n            }\n            if (coon != null) {\n                try {\n                    coon.close();\n                } catch (SQLException e) {\n                    e.printStackTrace();\n                }\n            }\n        }\n        return loginSuccess;\n    }\n\n    private static Map<String, String> initUI() {\n        Scanner scanner = new Scanner(System.in);\n        System.out.println(\"用户名：\");\n        String loginName = scanner.nextLine();\n        System.out.println(\"密码：\");\n        String loginPwd = scanner.nextLine();\n        //创建用户名密码\n        HashMap<String, String> userLoginInfo = new HashMap<>();\n        userLoginInfo.put(\"loginName\", loginName);\n        userLoginInfo.put(\"loginPwd\", loginPwd);\n        //组装map\n        return userLoginInfo;\n    }\n\n}\n\n\n```\n\n","slug":"JDBC初阶","published":1,"updated":"2022-11-21T11:55:43.542Z","comments":1,"layout":"post","photos":[],"link":"","_id":"claqy94jv0007bklg6zep0oig","content":"<h2 id=\"JDBC\"><a href=\"#JDBC\" class=\"headerlink\" title=\"JDBC\"></a>JDBC</h2><h3 id=\"1-概念-Java-Database-Connectivity-Java-数据库连接\"><a href=\"#1-概念-Java-Database-Connectivity-Java-数据库连接\" class=\"headerlink\" title=\"1.概念:Java Database Connectivity    Java 数据库连接\"></a>1.概念:Java Database Connectivity    Java 数据库连接</h3><p>本质:其实是官方（sun公司）定义的一套操作所有关系型数据库的规则，各个数据库的厂商去实现这套接口，提供数据库jar包。我们可以使用这套接口（JDBC）编程，真正的代码是驱动jar包中的实现类。</p>\n<p>Eg:   person接口   worker类   person p = new worker();         p.eat();</p>\n<h3 id=\"2-快速入门：我们依然用maven进行操作\"><a href=\"#2-快速入门：我们依然用maven进行操作\" class=\"headerlink\" title=\"2.快速入门：我们依然用maven进行操作\"></a>2.快速入门：我们依然用maven进行操作</h3><p>​    1.打开mvnrepository搜索mysql-connector-java</p>\n<p>​    2.选择最新版本打开复制maven里的所有链接</p>\n<p><img src=\"/2021/08/09/jdbc-chu-jie/1.png\"></p>\n<p>​    3.打开IDE创建maven工程项目</p>\n<p>​    4.打开pom.xml文件在dependency中加入链接入下图</p>\n<p><img src=\"/2021/08/09/jdbc-chu-jie/2.png\"></p>\n<h3 id=\"代码实现\"><a href=\"#代码实现\" class=\"headerlink\" title=\"*代码实现\"></a>*代码实现</h3><p>注册驱动–&gt;连接数据库–&gt;定义sql语句–&gt;循环输出语句</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">App</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> DB_URL <span class=\"token operator\">=</span> <span class=\"token string\">\"jdbc:mysql://localhost:3306/bank\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> USER <span class=\"token operator\">=</span> <span class=\"token string\">\"root\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> PASS <span class=\"token operator\">=</span> <span class=\"token string\">\"12345678\"</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//数据库密码</span>\n    <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> QUERY <span class=\"token operator\">=</span> <span class=\"token string\">\"SELECT * FROM user\"</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">// Open a connection</span>\n        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Connection</span> conn <span class=\"token operator\">=</span> <span class=\"token class-name\">DriverManager</span><span class=\"token punctuation\">.</span><span class=\"token function\">getConnection</span><span class=\"token punctuation\">(</span>DB_URL<span class=\"token punctuation\">,</span> USER<span class=\"token punctuation\">,</span> PASS<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n             <span class=\"token class-name\">Statement</span> stmt <span class=\"token operator\">=</span> conn<span class=\"token punctuation\">.</span><span class=\"token function\">createStatement</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n             <span class=\"token class-name\">ResultSet</span> rs <span class=\"token operator\">=</span> stmt<span class=\"token punctuation\">.</span><span class=\"token function\">executeQuery</span><span class=\"token punctuation\">(</span>QUERY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token comment\">// Extract data from result set</span>\n            <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>rs<span class=\"token punctuation\">.</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token comment\">// Retrieve by column name</span>\n                <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ID: \"</span> <span class=\"token operator\">+</span> rs<span class=\"token punctuation\">.</span><span class=\"token function\">getInt</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"id\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"name: \"</span> <span class=\"token operator\">+</span> rs<span class=\"token punctuation\">.</span><span class=\"token function\">getString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">SQLException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>到此我们已经初步的实现了JDBC操作</p>\n<h2 id=\"解决sql注入\"><a href=\"#解决sql注入\" class=\"headerlink\" title=\"解决sql注入\"></a>解决sql注入</h2><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">jdbc</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>sql<span class=\"token punctuation\">.</span></span><span class=\"token operator\">*</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">HashMap</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Map</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> JDBC <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> userLoginInfo <span class=\"token operator\">=</span> <span class=\"token function\">initUI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//创造方法管理登陆界面</span>\n        <span class=\"token keyword\">boolean</span> loginSuccess <span class=\"token operator\">=</span> <span class=\"token function\">login</span><span class=\"token punctuation\">(</span>userLoginInfo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//登陆方法</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>loginSuccess <span class=\"token operator\">?</span> <span class=\"token string\">\"登陆成功\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"登陆失败\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//登陆反馈</span>\n\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">login</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> userLoginInfo<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">boolean</span> loginSuccess <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">String</span> loginName <span class=\"token operator\">=</span> userLoginInfo<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"loginName\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">String</span> loginPwd <span class=\"token operator\">=</span> userLoginInfo<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"loginPwd\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">Connection</span> coon <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">PreparedStatement</span> ps <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">ResultSet</span> rs <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token class-name\">Class</span><span class=\"token punctuation\">.</span><span class=\"token function\">forName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"com.mysql.cj.jdbc.Driver\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            coon <span class=\"token operator\">=</span> <span class=\"token class-name\">DriverManager</span><span class=\"token punctuation\">.</span><span class=\"token function\">getConnection</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"jdbc:mysql://localhost:3306/bank\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"root\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"12345678\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">String</span> sql <span class=\"token operator\">=</span> <span class=\"token string\">\"select*from login where loginName = ? and loginpwd = ?\"</span><span class=\"token punctuation\">;</span>\n            ps <span class=\"token operator\">=</span> coon<span class=\"token punctuation\">.</span><span class=\"token function\">prepareStatement</span><span class=\"token punctuation\">(</span>sql<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n            rs <span class=\"token operator\">=</span> ps<span class=\"token punctuation\">.</span><span class=\"token function\">executeQuery</span><span class=\"token punctuation\">(</span>sql<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>rs<span class=\"token punctuation\">.</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n                loginSuccess <span class=\"token operator\">=</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n\n        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">ClassNotFoundException</span> <span class=\"token operator\">|</span> <span class=\"token class-name\">SQLException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">finally</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>rs <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span>\n                    rs<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">SQLException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                    e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>ps <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span>\n                    ps<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">SQLException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                    e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>coon <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span>\n                    coon<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">SQLException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                    e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token keyword\">return</span> loginSuccess<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">initUI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">Scanner</span> scanner <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"用户名：\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">String</span> loginName <span class=\"token operator\">=</span> scanner<span class=\"token punctuation\">.</span><span class=\"token function\">nextLine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"密码：\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">String</span> loginPwd <span class=\"token operator\">=</span> scanner<span class=\"token punctuation\">.</span><span class=\"token function\">nextLine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//创建用户名密码</span>\n        <span class=\"token class-name\">HashMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> userLoginInfo <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HashMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        userLoginInfo<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"loginName\"</span><span class=\"token punctuation\">,</span> loginName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        userLoginInfo<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"loginPwd\"</span><span class=\"token punctuation\">,</span> loginPwd<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//组装map</span>\n        <span class=\"token keyword\">return</span> userLoginInfo<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token punctuation\">&#125;</span>\n\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"JDBC\"><a href=\"#JDBC\" class=\"headerlink\" title=\"JDBC\"></a>JDBC</h2><h3 id=\"1-概念-Java-Database-Connectivity-Java-数据库连接\"><a href=\"#1-概念-Java-Database-Connectivity-Java-数据库连接\" class=\"headerlink\" title=\"1.概念:Java Database Connectivity    Java 数据库连接\"></a>1.概念:Java Database Connectivity    Java 数据库连接</h3><p>本质:其实是官方（sun公司）定义的一套操作所有关系型数据库的规则，各个数据库的厂商去实现这套接口，提供数据库jar包。我们可以使用这套接口（JDBC）编程，真正的代码是驱动jar包中的实现类。</p>\n<p>Eg:   person接口   worker类   person p = new worker();         p.eat();</p>\n<h3 id=\"2-快速入门：我们依然用maven进行操作\"><a href=\"#2-快速入门：我们依然用maven进行操作\" class=\"headerlink\" title=\"2.快速入门：我们依然用maven进行操作\"></a>2.快速入门：我们依然用maven进行操作</h3><p>​    1.打开mvnrepository搜索mysql-connector-java</p>\n<p>​    2.选择最新版本打开复制maven里的所有链接</p>\n<p><img src=\"/2021/08/09/jdbc-chu-jie/1.png\"></p>\n<p>​    3.打开IDE创建maven工程项目</p>\n<p>​    4.打开pom.xml文件在dependency中加入链接入下图</p>\n<p><img src=\"/2021/08/09/jdbc-chu-jie/2.png\"></p>\n<h3 id=\"代码实现\"><a href=\"#代码实现\" class=\"headerlink\" title=\"*代码实现\"></a>*代码实现</h3><p>注册驱动–&gt;连接数据库–&gt;定义sql语句–&gt;循环输出语句</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">App</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> DB_URL <span class=\"token operator\">=</span> <span class=\"token string\">\"jdbc:mysql://localhost:3306/bank\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> USER <span class=\"token operator\">=</span> <span class=\"token string\">\"root\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> PASS <span class=\"token operator\">=</span> <span class=\"token string\">\"12345678\"</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//数据库密码</span>\n    <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> QUERY <span class=\"token operator\">=</span> <span class=\"token string\">\"SELECT * FROM user\"</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">// Open a connection</span>\n        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Connection</span> conn <span class=\"token operator\">=</span> <span class=\"token class-name\">DriverManager</span><span class=\"token punctuation\">.</span><span class=\"token function\">getConnection</span><span class=\"token punctuation\">(</span>DB_URL<span class=\"token punctuation\">,</span> USER<span class=\"token punctuation\">,</span> PASS<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n             <span class=\"token class-name\">Statement</span> stmt <span class=\"token operator\">=</span> conn<span class=\"token punctuation\">.</span><span class=\"token function\">createStatement</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n             <span class=\"token class-name\">ResultSet</span> rs <span class=\"token operator\">=</span> stmt<span class=\"token punctuation\">.</span><span class=\"token function\">executeQuery</span><span class=\"token punctuation\">(</span>QUERY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token comment\">// Extract data from result set</span>\n            <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>rs<span class=\"token punctuation\">.</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token comment\">// Retrieve by column name</span>\n                <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ID: \"</span> <span class=\"token operator\">+</span> rs<span class=\"token punctuation\">.</span><span class=\"token function\">getInt</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"id\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"name: \"</span> <span class=\"token operator\">+</span> rs<span class=\"token punctuation\">.</span><span class=\"token function\">getString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">SQLException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>到此我们已经初步的实现了JDBC操作</p>\n<h2 id=\"解决sql注入\"><a href=\"#解决sql注入\" class=\"headerlink\" title=\"解决sql注入\"></a>解决sql注入</h2><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">jdbc</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>sql<span class=\"token punctuation\">.</span></span><span class=\"token operator\">*</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">HashMap</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Map</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> JDBC <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> userLoginInfo <span class=\"token operator\">=</span> <span class=\"token function\">initUI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//创造方法管理登陆界面</span>\n        <span class=\"token keyword\">boolean</span> loginSuccess <span class=\"token operator\">=</span> <span class=\"token function\">login</span><span class=\"token punctuation\">(</span>userLoginInfo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//登陆方法</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>loginSuccess <span class=\"token operator\">?</span> <span class=\"token string\">\"登陆成功\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"登陆失败\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//登陆反馈</span>\n\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">login</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> userLoginInfo<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">boolean</span> loginSuccess <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">String</span> loginName <span class=\"token operator\">=</span> userLoginInfo<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"loginName\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">String</span> loginPwd <span class=\"token operator\">=</span> userLoginInfo<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"loginPwd\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">Connection</span> coon <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">PreparedStatement</span> ps <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">ResultSet</span> rs <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token class-name\">Class</span><span class=\"token punctuation\">.</span><span class=\"token function\">forName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"com.mysql.cj.jdbc.Driver\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            coon <span class=\"token operator\">=</span> <span class=\"token class-name\">DriverManager</span><span class=\"token punctuation\">.</span><span class=\"token function\">getConnection</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"jdbc:mysql://localhost:3306/bank\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"root\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"12345678\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">String</span> sql <span class=\"token operator\">=</span> <span class=\"token string\">\"select*from login where loginName = ? and loginpwd = ?\"</span><span class=\"token punctuation\">;</span>\n            ps <span class=\"token operator\">=</span> coon<span class=\"token punctuation\">.</span><span class=\"token function\">prepareStatement</span><span class=\"token punctuation\">(</span>sql<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n            rs <span class=\"token operator\">=</span> ps<span class=\"token punctuation\">.</span><span class=\"token function\">executeQuery</span><span class=\"token punctuation\">(</span>sql<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>rs<span class=\"token punctuation\">.</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n                loginSuccess <span class=\"token operator\">=</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n\n        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">ClassNotFoundException</span> <span class=\"token operator\">|</span> <span class=\"token class-name\">SQLException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">finally</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>rs <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span>\n                    rs<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">SQLException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                    e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>ps <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span>\n                    ps<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">SQLException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                    e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>coon <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span>\n                    coon<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">SQLException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                    e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token keyword\">return</span> loginSuccess<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">initUI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">Scanner</span> scanner <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"用户名：\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">String</span> loginName <span class=\"token operator\">=</span> scanner<span class=\"token punctuation\">.</span><span class=\"token function\">nextLine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"密码：\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">String</span> loginPwd <span class=\"token operator\">=</span> scanner<span class=\"token punctuation\">.</span><span class=\"token function\">nextLine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//创建用户名密码</span>\n        <span class=\"token class-name\">HashMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> userLoginInfo <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HashMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        userLoginInfo<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"loginName\"</span><span class=\"token punctuation\">,</span> loginName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        userLoginInfo<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"loginPwd\"</span><span class=\"token punctuation\">,</span> loginPwd<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//组装map</span>\n        <span class=\"token keyword\">return</span> userLoginInfo<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token punctuation\">&#125;</span>\n\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n"},{"title":"MySQL学习笔记3","top":false,"cover":false,"toc":true,"mathjax":true,"date":"2021-07-26T15:21:33.000Z","password":null,"summary":null,"_content":"# MySQL建表约束.sql\n\n## 1.主键约束 primary key——主键不能重复不能为空\n\n### 添加主键\nalter table table-name add primary key(id,name);\n\n### 删除主键\nalter table table-name drop primary key;\n\n### 设置双主键(联合主键)：只要加起来不重复就可以\ncreate table user(id int,name varchar(20),password varchar(20),primary key(id,name));\n\n## 2.自增约束 :auto-increment\n起到管控id的作用，用在主键后面\n\n## 3.外键约束   foreign key(class-id) references classes(id)\n\n### 涉及到两个表：主表，副表。\n```\ncreate table students(\nid int primary key,\nname varchar(20),\nclass_id int,\nforeign key(class_id) references classes(id));\n```\nQuery OK, 0 rows affected (0.01 sec)\n\n主表中的记录被副表引用是不可以被删除的。\n\n主表中没有的数据值，在副表中不可以使用。\n\n## 4.唯一约束 :alter table use1 add unique(name);\n\n——约束修饰的字段的值不可以重复\n```\nalter table use1 add unique(name);\n```\nQuery OK, 0 rows affected (0.00 sec)\nRecords: 0  Duplicates: 0  Warnings: 0\n```\ndesc use1;\n```\n+-------+-------------+------+-----+---------+-------+\n| Field    | Type            | Null | Key | Default | Extra |\n+-------+-------------+------+-----+---------+-------+\n| id         | int               | NO   | PRI | NULL    |           |\n| name  | varchar(20) | YES  | UNI | NULL    |           |\n+-------+-------------+------+-----+---------+-------+\n2 rows in set (0.00 sec)\n\n### 如何删除唯一约束\nAlter table table-name drop index <加了约束的字段>\n\n## 5.非空约束 not null\n\n## 6.默认约束\n当我们没有插入字段值得时候，如果没有传值，就使用默认值\n使用在每个字段的类型后面   ——default\n\n\n\n","source":"_posts/MySQL学习笔记3.md","raw":"---\ntitle: MySQL学习笔记3\ntop: false\ncover: false\ntoc: true\nmathjax: true\ndate: 2021-07-26 23:21:33\npassword:\nsummary:\ntags: notes\ncategories: MySQL\n---\n# MySQL建表约束.sql\n\n## 1.主键约束 primary key——主键不能重复不能为空\n\n### 添加主键\nalter table table-name add primary key(id,name);\n\n### 删除主键\nalter table table-name drop primary key;\n\n### 设置双主键(联合主键)：只要加起来不重复就可以\ncreate table user(id int,name varchar(20),password varchar(20),primary key(id,name));\n\n## 2.自增约束 :auto-increment\n起到管控id的作用，用在主键后面\n\n## 3.外键约束   foreign key(class-id) references classes(id)\n\n### 涉及到两个表：主表，副表。\n```\ncreate table students(\nid int primary key,\nname varchar(20),\nclass_id int,\nforeign key(class_id) references classes(id));\n```\nQuery OK, 0 rows affected (0.01 sec)\n\n主表中的记录被副表引用是不可以被删除的。\n\n主表中没有的数据值，在副表中不可以使用。\n\n## 4.唯一约束 :alter table use1 add unique(name);\n\n——约束修饰的字段的值不可以重复\n```\nalter table use1 add unique(name);\n```\nQuery OK, 0 rows affected (0.00 sec)\nRecords: 0  Duplicates: 0  Warnings: 0\n```\ndesc use1;\n```\n+-------+-------------+------+-----+---------+-------+\n| Field    | Type            | Null | Key | Default | Extra |\n+-------+-------------+------+-----+---------+-------+\n| id         | int               | NO   | PRI | NULL    |           |\n| name  | varchar(20) | YES  | UNI | NULL    |           |\n+-------+-------------+------+-----+---------+-------+\n2 rows in set (0.00 sec)\n\n### 如何删除唯一约束\nAlter table table-name drop index <加了约束的字段>\n\n## 5.非空约束 not null\n\n## 6.默认约束\n当我们没有插入字段值得时候，如果没有传值，就使用默认值\n使用在每个字段的类型后面   ——default\n\n\n\n","slug":"MySQL学习笔记3","published":1,"updated":"2022-11-21T11:55:43.547Z","comments":1,"layout":"post","photos":[],"link":"","_id":"claqy94k10009bklga0ia6ovv","content":"<h1 id=\"MySQL建表约束-sql\"><a href=\"#MySQL建表约束-sql\" class=\"headerlink\" title=\"MySQL建表约束.sql\"></a>MySQL建表约束.sql</h1><h2 id=\"1-主键约束-primary-key——主键不能重复不能为空\"><a href=\"#1-主键约束-primary-key——主键不能重复不能为空\" class=\"headerlink\" title=\"1.主键约束 primary key——主键不能重复不能为空\"></a>1.主键约束 primary key——主键不能重复不能为空</h2><h3 id=\"添加主键\"><a href=\"#添加主键\" class=\"headerlink\" title=\"添加主键\"></a>添加主键</h3><p>alter table table-name add primary key(id,name);</p>\n<h3 id=\"删除主键\"><a href=\"#删除主键\" class=\"headerlink\" title=\"删除主键\"></a>删除主键</h3><p>alter table table-name drop primary key;</p>\n<h3 id=\"设置双主键-联合主键-：只要加起来不重复就可以\"><a href=\"#设置双主键-联合主键-：只要加起来不重复就可以\" class=\"headerlink\" title=\"设置双主键(联合主键)：只要加起来不重复就可以\"></a>设置双主键(联合主键)：只要加起来不重复就可以</h3><p>create table user(id int,name varchar(20),password varchar(20),primary key(id,name));</p>\n<h2 id=\"2-自增约束-auto-increment\"><a href=\"#2-自增约束-auto-increment\" class=\"headerlink\" title=\"2.自增约束 :auto-increment\"></a>2.自增约束 :auto-increment</h2><p>起到管控id的作用，用在主键后面</p>\n<h2 id=\"3-外键约束-foreign-key-class-id-references-classes-id\"><a href=\"#3-外键约束-foreign-key-class-id-references-classes-id\" class=\"headerlink\" title=\"3.外键约束   foreign key(class-id) references classes(id)\"></a>3.外键约束   foreign key(class-id) references classes(id)</h2><h3 id=\"涉及到两个表：主表，副表。\"><a href=\"#涉及到两个表：主表，副表。\" class=\"headerlink\" title=\"涉及到两个表：主表，副表。\"></a>涉及到两个表：主表，副表。</h3><pre class=\"line-numbers language-none\"><code class=\"language-none\">create table students(\nid int primary key,\nname varchar(20),\nclass_id int,\nforeign key(class_id) references classes(id));<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>Query OK, 0 rows affected (0.01 sec)</p>\n<p>主表中的记录被副表引用是不可以被删除的。</p>\n<p>主表中没有的数据值，在副表中不可以使用。</p>\n<h2 id=\"4-唯一约束-alter-table-use1-add-unique-name\"><a href=\"#4-唯一约束-alter-table-use1-add-unique-name\" class=\"headerlink\" title=\"4.唯一约束 :alter table use1 add unique(name);\"></a>4.唯一约束 :alter table use1 add unique(name);</h2><p>——约束修饰的字段的值不可以重复</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">alter table use1 add unique(name);<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>Query OK, 0 rows affected (0.00 sec)<br>Records: 0  Duplicates: 0  Warnings: 0</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">desc use1;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>+——-+————-+——+—–+———+——-+<br>| Field    | Type            | Null | Key | Default | Extra |<br>+——-+————-+——+—–+———+——-+<br>| id         | int               | NO   | PRI | NULL    |           |<br>| name  | varchar(20) | YES  | UNI | NULL    |           |<br>+——-+————-+——+—–+———+——-+<br>2 rows in set (0.00 sec)</p>\n<h3 id=\"如何删除唯一约束\"><a href=\"#如何删除唯一约束\" class=\"headerlink\" title=\"如何删除唯一约束\"></a>如何删除唯一约束</h3><p>Alter table table-name drop index &lt;加了约束的字段&gt;</p>\n<h2 id=\"5-非空约束-not-null\"><a href=\"#5-非空约束-not-null\" class=\"headerlink\" title=\"5.非空约束 not null\"></a>5.非空约束 not null</h2><h2 id=\"6-默认约束\"><a href=\"#6-默认约束\" class=\"headerlink\" title=\"6.默认约束\"></a>6.默认约束</h2><p>当我们没有插入字段值得时候，如果没有传值，就使用默认值<br>使用在每个字段的类型后面   ——default</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"MySQL建表约束-sql\"><a href=\"#MySQL建表约束-sql\" class=\"headerlink\" title=\"MySQL建表约束.sql\"></a>MySQL建表约束.sql</h1><h2 id=\"1-主键约束-primary-key——主键不能重复不能为空\"><a href=\"#1-主键约束-primary-key——主键不能重复不能为空\" class=\"headerlink\" title=\"1.主键约束 primary key——主键不能重复不能为空\"></a>1.主键约束 primary key——主键不能重复不能为空</h2><h3 id=\"添加主键\"><a href=\"#添加主键\" class=\"headerlink\" title=\"添加主键\"></a>添加主键</h3><p>alter table table-name add primary key(id,name);</p>\n<h3 id=\"删除主键\"><a href=\"#删除主键\" class=\"headerlink\" title=\"删除主键\"></a>删除主键</h3><p>alter table table-name drop primary key;</p>\n<h3 id=\"设置双主键-联合主键-：只要加起来不重复就可以\"><a href=\"#设置双主键-联合主键-：只要加起来不重复就可以\" class=\"headerlink\" title=\"设置双主键(联合主键)：只要加起来不重复就可以\"></a>设置双主键(联合主键)：只要加起来不重复就可以</h3><p>create table user(id int,name varchar(20),password varchar(20),primary key(id,name));</p>\n<h2 id=\"2-自增约束-auto-increment\"><a href=\"#2-自增约束-auto-increment\" class=\"headerlink\" title=\"2.自增约束 :auto-increment\"></a>2.自增约束 :auto-increment</h2><p>起到管控id的作用，用在主键后面</p>\n<h2 id=\"3-外键约束-foreign-key-class-id-references-classes-id\"><a href=\"#3-外键约束-foreign-key-class-id-references-classes-id\" class=\"headerlink\" title=\"3.外键约束   foreign key(class-id) references classes(id)\"></a>3.外键约束   foreign key(class-id) references classes(id)</h2><h3 id=\"涉及到两个表：主表，副表。\"><a href=\"#涉及到两个表：主表，副表。\" class=\"headerlink\" title=\"涉及到两个表：主表，副表。\"></a>涉及到两个表：主表，副表。</h3><pre class=\"line-numbers language-none\"><code class=\"language-none\">create table students(\nid int primary key,\nname varchar(20),\nclass_id int,\nforeign key(class_id) references classes(id));<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>Query OK, 0 rows affected (0.01 sec)</p>\n<p>主表中的记录被副表引用是不可以被删除的。</p>\n<p>主表中没有的数据值，在副表中不可以使用。</p>\n<h2 id=\"4-唯一约束-alter-table-use1-add-unique-name\"><a href=\"#4-唯一约束-alter-table-use1-add-unique-name\" class=\"headerlink\" title=\"4.唯一约束 :alter table use1 add unique(name);\"></a>4.唯一约束 :alter table use1 add unique(name);</h2><p>——约束修饰的字段的值不可以重复</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">alter table use1 add unique(name);<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>Query OK, 0 rows affected (0.00 sec)<br>Records: 0  Duplicates: 0  Warnings: 0</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">desc use1;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>+——-+————-+——+—–+———+——-+<br>| Field    | Type            | Null | Key | Default | Extra |<br>+——-+————-+——+—–+———+——-+<br>| id         | int               | NO   | PRI | NULL    |           |<br>| name  | varchar(20) | YES  | UNI | NULL    |           |<br>+——-+————-+——+—–+———+——-+<br>2 rows in set (0.00 sec)</p>\n<h3 id=\"如何删除唯一约束\"><a href=\"#如何删除唯一约束\" class=\"headerlink\" title=\"如何删除唯一约束\"></a>如何删除唯一约束</h3><p>Alter table table-name drop index &lt;加了约束的字段&gt;</p>\n<h2 id=\"5-非空约束-not-null\"><a href=\"#5-非空约束-not-null\" class=\"headerlink\" title=\"5.非空约束 not null\"></a>5.非空约束 not null</h2><h2 id=\"6-默认约束\"><a href=\"#6-默认约束\" class=\"headerlink\" title=\"6.默认约束\"></a>6.默认约束</h2><p>当我们没有插入字段值得时候，如果没有传值，就使用默认值<br>使用在每个字段的类型后面   ——default</p>\n"},{"title":"MySQL学习笔记2","top":false,"cover":false,"toc":true,"mathjax":true,"date":"2021-07-26T14:51:08.000Z","password":null,"summary":null,"_content":"## mysql常用数据类型有哪些\n\n### MySQL支持多种类型，大致可以分为三类：\n\n#### （一）数值\n\n类型                              字节                                   大小                                                  理解\nTINYINT    \t    1 byte \t             (-128，127)            (0，255)                                      小整数值    \nSMALLINT          2 bytes\t(-32 768，32 767)        \t(0，65 535)                               大整数值    \nMEDIUMINT       3 bytes\t(-8 388 608，8 388 607)      (0，16 777 215)                  大整数值    \nINT或INTEGER   4 bytes\t(-2 147 483 648，2 147 483 647) (0，4 294 967 295)    大整数值    \nBIGINT     \t    8 bytes\t(-9,223,372,036,854,775,808，9 223 372 036 854 775 807) 极大整数值  \nFLOAT      \t    4 bytes\t(-3.4E+38，-1.1E-38)，0，(1.17E-38，3.4E+38)      单精度 浮点数值\nDOUBLE     \t    8 bytes\t(-1.7E+308,-2.2E-308),0,(2.2E-308，1.7E+308)\t       双精度 浮点数值\n\n####  （二）日期                                                                                                             \n\n日期/时间：date，time，year，datetime，timestam\n类型            字节               格式                                                      理解定义\nDATE            3  1000-01-01/9999-12-31     YYYY-MM-DD            日期值     \nTIME            3  '-838:59:59'/'838:59:59'  HH:MM:SS             时间值或持续时间  \nYEAR           1   1901/2155                YYYY                                    年份值     \nDATETIME   8   1000-01-01 00:00:00\\9999-12-31 23:59:59   YYYY-MM-DD HH:MM:SS 混合日期\n\n#### （三）字符串\n\n字符串：\n  类型                           字节                                                       定义\n  CHAR      \t        0-255 bytes          \t                               定长字符串             \n  VARCHAR   \t        0-65535 bytes        \t                        变长字符串             \n  TINYBLOB  \t        0-255 bytes                          \t不超过 255 个字符的二进制字符串\n  TINYTEXT  \t        0-255 bytes                                    \t短文本字符串            \n  BLOB      \t        0-65 535 bytes                            二进制形式的长文本数据       \n  TEXT      \t        0-65 535 bytes       \t                        长文本数据             \n  MEDIUMBLOB\t0-16 777 215 bytes   \t           二进制形式的中等长度文本数据    \n  MEDIUMTEXT\t0-16 777 215 bytes            \t            中等长度文本数据          \n  LONGBLOB  \t0-4 294 967 295 bytes\t             二进制形式的极大文本数据      \n  LONGTEXT    \t0-4 294 967 295 bytes                         极大文本数据            \n\n### 增加数据\n\nInsert into pet values('Fluffy','Harold','n','1999-04-23',null)；\nInsert into pet values('Fluf','Qing','f','1999-04-27',null)；\n\n### 删除数据\n\nmysql> delete from pet where name = 'Fluffy';\nQuery OK, 1 row affected (0.01 sec)\n\n### 修改数据\n\nmysql> update pet set name = '旺财' where owner = 'gao';\nQuery OK, 2 rows affected (0.00 sec)\nRows matched: 2  Changed: 2  Warnings: 0\n\nmysql> select*from pet;\n+---------+-------+------+------------+-------+\n| name    | owner    | sex  | birth            | death |\n+---------+-------+------+------------+-------+\n| 旺财      | gao       | m     | 1999-03-02 | NULL  |\n| Fluf       | Qing      | m     | 1999-04-27 | NULL  |\n| Fffy       | Wang     | f      | 1993-04-22 | NULL  |\n| Fdsdffy | Jian       | f       | 1996-09-02 | NULL  |\n| 旺财      | Gao       | m    | 1945-10-02 | NULL  |\n+---------+-------+------+------------+-------+\n5 rows in set (0.00 sec)\n\n### 总结一些：数据记录常见操作\n\n——增加： insert into <表name>  values（）；\n——删除：delete from <表name> where ……\n——修改：update <表name> set \n——查找：select*from <表name>\n","source":"_posts/MySQL学习笔记2.md","raw":"---\ntitle: MySQL学习笔记2\ntop: false\ncover: false\ntoc: true\nmathjax: true\ndate: 2021-07-26 22:51:08\npassword:\nsummary:\ntags: notes\ncategories: MySQL\n---\n## mysql常用数据类型有哪些\n\n### MySQL支持多种类型，大致可以分为三类：\n\n#### （一）数值\n\n类型                              字节                                   大小                                                  理解\nTINYINT    \t    1 byte \t             (-128，127)            (0，255)                                      小整数值    \nSMALLINT          2 bytes\t(-32 768，32 767)        \t(0，65 535)                               大整数值    \nMEDIUMINT       3 bytes\t(-8 388 608，8 388 607)      (0，16 777 215)                  大整数值    \nINT或INTEGER   4 bytes\t(-2 147 483 648，2 147 483 647) (0，4 294 967 295)    大整数值    \nBIGINT     \t    8 bytes\t(-9,223,372,036,854,775,808，9 223 372 036 854 775 807) 极大整数值  \nFLOAT      \t    4 bytes\t(-3.4E+38，-1.1E-38)，0，(1.17E-38，3.4E+38)      单精度 浮点数值\nDOUBLE     \t    8 bytes\t(-1.7E+308,-2.2E-308),0,(2.2E-308，1.7E+308)\t       双精度 浮点数值\n\n####  （二）日期                                                                                                             \n\n日期/时间：date，time，year，datetime，timestam\n类型            字节               格式                                                      理解定义\nDATE            3  1000-01-01/9999-12-31     YYYY-MM-DD            日期值     \nTIME            3  '-838:59:59'/'838:59:59'  HH:MM:SS             时间值或持续时间  \nYEAR           1   1901/2155                YYYY                                    年份值     \nDATETIME   8   1000-01-01 00:00:00\\9999-12-31 23:59:59   YYYY-MM-DD HH:MM:SS 混合日期\n\n#### （三）字符串\n\n字符串：\n  类型                           字节                                                       定义\n  CHAR      \t        0-255 bytes          \t                               定长字符串             \n  VARCHAR   \t        0-65535 bytes        \t                        变长字符串             \n  TINYBLOB  \t        0-255 bytes                          \t不超过 255 个字符的二进制字符串\n  TINYTEXT  \t        0-255 bytes                                    \t短文本字符串            \n  BLOB      \t        0-65 535 bytes                            二进制形式的长文本数据       \n  TEXT      \t        0-65 535 bytes       \t                        长文本数据             \n  MEDIUMBLOB\t0-16 777 215 bytes   \t           二进制形式的中等长度文本数据    \n  MEDIUMTEXT\t0-16 777 215 bytes            \t            中等长度文本数据          \n  LONGBLOB  \t0-4 294 967 295 bytes\t             二进制形式的极大文本数据      \n  LONGTEXT    \t0-4 294 967 295 bytes                         极大文本数据            \n\n### 增加数据\n\nInsert into pet values('Fluffy','Harold','n','1999-04-23',null)；\nInsert into pet values('Fluf','Qing','f','1999-04-27',null)；\n\n### 删除数据\n\nmysql> delete from pet where name = 'Fluffy';\nQuery OK, 1 row affected (0.01 sec)\n\n### 修改数据\n\nmysql> update pet set name = '旺财' where owner = 'gao';\nQuery OK, 2 rows affected (0.00 sec)\nRows matched: 2  Changed: 2  Warnings: 0\n\nmysql> select*from pet;\n+---------+-------+------+------------+-------+\n| name    | owner    | sex  | birth            | death |\n+---------+-------+------+------------+-------+\n| 旺财      | gao       | m     | 1999-03-02 | NULL  |\n| Fluf       | Qing      | m     | 1999-04-27 | NULL  |\n| Fffy       | Wang     | f      | 1993-04-22 | NULL  |\n| Fdsdffy | Jian       | f       | 1996-09-02 | NULL  |\n| 旺财      | Gao       | m    | 1945-10-02 | NULL  |\n+---------+-------+------+------------+-------+\n5 rows in set (0.00 sec)\n\n### 总结一些：数据记录常见操作\n\n——增加： insert into <表name>  values（）；\n——删除：delete from <表name> where ……\n——修改：update <表name> set \n——查找：select*from <表name>\n","slug":"MySQL学习笔记2","published":1,"updated":"2022-11-21T11:55:43.545Z","comments":1,"layout":"post","photos":[],"link":"","_id":"claqy94k7000bbklg1iyne6xk","content":"<h2 id=\"mysql常用数据类型有哪些\"><a href=\"#mysql常用数据类型有哪些\" class=\"headerlink\" title=\"mysql常用数据类型有哪些\"></a>mysql常用数据类型有哪些</h2><h3 id=\"MySQL支持多种类型，大致可以分为三类：\"><a href=\"#MySQL支持多种类型，大致可以分为三类：\" class=\"headerlink\" title=\"MySQL支持多种类型，大致可以分为三类：\"></a>MySQL支持多种类型，大致可以分为三类：</h3><h4 id=\"（一）数值\"><a href=\"#（一）数值\" class=\"headerlink\" title=\"（一）数值\"></a>（一）数值</h4><p>类型                              字节                                   大小                                                  理解<br>TINYINT            1 byte                  (-128，127)            (0，255)                                      小整数值<br>SMALLINT          2 bytes    (-32 768，32 767)            (0，65 535)                               大整数值<br>MEDIUMINT       3 bytes    (-8 388 608，8 388 607)      (0，16 777 215)                  大整数值<br>INT或INTEGER   4 bytes    (-2 147 483 648，2 147 483 647) (0，4 294 967 295)    大整数值<br>BIGINT             8 bytes    (-9,223,372,036,854,775,808，9 223 372 036 854 775 807) 极大整数值<br>FLOAT              4 bytes    (-3.4E+38，-1.1E-38)，0，(1.17E-38，3.4E+38)      单精度 浮点数值<br>DOUBLE             8 bytes    (-1.7E+308,-2.2E-308),0,(2.2E-308，1.7E+308)           双精度 浮点数值</p>\n<h4 id=\"（二）日期\"><a href=\"#（二）日期\" class=\"headerlink\" title=\"（二）日期\"></a>（二）日期</h4><p>日期/时间：date，time，year，datetime，timestam<br>类型            字节               格式                                                      理解定义<br>DATE            3  1000-01-01/9999-12-31     YYYY-MM-DD            日期值<br>TIME            3  ‘-838:59:59’/‘838:59:59’  HH:MM:SS             时间值或持续时间<br>YEAR           1   1901/2155                YYYY                                    年份值<br>DATETIME   8   1000-01-01 00:00:00\\9999-12-31 23:59:59   YYYY-MM-DD HH:MM:SS 混合日期</p>\n<h4 id=\"（三）字符串\"><a href=\"#（三）字符串\" class=\"headerlink\" title=\"（三）字符串\"></a>（三）字符串</h4><p>字符串：<br>  类型                           字节                                                       定义<br>  CHAR                  0-255 bytes                                             定长字符串<br>  VARCHAR               0-65535 bytes                                    变长字符串<br>  TINYBLOB              0-255 bytes                              不超过 255 个字符的二进制字符串<br>  TINYTEXT              0-255 bytes                                        短文本字符串<br>  BLOB                  0-65 535 bytes                            二进制形式的长文本数据<br>  TEXT                  0-65 535 bytes                                   长文本数据<br>  MEDIUMBLOB    0-16 777 215 bytes                  二进制形式的中等长度文本数据<br>  MEDIUMTEXT    0-16 777 215 bytes                            中等长度文本数据<br>  LONGBLOB      0-4 294 967 295 bytes                 二进制形式的极大文本数据<br>  LONGTEXT        0-4 294 967 295 bytes                         极大文本数据            </p>\n<h3 id=\"增加数据\"><a href=\"#增加数据\" class=\"headerlink\" title=\"增加数据\"></a>增加数据</h3><p>Insert into pet values(‘Fluffy’,’Harold’,’n’,’1999-04-23’,null)；<br>Insert into pet values(‘Fluf’,’Qing’,’f’,’1999-04-27’,null)；</p>\n<h3 id=\"删除数据\"><a href=\"#删除数据\" class=\"headerlink\" title=\"删除数据\"></a>删除数据</h3><p>mysql&gt; delete from pet where name = ‘Fluffy’;<br>Query OK, 1 row affected (0.01 sec)</p>\n<h3 id=\"修改数据\"><a href=\"#修改数据\" class=\"headerlink\" title=\"修改数据\"></a>修改数据</h3><p>mysql&gt; update pet set name = ‘旺财’ where owner = ‘gao’;<br>Query OK, 2 rows affected (0.00 sec)<br>Rows matched: 2  Changed: 2  Warnings: 0</p>\n<p>mysql&gt; select*from pet;<br>+———+——-+——+————+——-+<br>| name    | owner    | sex  | birth            | death |<br>+———+——-+——+————+——-+<br>| 旺财      | gao       | m     | 1999-03-02 | NULL  |<br>| Fluf       | Qing      | m     | 1999-04-27 | NULL  |<br>| Fffy       | Wang     | f      | 1993-04-22 | NULL  |<br>| Fdsdffy | Jian       | f       | 1996-09-02 | NULL  |<br>| 旺财      | Gao       | m    | 1945-10-02 | NULL  |<br>+———+——-+——+————+——-+<br>5 rows in set (0.00 sec)</p>\n<h3 id=\"总结一些：数据记录常见操作\"><a href=\"#总结一些：数据记录常见操作\" class=\"headerlink\" title=\"总结一些：数据记录常见操作\"></a>总结一些：数据记录常见操作</h3><p>——增加： insert into &lt;表name&gt;  values（）；<br>——删除：delete from &lt;表name&gt; where ……<br>——修改：update &lt;表name&gt; set<br>——查找：select*from &lt;表name&gt;</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"mysql常用数据类型有哪些\"><a href=\"#mysql常用数据类型有哪些\" class=\"headerlink\" title=\"mysql常用数据类型有哪些\"></a>mysql常用数据类型有哪些</h2><h3 id=\"MySQL支持多种类型，大致可以分为三类：\"><a href=\"#MySQL支持多种类型，大致可以分为三类：\" class=\"headerlink\" title=\"MySQL支持多种类型，大致可以分为三类：\"></a>MySQL支持多种类型，大致可以分为三类：</h3><h4 id=\"（一）数值\"><a href=\"#（一）数值\" class=\"headerlink\" title=\"（一）数值\"></a>（一）数值</h4><p>类型                              字节                                   大小                                                  理解<br>TINYINT            1 byte                  (-128，127)            (0，255)                                      小整数值<br>SMALLINT          2 bytes    (-32 768，32 767)            (0，65 535)                               大整数值<br>MEDIUMINT       3 bytes    (-8 388 608，8 388 607)      (0，16 777 215)                  大整数值<br>INT或INTEGER   4 bytes    (-2 147 483 648，2 147 483 647) (0，4 294 967 295)    大整数值<br>BIGINT             8 bytes    (-9,223,372,036,854,775,808，9 223 372 036 854 775 807) 极大整数值<br>FLOAT              4 bytes    (-3.4E+38，-1.1E-38)，0，(1.17E-38，3.4E+38)      单精度 浮点数值<br>DOUBLE             8 bytes    (-1.7E+308,-2.2E-308),0,(2.2E-308，1.7E+308)           双精度 浮点数值</p>\n<h4 id=\"（二）日期\"><a href=\"#（二）日期\" class=\"headerlink\" title=\"（二）日期\"></a>（二）日期</h4><p>日期/时间：date，time，year，datetime，timestam<br>类型            字节               格式                                                      理解定义<br>DATE            3  1000-01-01/9999-12-31     YYYY-MM-DD            日期值<br>TIME            3  ‘-838:59:59’/‘838:59:59’  HH:MM:SS             时间值或持续时间<br>YEAR           1   1901/2155                YYYY                                    年份值<br>DATETIME   8   1000-01-01 00:00:00\\9999-12-31 23:59:59   YYYY-MM-DD HH:MM:SS 混合日期</p>\n<h4 id=\"（三）字符串\"><a href=\"#（三）字符串\" class=\"headerlink\" title=\"（三）字符串\"></a>（三）字符串</h4><p>字符串：<br>  类型                           字节                                                       定义<br>  CHAR                  0-255 bytes                                             定长字符串<br>  VARCHAR               0-65535 bytes                                    变长字符串<br>  TINYBLOB              0-255 bytes                              不超过 255 个字符的二进制字符串<br>  TINYTEXT              0-255 bytes                                        短文本字符串<br>  BLOB                  0-65 535 bytes                            二进制形式的长文本数据<br>  TEXT                  0-65 535 bytes                                   长文本数据<br>  MEDIUMBLOB    0-16 777 215 bytes                  二进制形式的中等长度文本数据<br>  MEDIUMTEXT    0-16 777 215 bytes                            中等长度文本数据<br>  LONGBLOB      0-4 294 967 295 bytes                 二进制形式的极大文本数据<br>  LONGTEXT        0-4 294 967 295 bytes                         极大文本数据            </p>\n<h3 id=\"增加数据\"><a href=\"#增加数据\" class=\"headerlink\" title=\"增加数据\"></a>增加数据</h3><p>Insert into pet values(‘Fluffy’,’Harold’,’n’,’1999-04-23’,null)；<br>Insert into pet values(‘Fluf’,’Qing’,’f’,’1999-04-27’,null)；</p>\n<h3 id=\"删除数据\"><a href=\"#删除数据\" class=\"headerlink\" title=\"删除数据\"></a>删除数据</h3><p>mysql&gt; delete from pet where name = ‘Fluffy’;<br>Query OK, 1 row affected (0.01 sec)</p>\n<h3 id=\"修改数据\"><a href=\"#修改数据\" class=\"headerlink\" title=\"修改数据\"></a>修改数据</h3><p>mysql&gt; update pet set name = ‘旺财’ where owner = ‘gao’;<br>Query OK, 2 rows affected (0.00 sec)<br>Rows matched: 2  Changed: 2  Warnings: 0</p>\n<p>mysql&gt; select*from pet;<br>+———+——-+——+————+——-+<br>| name    | owner    | sex  | birth            | death |<br>+———+——-+——+————+——-+<br>| 旺财      | gao       | m     | 1999-03-02 | NULL  |<br>| Fluf       | Qing      | m     | 1999-04-27 | NULL  |<br>| Fffy       | Wang     | f      | 1993-04-22 | NULL  |<br>| Fdsdffy | Jian       | f       | 1996-09-02 | NULL  |<br>| 旺财      | Gao       | m    | 1945-10-02 | NULL  |<br>+———+——-+——+————+——-+<br>5 rows in set (0.00 sec)</p>\n<h3 id=\"总结一些：数据记录常见操作\"><a href=\"#总结一些：数据记录常见操作\" class=\"headerlink\" title=\"总结一些：数据记录常见操作\"></a>总结一些：数据记录常见操作</h3><p>——增加： insert into &lt;表name&gt;  values（）；<br>——删除：delete from &lt;表name&gt; where ……<br>——修改：update &lt;表name&gt; set<br>——查找：select*from &lt;表name&gt;</p>\n"},{"title":"MySQL学习笔记4","top":false,"cover":false,"toc":true,"mathjax":true,"date":"2021-07-27T02:14:30.000Z","password":null,"summary":null,"_content":"# 数据库的三大范式\n\n## 第一范式 1NF\n```\nselect*from student2;\n```\n+------+-----------+-----------------------------------------------+\n| id   | name       | address                                                |\n+------+-----------+-----------------------------------------------+\n|    2 | 张胜男     | 中国黑龙江省哈尔滨市向阳区50号      |\n|    3 | 张胜男     | 中国黑龙江省哈尔滨市武侯区90号      |\n|    1 | 吴刚        | 中国黑龙江省哈尔滨市高新区100号    |\n+------+-----------+-----------------------------------------------+\n3 rows in set (0.00 sec)\n\n这种还可以拆分的不属于第一范式\n\n+----+-----------+--------+--------------+--------------+----------------+\n| id | name      | cuntry | privence     | city              | details              |\n+----+-----------+--------+--------------+--------------+----------------+\n|  1 | 张三        | 中国   | 黑龙江省     | 哈尔滨市     | 向阳区50号     |\n|  2 | 旺盛达    | 中国   | 黑龙江省     | 哈尔滨市     | 向阳区50号     |\n|  3 | 张胜男    | 中国   | 黑龙江省     | 哈尔滨市     | 向阳区40号     |\n+----+-----------+--------+--------------+--------------+----------------+\n3 rows in set (0.00 sec)\n\n达到不可拆分时为第一范式\n\n## 第二范式2NF\n\n必须满足第一范式前提下，2NF要求除主键外的每一列都必须完全依赖于主键。\n\n如果出现不完全依赖只可能发生在联合主键的情况下。\n\n\n### 示例——订单表\n```\ncreate table myorder(\nproduct_id int,\ncustomer_id int,\nproduct_name varchar(20),\ncustomer_name varchar(20),\nprimary key(product_id,customer_id)\n);\n```\nmysql> desc myorder;\n+---------------+-------------+------+-----+---------+-------+\n| Field                   | Type            | Null  | Key   | Default | Extra |\n+---------------+-------------+------+-----+---------+-------+\n| product_id          | int                | NO   | PRI  | NULL    |          |\n| customer_id       | int                | NO    | PRI  | NULL    |          |\n| product_name    | varchar(20) | YES   |         | NULL    |           |\n| customer_name | varchar(20) | YES   |         | NULL    |           |\n+---------------+-------------+------+-----+---------+-------+\n4 rows in set (0.00 sec)\n不满足第二范式，需要进行拆表\n```\ncreate table myorder1(\nOrder_id int primary key,\nproduct_id int,\nCustomer_id int\n );\n```\nmysql> desc myorder1;\n+-------------+------+------+-----+---------+-------+\n| Field              | Type | Null | Key | Default | Extra |\n+-------------+------+------+-----+---------+-------+\n| Order_id        | int  | NO    | PRI | NULL    |       |\n| product_id     | int  | YES  |        | NULL    |       |\n| Customer_id | int  | YES   |        | NULL    |       |\n+-------------+------+------+-----+---------+-------+\n3 rows in set (0.00 sec\n```\ncreate table product(\nid int primary key,\nName varchar(20)\n);\n```\nmysql> desc product;\n+-------+-------------+------+-----+---------+-------+\n| Field    | Type            | Null | Key | Default | Extra |\n+-------+-------------+------+-----+---------+-------+\n| id         | int               | NO   | PRI | NULL    |       |\n| Name  | varchar(20) | YES  |        | NULL    |       |\n+-------+-------------+------+-----+---------+-------+\n2 rows in set (0.00 sec)\n```\ncreate table customer(\nId int primary key,\nName varchar(20)\n);\n```\nmysql> desc customer;;\n+-------+-------------+------+-----+---------+-------+\n| Field   | Type            | Null    | Key | Default | Extra |\n+-------+-------------+------+-----+---------+-------+\n| Id        | int               | NO     | PRI | NULL    |       |\n| Name  | varchar(20) | YES   |        | NULL    |       |\n+-------+-------------+------+-----+---------+-------+\n2 rows in set (0.01 sec)\n——分成三个表后，满足第二范式的设计\n\n## 第三范式3NF\n\n——必须先满足第二范式，除主键外不能有传递依赖关系。\n### 什么是传递依赖\n通俗的讲就是 a—>b,b—>c,a可以借着b推出c 这就是传递依赖\n\n","source":"_posts/MySQL学习笔记4.md","raw":"---\ntitle: MySQL学习笔记4\ntop: false\ncover: false\ntoc: true\nmathjax: true\ndate: 2021-07-27 10:14:30\npassword:\nsummary:\ntags: notes\ncategories: MySQL\n---\n# 数据库的三大范式\n\n## 第一范式 1NF\n```\nselect*from student2;\n```\n+------+-----------+-----------------------------------------------+\n| id   | name       | address                                                |\n+------+-----------+-----------------------------------------------+\n|    2 | 张胜男     | 中国黑龙江省哈尔滨市向阳区50号      |\n|    3 | 张胜男     | 中国黑龙江省哈尔滨市武侯区90号      |\n|    1 | 吴刚        | 中国黑龙江省哈尔滨市高新区100号    |\n+------+-----------+-----------------------------------------------+\n3 rows in set (0.00 sec)\n\n这种还可以拆分的不属于第一范式\n\n+----+-----------+--------+--------------+--------------+----------------+\n| id | name      | cuntry | privence     | city              | details              |\n+----+-----------+--------+--------------+--------------+----------------+\n|  1 | 张三        | 中国   | 黑龙江省     | 哈尔滨市     | 向阳区50号     |\n|  2 | 旺盛达    | 中国   | 黑龙江省     | 哈尔滨市     | 向阳区50号     |\n|  3 | 张胜男    | 中国   | 黑龙江省     | 哈尔滨市     | 向阳区40号     |\n+----+-----------+--------+--------------+--------------+----------------+\n3 rows in set (0.00 sec)\n\n达到不可拆分时为第一范式\n\n## 第二范式2NF\n\n必须满足第一范式前提下，2NF要求除主键外的每一列都必须完全依赖于主键。\n\n如果出现不完全依赖只可能发生在联合主键的情况下。\n\n\n### 示例——订单表\n```\ncreate table myorder(\nproduct_id int,\ncustomer_id int,\nproduct_name varchar(20),\ncustomer_name varchar(20),\nprimary key(product_id,customer_id)\n);\n```\nmysql> desc myorder;\n+---------------+-------------+------+-----+---------+-------+\n| Field                   | Type            | Null  | Key   | Default | Extra |\n+---------------+-------------+------+-----+---------+-------+\n| product_id          | int                | NO   | PRI  | NULL    |          |\n| customer_id       | int                | NO    | PRI  | NULL    |          |\n| product_name    | varchar(20) | YES   |         | NULL    |           |\n| customer_name | varchar(20) | YES   |         | NULL    |           |\n+---------------+-------------+------+-----+---------+-------+\n4 rows in set (0.00 sec)\n不满足第二范式，需要进行拆表\n```\ncreate table myorder1(\nOrder_id int primary key,\nproduct_id int,\nCustomer_id int\n );\n```\nmysql> desc myorder1;\n+-------------+------+------+-----+---------+-------+\n| Field              | Type | Null | Key | Default | Extra |\n+-------------+------+------+-----+---------+-------+\n| Order_id        | int  | NO    | PRI | NULL    |       |\n| product_id     | int  | YES  |        | NULL    |       |\n| Customer_id | int  | YES   |        | NULL    |       |\n+-------------+------+------+-----+---------+-------+\n3 rows in set (0.00 sec\n```\ncreate table product(\nid int primary key,\nName varchar(20)\n);\n```\nmysql> desc product;\n+-------+-------------+------+-----+---------+-------+\n| Field    | Type            | Null | Key | Default | Extra |\n+-------+-------------+------+-----+---------+-------+\n| id         | int               | NO   | PRI | NULL    |       |\n| Name  | varchar(20) | YES  |        | NULL    |       |\n+-------+-------------+------+-----+---------+-------+\n2 rows in set (0.00 sec)\n```\ncreate table customer(\nId int primary key,\nName varchar(20)\n);\n```\nmysql> desc customer;;\n+-------+-------------+------+-----+---------+-------+\n| Field   | Type            | Null    | Key | Default | Extra |\n+-------+-------------+------+-----+---------+-------+\n| Id        | int               | NO     | PRI | NULL    |       |\n| Name  | varchar(20) | YES   |        | NULL    |       |\n+-------+-------------+------+-----+---------+-------+\n2 rows in set (0.01 sec)\n——分成三个表后，满足第二范式的设计\n\n## 第三范式3NF\n\n——必须先满足第二范式，除主键外不能有传递依赖关系。\n### 什么是传递依赖\n通俗的讲就是 a—>b,b—>c,a可以借着b推出c 这就是传递依赖\n\n","slug":"MySQL学习笔记4","published":1,"updated":"2022-11-21T11:55:43.547Z","comments":1,"layout":"post","photos":[],"link":"","_id":"claqy94ka000gbklg8knmelr8","content":"<h1 id=\"数据库的三大范式\"><a href=\"#数据库的三大范式\" class=\"headerlink\" title=\"数据库的三大范式\"></a>数据库的三大范式</h1><h2 id=\"第一范式-1NF\"><a href=\"#第一范式-1NF\" class=\"headerlink\" title=\"第一范式 1NF\"></a>第一范式 1NF</h2><pre class=\"line-numbers language-none\"><code class=\"language-none\">select*from student2;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>+——+———–+———————————————–+<br>| id   | name       | address                                                |<br>+——+———–+———————————————–+<br>|    2 | 张胜男     | 中国黑龙江省哈尔滨市向阳区50号      |<br>|    3 | 张胜男     | 中国黑龙江省哈尔滨市武侯区90号      |<br>|    1 | 吴刚        | 中国黑龙江省哈尔滨市高新区100号    |<br>+——+———–+———————————————–+<br>3 rows in set (0.00 sec)</p>\n<p>这种还可以拆分的不属于第一范式</p>\n<p>+—-+———–+——–+————–+————–+—————-+<br>| id | name      | cuntry | privence     | city              | details              |<br>+—-+———–+——–+————–+————–+—————-+<br>|  1 | 张三        | 中国   | 黑龙江省     | 哈尔滨市     | 向阳区50号     |<br>|  2 | 旺盛达    | 中国   | 黑龙江省     | 哈尔滨市     | 向阳区50号     |<br>|  3 | 张胜男    | 中国   | 黑龙江省     | 哈尔滨市     | 向阳区40号     |<br>+—-+———–+——–+————–+————–+—————-+<br>3 rows in set (0.00 sec)</p>\n<p>达到不可拆分时为第一范式</p>\n<h2 id=\"第二范式2NF\"><a href=\"#第二范式2NF\" class=\"headerlink\" title=\"第二范式2NF\"></a>第二范式2NF</h2><p>必须满足第一范式前提下，2NF要求除主键外的每一列都必须完全依赖于主键。</p>\n<p>如果出现不完全依赖只可能发生在联合主键的情况下。</p>\n<h3 id=\"示例——订单表\"><a href=\"#示例——订单表\" class=\"headerlink\" title=\"示例——订单表\"></a>示例——订单表</h3><pre class=\"line-numbers language-none\"><code class=\"language-none\">create table myorder(\nproduct_id int,\ncustomer_id int,\nproduct_name varchar(20),\ncustomer_name varchar(20),\nprimary key(product_id,customer_id)\n);<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>mysql&gt; desc myorder;<br>+—————+————-+——+—–+———+——-+<br>| Field                   | Type            | Null  | Key   | Default | Extra |<br>+—————+————-+——+—–+———+——-+<br>| product_id          | int                | NO   | PRI  | NULL    |          |<br>| customer_id       | int                | NO    | PRI  | NULL    |          |<br>| product_name    | varchar(20) | YES   |         | NULL    |           |<br>| customer_name | varchar(20) | YES   |         | NULL    |           |<br>+—————+————-+——+—–+———+——-+<br>4 rows in set (0.00 sec)<br>不满足第二范式，需要进行拆表</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">create table myorder1(\nOrder_id int primary key,\nproduct_id int,\nCustomer_id int\n );<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>mysql&gt; desc myorder1;<br>+————-+——+——+—–+———+——-+<br>| Field              | Type | Null | Key | Default | Extra |<br>+————-+——+——+—–+———+——-+<br>| Order_id        | int  | NO    | PRI | NULL    |       |<br>| product_id     | int  | YES  |        | NULL    |       |<br>| Customer_id | int  | YES   |        | NULL    |       |<br>+————-+——+——+—–+———+——-+<br>3 rows in set (0.00 sec</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">create table product(\nid int primary key,\nName varchar(20)\n);<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p>mysql&gt; desc product;<br>+——-+————-+——+—–+———+——-+<br>| Field    | Type            | Null | Key | Default | Extra |<br>+——-+————-+——+—–+———+——-+<br>| id         | int               | NO   | PRI | NULL    |       |<br>| Name  | varchar(20) | YES  |        | NULL    |       |<br>+——-+————-+——+—–+———+——-+<br>2 rows in set (0.00 sec)</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">create table customer(\nId int primary key,\nName varchar(20)\n);<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p>mysql&gt; desc customer;;<br>+——-+————-+——+—–+———+——-+<br>| Field   | Type            | Null    | Key | Default | Extra |<br>+——-+————-+——+—–+———+——-+<br>| Id        | int               | NO     | PRI | NULL    |       |<br>| Name  | varchar(20) | YES   |        | NULL    |       |<br>+——-+————-+——+—–+———+——-+<br>2 rows in set (0.01 sec)<br>——分成三个表后，满足第二范式的设计</p>\n<h2 id=\"第三范式3NF\"><a href=\"#第三范式3NF\" class=\"headerlink\" title=\"第三范式3NF\"></a>第三范式3NF</h2><p>——必须先满足第二范式，除主键外不能有传递依赖关系。</p>\n<h3 id=\"什么是传递依赖\"><a href=\"#什么是传递依赖\" class=\"headerlink\" title=\"什么是传递依赖\"></a>什么是传递依赖</h3><p>通俗的讲就是 a—&gt;b,b—&gt;c,a可以借着b推出c 这就是传递依赖</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"数据库的三大范式\"><a href=\"#数据库的三大范式\" class=\"headerlink\" title=\"数据库的三大范式\"></a>数据库的三大范式</h1><h2 id=\"第一范式-1NF\"><a href=\"#第一范式-1NF\" class=\"headerlink\" title=\"第一范式 1NF\"></a>第一范式 1NF</h2><pre class=\"line-numbers language-none\"><code class=\"language-none\">select*from student2;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>+——+———–+———————————————–+<br>| id   | name       | address                                                |<br>+——+———–+———————————————–+<br>|    2 | 张胜男     | 中国黑龙江省哈尔滨市向阳区50号      |<br>|    3 | 张胜男     | 中国黑龙江省哈尔滨市武侯区90号      |<br>|    1 | 吴刚        | 中国黑龙江省哈尔滨市高新区100号    |<br>+——+———–+———————————————–+<br>3 rows in set (0.00 sec)</p>\n<p>这种还可以拆分的不属于第一范式</p>\n<p>+—-+———–+——–+————–+————–+—————-+<br>| id | name      | cuntry | privence     | city              | details              |<br>+—-+———–+——–+————–+————–+—————-+<br>|  1 | 张三        | 中国   | 黑龙江省     | 哈尔滨市     | 向阳区50号     |<br>|  2 | 旺盛达    | 中国   | 黑龙江省     | 哈尔滨市     | 向阳区50号     |<br>|  3 | 张胜男    | 中国   | 黑龙江省     | 哈尔滨市     | 向阳区40号     |<br>+—-+———–+——–+————–+————–+—————-+<br>3 rows in set (0.00 sec)</p>\n<p>达到不可拆分时为第一范式</p>\n<h2 id=\"第二范式2NF\"><a href=\"#第二范式2NF\" class=\"headerlink\" title=\"第二范式2NF\"></a>第二范式2NF</h2><p>必须满足第一范式前提下，2NF要求除主键外的每一列都必须完全依赖于主键。</p>\n<p>如果出现不完全依赖只可能发生在联合主键的情况下。</p>\n<h3 id=\"示例——订单表\"><a href=\"#示例——订单表\" class=\"headerlink\" title=\"示例——订单表\"></a>示例——订单表</h3><pre class=\"line-numbers language-none\"><code class=\"language-none\">create table myorder(\nproduct_id int,\ncustomer_id int,\nproduct_name varchar(20),\ncustomer_name varchar(20),\nprimary key(product_id,customer_id)\n);<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>mysql&gt; desc myorder;<br>+—————+————-+——+—–+———+——-+<br>| Field                   | Type            | Null  | Key   | Default | Extra |<br>+—————+————-+——+—–+———+——-+<br>| product_id          | int                | NO   | PRI  | NULL    |          |<br>| customer_id       | int                | NO    | PRI  | NULL    |          |<br>| product_name    | varchar(20) | YES   |         | NULL    |           |<br>| customer_name | varchar(20) | YES   |         | NULL    |           |<br>+—————+————-+——+—–+———+——-+<br>4 rows in set (0.00 sec)<br>不满足第二范式，需要进行拆表</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">create table myorder1(\nOrder_id int primary key,\nproduct_id int,\nCustomer_id int\n );<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>mysql&gt; desc myorder1;<br>+————-+——+——+—–+———+——-+<br>| Field              | Type | Null | Key | Default | Extra |<br>+————-+——+——+—–+———+——-+<br>| Order_id        | int  | NO    | PRI | NULL    |       |<br>| product_id     | int  | YES  |        | NULL    |       |<br>| Customer_id | int  | YES   |        | NULL    |       |<br>+————-+——+——+—–+———+——-+<br>3 rows in set (0.00 sec</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">create table product(\nid int primary key,\nName varchar(20)\n);<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p>mysql&gt; desc product;<br>+——-+————-+——+—–+———+——-+<br>| Field    | Type            | Null | Key | Default | Extra |<br>+——-+————-+——+—–+———+——-+<br>| id         | int               | NO   | PRI | NULL    |       |<br>| Name  | varchar(20) | YES  |        | NULL    |       |<br>+——-+————-+——+—–+———+——-+<br>2 rows in set (0.00 sec)</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">create table customer(\nId int primary key,\nName varchar(20)\n);<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p>mysql&gt; desc customer;;<br>+——-+————-+——+—–+———+——-+<br>| Field   | Type            | Null    | Key | Default | Extra |<br>+——-+————-+——+—–+———+——-+<br>| Id        | int               | NO     | PRI | NULL    |       |<br>| Name  | varchar(20) | YES   |        | NULL    |       |<br>+——-+————-+——+—–+———+——-+<br>2 rows in set (0.01 sec)<br>——分成三个表后，满足第二范式的设计</p>\n<h2 id=\"第三范式3NF\"><a href=\"#第三范式3NF\" class=\"headerlink\" title=\"第三范式3NF\"></a>第三范式3NF</h2><p>——必须先满足第二范式，除主键外不能有传递依赖关系。</p>\n<h3 id=\"什么是传递依赖\"><a href=\"#什么是传递依赖\" class=\"headerlink\" title=\"什么是传递依赖\"></a>什么是传递依赖</h3><p>通俗的讲就是 a—&gt;b,b—&gt;c,a可以借着b推出c 这就是传递依赖</p>\n"},{"title":"MySQL学习笔记5","top":false,"cover":false,"toc":true,"mathjax":true,"date":"2021-08-01T02:13:40.000Z","password":null,"summary":null,"_content":"# MySQL查询练习\n### 学生表Student\n——学号，姓名，性别，出生年月日，所在班级。\n```mysql\ncreate table student(\n  sno varchar(20) primary key,\n  sname varchar(20) not null,\n  ssex varchar(10) not null,\n  sbirthday datetime,\n  class varchar(20)\n  );\n```\n### ——课程表Course\n——课程号，课程名称，教师编号\n```mysql\ncreate table course(\n  cno varchar(20) primary key,\n  sname varchar(20) not null,\n  tno varchar(20) not null,\n  foreign key(tno) references teacher(tno)\n);\n```\n### ——成绩表 Score\n——学号，课程号，成绩\n```mysql\ncreate table score(\n  sno varchar(20) not null,\n  cno varchar(20) not null,\n  degree decimal,\n  foreign key(sno) references student(sno),\n     foreign key(cno) references course(cno),\n  primary key(sno,cno)\n  );\n```\n### ——教师表 Teacher\n——教师编号，教师姓名，教师性别，出生年月日，职称，所在部门。\n```mysql\ncreate table teacher(\n  tno varchar(20) primary key,\n  tname varchar(20) not null,\n  tsex varchar(10) not null,\n  tbirthday datetime,\n  prof varchar(20) not null,\n  depart varchar(20) not null\n  );\n```\n### ——往表中添加数据\n—添加学生信息\n—添加教师信息\n—添加课程表\n—添加成绩表\n## 查询练习\n### ——查询student表的所有记录。*代表所有\nmysql> select *from student;\n+-----+--------------+------+---------------------+-------+\n| sno | sname        | ssex | sbirthday           | class |\n+-----+--------------+------+---------------------+-------+\n| 101 | 撒旦法达     | 男   | 1977-04-23 00:00:00 | 95037 |\n| 102 | 阿斯蒂芬     | 女   | 1977-04-23 00:00:00 | 95033 |\n| 103 | 发电房芬     | 女   | 1977-04-23 00:00:00 | 95035 |\n| 104 | 曾阿凡达     | 男   | 1977-04-23 00:00:00 | 95033 |\n| 105 | 四方达狗     | 男   | 1977-04-23 00:00:00 | 95032 |\n| 106 | 曾华         | 女   | 1977-04-23 00:00:00 | 95031 |\n| 107 | 阿法狗       | 男   | 1977-04-23 00:00:00 | 95033 |\n| 108 | 沙发         | 男   | 1977-04-23 00:00:00 | 95033 |\n| 109 | 曾曾华       | 女   | 1977-04-23 00:00:00 | 95033 |\n+-----+--------------+------+---------------------+-------+\n9 rows in set (0.00 sec)\n### ——查询student表中的所有记录的sname，ssex，class列     select\nmysql> select sname,ssex,class from student;\n+--------------+------+-------+\n| sname        | ssex | class |\n+--------------+------+-------+\n| 撒旦法达     | 男   | 95037 |\n| 阿斯蒂芬     | 女   | 95033 |\n| 发电房芬     | 女   | 95035 |\n| 曾阿凡达     | 男   | 95033 |\n| 四方达狗     | 男   | 95032 |\n| 曾华         | 女   | 95031 |\n| 阿法狗       | 男   | 95033 |\n| 沙发         | 男   | 95033 |\n| 曾曾华       | 女   | 95033 |\n+--------------+------+-------+\n9 rows in set (0.00 sec)\n### ——查询教师所有的单位既不重复的depart列   select distinct 排重\nmysql> select distinct depart from teacher;\n+-----------------+\n| depart          |\n+-----------------+\n| 计算机系        |\n| 电子工程系      |\n+-----------------+\n2 rows in set (0.00 sec)\n### ——查询score表中成绩在60-80之间的所有记录     查询区间 between。。。and\nmysql> select*from score where degree between 60 and 80;\n+-----+-------+--------+\n| sno | cno   | degree |\n+-----+-------+--------+\n| 102 | 2-801 |     77 |\n| 105 | 2-801 |     67 |\n+-----+-------+--------+\n2 rows in set (0.00 sec)\n### ——查询score表中成绩为98，87的记录      in\nselect *from score where degree in (98,87);\nmysql> select *from score where degree in (98,87);\n+-----+-------+--------+\n| sno | cno   | degree |\n+-----+-------+--------+\n| 103 | 3-802 |     87 |\n| 104 | 2-802 |     87 |\n| 106 | 3-801 |     98 |\n| 108 | 3-802 |     87 |\n+-----+-------+--------+\n4 rows in set (0.00 sec)\n### ——查询student表中95031班的性别为女的同学记录   or\nmysql> select *from student where class='95033' or ssex = '女';\n+-----+--------------+------+---------------------+-------+\n| sno | sname        | ssex | sbirthday           | class |\n+-----+--------------+------+---------------------+-------+\n| 102 | 阿斯蒂芬     | 女   | 1977-04-23 00:00:00 | 95033 |\n| 103 | 发电房芬     | 女   | 1977-04-23 00:00:00 | 95035 |\n| 104 | 曾阿凡达     | 男   | 1977-04-23 00:00:00 | 95033 |\n| 106 | 曾华         | 女   | 1977-04-23 00:00:00 | 95031 |\n| 107 | 阿法狗       | 男   | 1977-04-23 00:00:00 | 95033 |\n| 108 | 沙发         | 男   | 1977-04-23 00:00:00 | 95033 |\n| 109 | 曾曾华       | 女   | 1977-04-23 00:00:00 | 95033 |\n+-----+--------------+------+---------------------+-------+\n7 rows in set (0.00 sec)\n### ——以class降序查询student表的所有记录  order by ...desc\nmysql> select *from student order by class desc;\n+-----+--------------+------+---------------------+-------+\n| sno | sname        | ssex | sbirthday           | class |\n+-----+--------------+------+---------------------+-------+\n| 101 | 撒旦法达     | 男   | 1977-04-23 00:00:00 | 95037 |\n| 103 | 发电房芬     | 女   | 1977-04-23 00:00:00 | 95035 |\n| 102 | 阿斯蒂芬     | 女   | 1977-04-23 00:00:00 | 95033 |\n| 104 | 曾阿凡达     | 男   | 1977-04-23 00:00:00 | 95033 |\n| 107 | 阿法狗       | 男   | 1977-04-23 00:00:00 | 95033 |\n| 108 | 沙发         | 男   | 1977-04-23 00:00:00 | 95033 |\n| 109 | 曾曾华       | 女   | 1977-04-23 00:00:00 | 95033 |\n| 105 | 四方达狗     | 男   | 1977-04-23 00:00:00 | 95032 |\n| 106 | 曾华         | 女   | 1977-04-23 00:00:00 | 95031 |\n+-----+--------------+------+---------------------+-------+\n9 rows in set (0.00 sec)\n### ——查询以cno升序，degree降序查询score表的所有记录\nmysql> select *from score order by cno asc,degree desc;\n+-----+-------+--------+\n| sno | cno   | degree |\n+-----+-------+--------+\n| 102 | 2-801 |     77 |\n| 105 | 2-801 |     67 |\n| 104 | 2-802 |     87 |\n| 106 | 3-801 |     98 |\n| 101 | 3-801 |     89 |\n| 103 | 3-802 |     87 |\n| 108 | 3-802 |     87 |\n+-----+-------+--------+\n7 rows in set (0.00 sec)\n### ——查询95033班的学生人数   count (统计)\nmysql> select count(*) from student where class = '95031';\n+----------+\n| count(*) |\n+----------+\n|        1 |\n+----------+\n1 row in set (0.00 sec)\n### ——查询score表中的最高分的学生的学号和课程号（子查询或者排序）\nmysql> select sno,cno from score where degree =(select max(degree) from score);\n+-----+-------+\n| sno | cno   |\n+-----+-------+\n| 106 | 3-801 |\n+-----+-------+\n1 row in set (0.01 sec)\n### ——查询每门课的平均成绩  ——avg()平均  group by 分组\nmysql> Select  cno,avg(degree) from score group by cno;\n+-------+-------------+\n| cno   | avg(degree) |\n+-------+-------------+\n| 2-801 |     72.0000 |\n| 2-802 |     87.0000 |\n| 3-801 |     93.5000 |\n| 3-802 |     87.0000 |\n+-------+-------------+\n4 rows in set (0.00 sec)\n### ——查询所有学生的sno，sname和degree列\nmysql> select sno,sname,degree from course,score where course.cno = score.cno;\n+-----+-----------------+--------+\n| sno | sname           | degree |\n+-----+-----------------+--------+\n| 102 | 数字电路        |     77 |\n| 105 | 数字电路        |     67 |\n| 104 | 高等数学        |     87 |\n| 101 | 操作系统        |     89 |\n| 106 | 操作系统        |     98 |\n| 103 | 计算机导论      |     87 |\n| 108 | 计算机导论      |     87 |\n+-----+-----------------+--------+\n7 rows in set (0.01 sec)\n### ——查询“95033”班级学生每门课的平均分\n1.先把班级学生拿出来\n2.在把1当条件到分数表里筛选\n3.再以cno字段进行分组查询平均成绩\nmysql> select cno,avg(degree) from score where sno in (select sno from student where class = '95033') group by cno;\n+-------+-------------+\n| cno   | avg(degree) |\n+-------+-------------+\n| 2-801 |     77.0000 |\n| 2-802 |     87.0000 |\n| 3-802 |     87.0000 |\n+-------+-------------+\n3 rows in set (0.00 sec);\n### ——查询和学号为105，108的同学同年出生的所有学生的sno，sname，sbirthday。\nmysql> select *from student where year(sbirthday) in (select year(sbirthday)from student where sno in(105,108));\n+-----+--------------+------+---------------------+-------+\n| sno | sname        | ssex | sbirthday           | class |\n+-----+--------------+------+---------------------+-------+\n| 101 | 撒旦法达     | 男   | 1977-04-23 00:00:00 | 95037 |\n| 102 | 阿斯蒂芬     | 女   | 1977-04-23 00:00:00 | 95033 |\n| 103 | 发电房芬     | 女   | 1977-04-23 00:00:00 | 95035 |\n| 104 | 曾阿凡达     | 男   | 1977-04-23 00:00:00 | 95033 |\n| 105 | 四方达狗     | 男   | 1977-04-23 00:00:00 | 95032 |\n| 106 | 曾华         | 女   | 1977-04-23 00:00:00 | 95031 |\n| 107 | 阿法狗       | 男   | 1977-04-23 00:00:00 | 95033 |\n| 108 | 沙发         | 男   | 1977-04-23 00:00:00 | 95033 |\n| 109 | 曾曾华       | 女   | 1977-04-23 00:00:00 | 95033 |\n+-----+--------------+------+---------------------+-------+\n9 rows in set (0.00 sec)\n### ——查询四狗老师教课的学生的成绩\nmysql> select *from score where cno=(select cno from course where tno = (select tno from teacher where tname = '四狗'));\n+-----+-------+--------+\n| sno | cno   | degree |\n+-----+-------+--------+\n| 102 | 2-801 |     77 |\n| 105 | 2-801 |     67 |\n+-----+-------+--------+\n2 rows in set (0.00 sec)\n### ——查询计算机系与电子工程系不同职称的教师的tname和prof\n————union 求并集  合并到一起\nselect prof from teacher where depart ='电子工程系'；\nselect *from teacher where depart = '计算机系' and prof not in (select  prof from teacher where depart ='电子工程系')\nunion\nselect *from teacher where depart = '电子工程系' and prof not in (select  prof from teacher where depart ='计算机系');\n+----+--------------+------+---------------------+-----------+-----------------+\n| tno | tname        | tsex | tbirthday           | prof      | depart          |\n+-----+--------------+------+---------------------+-----------+-----------------+\n| 801 | 法达         | 男   | 1977-04-30 00:00:00 | 讲师      | 计算机系        |\n| 803 | 房芬         | 女   | 1977-04-13 00:00:00 | 教授      | 计算机系        |\n| 805 | 四狗         | 男   | 1977-04-27 00:00:00 | 副教授    | 电子工程系      |\n| 806 | 曾沙发华     | 女   | 1977-05-23 00:00:00 | 助教      | 电子工程系      |\n+-----+--------------+------+---------------------+-----------+-----------------+\n4 rows in set (0.01 sec）\n\n### ——any任意（至少） all且（所有） as 别名（重命名打印） union合并 having count(*)>1 数量大于1   year(now())现在的年份   order by 顺序查询\n","source":"_posts/MySQL学习笔记5.md","raw":"---\ntitle: MySQL学习笔记5\ntop: false\ncover: false\ntoc: true\nmathjax: true\ndate: 2021-08-01 10:13:40\npassword:\nsummary:\ntags: notes\ncategories: MySQL\n---\n# MySQL查询练习\n### 学生表Student\n——学号，姓名，性别，出生年月日，所在班级。\n```mysql\ncreate table student(\n  sno varchar(20) primary key,\n  sname varchar(20) not null,\n  ssex varchar(10) not null,\n  sbirthday datetime,\n  class varchar(20)\n  );\n```\n### ——课程表Course\n——课程号，课程名称，教师编号\n```mysql\ncreate table course(\n  cno varchar(20) primary key,\n  sname varchar(20) not null,\n  tno varchar(20) not null,\n  foreign key(tno) references teacher(tno)\n);\n```\n### ——成绩表 Score\n——学号，课程号，成绩\n```mysql\ncreate table score(\n  sno varchar(20) not null,\n  cno varchar(20) not null,\n  degree decimal,\n  foreign key(sno) references student(sno),\n     foreign key(cno) references course(cno),\n  primary key(sno,cno)\n  );\n```\n### ——教师表 Teacher\n——教师编号，教师姓名，教师性别，出生年月日，职称，所在部门。\n```mysql\ncreate table teacher(\n  tno varchar(20) primary key,\n  tname varchar(20) not null,\n  tsex varchar(10) not null,\n  tbirthday datetime,\n  prof varchar(20) not null,\n  depart varchar(20) not null\n  );\n```\n### ——往表中添加数据\n—添加学生信息\n—添加教师信息\n—添加课程表\n—添加成绩表\n## 查询练习\n### ——查询student表的所有记录。*代表所有\nmysql> select *from student;\n+-----+--------------+------+---------------------+-------+\n| sno | sname        | ssex | sbirthday           | class |\n+-----+--------------+------+---------------------+-------+\n| 101 | 撒旦法达     | 男   | 1977-04-23 00:00:00 | 95037 |\n| 102 | 阿斯蒂芬     | 女   | 1977-04-23 00:00:00 | 95033 |\n| 103 | 发电房芬     | 女   | 1977-04-23 00:00:00 | 95035 |\n| 104 | 曾阿凡达     | 男   | 1977-04-23 00:00:00 | 95033 |\n| 105 | 四方达狗     | 男   | 1977-04-23 00:00:00 | 95032 |\n| 106 | 曾华         | 女   | 1977-04-23 00:00:00 | 95031 |\n| 107 | 阿法狗       | 男   | 1977-04-23 00:00:00 | 95033 |\n| 108 | 沙发         | 男   | 1977-04-23 00:00:00 | 95033 |\n| 109 | 曾曾华       | 女   | 1977-04-23 00:00:00 | 95033 |\n+-----+--------------+------+---------------------+-------+\n9 rows in set (0.00 sec)\n### ——查询student表中的所有记录的sname，ssex，class列     select\nmysql> select sname,ssex,class from student;\n+--------------+------+-------+\n| sname        | ssex | class |\n+--------------+------+-------+\n| 撒旦法达     | 男   | 95037 |\n| 阿斯蒂芬     | 女   | 95033 |\n| 发电房芬     | 女   | 95035 |\n| 曾阿凡达     | 男   | 95033 |\n| 四方达狗     | 男   | 95032 |\n| 曾华         | 女   | 95031 |\n| 阿法狗       | 男   | 95033 |\n| 沙发         | 男   | 95033 |\n| 曾曾华       | 女   | 95033 |\n+--------------+------+-------+\n9 rows in set (0.00 sec)\n### ——查询教师所有的单位既不重复的depart列   select distinct 排重\nmysql> select distinct depart from teacher;\n+-----------------+\n| depart          |\n+-----------------+\n| 计算机系        |\n| 电子工程系      |\n+-----------------+\n2 rows in set (0.00 sec)\n### ——查询score表中成绩在60-80之间的所有记录     查询区间 between。。。and\nmysql> select*from score where degree between 60 and 80;\n+-----+-------+--------+\n| sno | cno   | degree |\n+-----+-------+--------+\n| 102 | 2-801 |     77 |\n| 105 | 2-801 |     67 |\n+-----+-------+--------+\n2 rows in set (0.00 sec)\n### ——查询score表中成绩为98，87的记录      in\nselect *from score where degree in (98,87);\nmysql> select *from score where degree in (98,87);\n+-----+-------+--------+\n| sno | cno   | degree |\n+-----+-------+--------+\n| 103 | 3-802 |     87 |\n| 104 | 2-802 |     87 |\n| 106 | 3-801 |     98 |\n| 108 | 3-802 |     87 |\n+-----+-------+--------+\n4 rows in set (0.00 sec)\n### ——查询student表中95031班的性别为女的同学记录   or\nmysql> select *from student where class='95033' or ssex = '女';\n+-----+--------------+------+---------------------+-------+\n| sno | sname        | ssex | sbirthday           | class |\n+-----+--------------+------+---------------------+-------+\n| 102 | 阿斯蒂芬     | 女   | 1977-04-23 00:00:00 | 95033 |\n| 103 | 发电房芬     | 女   | 1977-04-23 00:00:00 | 95035 |\n| 104 | 曾阿凡达     | 男   | 1977-04-23 00:00:00 | 95033 |\n| 106 | 曾华         | 女   | 1977-04-23 00:00:00 | 95031 |\n| 107 | 阿法狗       | 男   | 1977-04-23 00:00:00 | 95033 |\n| 108 | 沙发         | 男   | 1977-04-23 00:00:00 | 95033 |\n| 109 | 曾曾华       | 女   | 1977-04-23 00:00:00 | 95033 |\n+-----+--------------+------+---------------------+-------+\n7 rows in set (0.00 sec)\n### ——以class降序查询student表的所有记录  order by ...desc\nmysql> select *from student order by class desc;\n+-----+--------------+------+---------------------+-------+\n| sno | sname        | ssex | sbirthday           | class |\n+-----+--------------+------+---------------------+-------+\n| 101 | 撒旦法达     | 男   | 1977-04-23 00:00:00 | 95037 |\n| 103 | 发电房芬     | 女   | 1977-04-23 00:00:00 | 95035 |\n| 102 | 阿斯蒂芬     | 女   | 1977-04-23 00:00:00 | 95033 |\n| 104 | 曾阿凡达     | 男   | 1977-04-23 00:00:00 | 95033 |\n| 107 | 阿法狗       | 男   | 1977-04-23 00:00:00 | 95033 |\n| 108 | 沙发         | 男   | 1977-04-23 00:00:00 | 95033 |\n| 109 | 曾曾华       | 女   | 1977-04-23 00:00:00 | 95033 |\n| 105 | 四方达狗     | 男   | 1977-04-23 00:00:00 | 95032 |\n| 106 | 曾华         | 女   | 1977-04-23 00:00:00 | 95031 |\n+-----+--------------+------+---------------------+-------+\n9 rows in set (0.00 sec)\n### ——查询以cno升序，degree降序查询score表的所有记录\nmysql> select *from score order by cno asc,degree desc;\n+-----+-------+--------+\n| sno | cno   | degree |\n+-----+-------+--------+\n| 102 | 2-801 |     77 |\n| 105 | 2-801 |     67 |\n| 104 | 2-802 |     87 |\n| 106 | 3-801 |     98 |\n| 101 | 3-801 |     89 |\n| 103 | 3-802 |     87 |\n| 108 | 3-802 |     87 |\n+-----+-------+--------+\n7 rows in set (0.00 sec)\n### ——查询95033班的学生人数   count (统计)\nmysql> select count(*) from student where class = '95031';\n+----------+\n| count(*) |\n+----------+\n|        1 |\n+----------+\n1 row in set (0.00 sec)\n### ——查询score表中的最高分的学生的学号和课程号（子查询或者排序）\nmysql> select sno,cno from score where degree =(select max(degree) from score);\n+-----+-------+\n| sno | cno   |\n+-----+-------+\n| 106 | 3-801 |\n+-----+-------+\n1 row in set (0.01 sec)\n### ——查询每门课的平均成绩  ——avg()平均  group by 分组\nmysql> Select  cno,avg(degree) from score group by cno;\n+-------+-------------+\n| cno   | avg(degree) |\n+-------+-------------+\n| 2-801 |     72.0000 |\n| 2-802 |     87.0000 |\n| 3-801 |     93.5000 |\n| 3-802 |     87.0000 |\n+-------+-------------+\n4 rows in set (0.00 sec)\n### ——查询所有学生的sno，sname和degree列\nmysql> select sno,sname,degree from course,score where course.cno = score.cno;\n+-----+-----------------+--------+\n| sno | sname           | degree |\n+-----+-----------------+--------+\n| 102 | 数字电路        |     77 |\n| 105 | 数字电路        |     67 |\n| 104 | 高等数学        |     87 |\n| 101 | 操作系统        |     89 |\n| 106 | 操作系统        |     98 |\n| 103 | 计算机导论      |     87 |\n| 108 | 计算机导论      |     87 |\n+-----+-----------------+--------+\n7 rows in set (0.01 sec)\n### ——查询“95033”班级学生每门课的平均分\n1.先把班级学生拿出来\n2.在把1当条件到分数表里筛选\n3.再以cno字段进行分组查询平均成绩\nmysql> select cno,avg(degree) from score where sno in (select sno from student where class = '95033') group by cno;\n+-------+-------------+\n| cno   | avg(degree) |\n+-------+-------------+\n| 2-801 |     77.0000 |\n| 2-802 |     87.0000 |\n| 3-802 |     87.0000 |\n+-------+-------------+\n3 rows in set (0.00 sec);\n### ——查询和学号为105，108的同学同年出生的所有学生的sno，sname，sbirthday。\nmysql> select *from student where year(sbirthday) in (select year(sbirthday)from student where sno in(105,108));\n+-----+--------------+------+---------------------+-------+\n| sno | sname        | ssex | sbirthday           | class |\n+-----+--------------+------+---------------------+-------+\n| 101 | 撒旦法达     | 男   | 1977-04-23 00:00:00 | 95037 |\n| 102 | 阿斯蒂芬     | 女   | 1977-04-23 00:00:00 | 95033 |\n| 103 | 发电房芬     | 女   | 1977-04-23 00:00:00 | 95035 |\n| 104 | 曾阿凡达     | 男   | 1977-04-23 00:00:00 | 95033 |\n| 105 | 四方达狗     | 男   | 1977-04-23 00:00:00 | 95032 |\n| 106 | 曾华         | 女   | 1977-04-23 00:00:00 | 95031 |\n| 107 | 阿法狗       | 男   | 1977-04-23 00:00:00 | 95033 |\n| 108 | 沙发         | 男   | 1977-04-23 00:00:00 | 95033 |\n| 109 | 曾曾华       | 女   | 1977-04-23 00:00:00 | 95033 |\n+-----+--------------+------+---------------------+-------+\n9 rows in set (0.00 sec)\n### ——查询四狗老师教课的学生的成绩\nmysql> select *from score where cno=(select cno from course where tno = (select tno from teacher where tname = '四狗'));\n+-----+-------+--------+\n| sno | cno   | degree |\n+-----+-------+--------+\n| 102 | 2-801 |     77 |\n| 105 | 2-801 |     67 |\n+-----+-------+--------+\n2 rows in set (0.00 sec)\n### ——查询计算机系与电子工程系不同职称的教师的tname和prof\n————union 求并集  合并到一起\nselect prof from teacher where depart ='电子工程系'；\nselect *from teacher where depart = '计算机系' and prof not in (select  prof from teacher where depart ='电子工程系')\nunion\nselect *from teacher where depart = '电子工程系' and prof not in (select  prof from teacher where depart ='计算机系');\n+----+--------------+------+---------------------+-----------+-----------------+\n| tno | tname        | tsex | tbirthday           | prof      | depart          |\n+-----+--------------+------+---------------------+-----------+-----------------+\n| 801 | 法达         | 男   | 1977-04-30 00:00:00 | 讲师      | 计算机系        |\n| 803 | 房芬         | 女   | 1977-04-13 00:00:00 | 教授      | 计算机系        |\n| 805 | 四狗         | 男   | 1977-04-27 00:00:00 | 副教授    | 电子工程系      |\n| 806 | 曾沙发华     | 女   | 1977-05-23 00:00:00 | 助教      | 电子工程系      |\n+-----+--------------+------+---------------------+-----------+-----------------+\n4 rows in set (0.01 sec）\n\n### ——any任意（至少） all且（所有） as 别名（重命名打印） union合并 having count(*)>1 数量大于1   year(now())现在的年份   order by 顺序查询\n","slug":"MySQL学习笔记5","published":1,"updated":"2022-11-21T11:55:43.548Z","comments":1,"layout":"post","photos":[],"link":"","_id":"claqy94kb000ibklgh8bm7e3p","content":"<h1 id=\"MySQL查询练习\"><a href=\"#MySQL查询练习\" class=\"headerlink\" title=\"MySQL查询练习\"></a>MySQL查询练习</h1><h3 id=\"学生表Student\"><a href=\"#学生表Student\" class=\"headerlink\" title=\"学生表Student\"></a>学生表Student</h3><p>——学号，姓名，性别，出生年月日，所在班级。</p>\n<pre class=\"line-numbers language-mysql\" data-language=\"mysql\"><code class=\"language-mysql\">create table student(\n  sno varchar(20) primary key,\n  sname varchar(20) not null,\n  ssex varchar(10) not null,\n  sbirthday datetime,\n  class varchar(20)\n  );<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"——课程表Course\"><a href=\"#——课程表Course\" class=\"headerlink\" title=\"——课程表Course\"></a>——课程表Course</h3><p>——课程号，课程名称，教师编号</p>\n<pre class=\"line-numbers language-mysql\" data-language=\"mysql\"><code class=\"language-mysql\">create table course(\n  cno varchar(20) primary key,\n  sname varchar(20) not null,\n  tno varchar(20) not null,\n  foreign key(tno) references teacher(tno)\n);<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"——成绩表-Score\"><a href=\"#——成绩表-Score\" class=\"headerlink\" title=\"——成绩表 Score\"></a>——成绩表 Score</h3><p>——学号，课程号，成绩</p>\n<pre class=\"line-numbers language-mysql\" data-language=\"mysql\"><code class=\"language-mysql\">create table score(\n  sno varchar(20) not null,\n  cno varchar(20) not null,\n  degree decimal,\n  foreign key(sno) references student(sno),\n     foreign key(cno) references course(cno),\n  primary key(sno,cno)\n  );<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"——教师表-Teacher\"><a href=\"#——教师表-Teacher\" class=\"headerlink\" title=\"——教师表 Teacher\"></a>——教师表 Teacher</h3><p>——教师编号，教师姓名，教师性别，出生年月日，职称，所在部门。</p>\n<pre class=\"line-numbers language-mysql\" data-language=\"mysql\"><code class=\"language-mysql\">create table teacher(\n  tno varchar(20) primary key,\n  tname varchar(20) not null,\n  tsex varchar(10) not null,\n  tbirthday datetime,\n  prof varchar(20) not null,\n  depart varchar(20) not null\n  );<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"——往表中添加数据\"><a href=\"#——往表中添加数据\" class=\"headerlink\" title=\"——往表中添加数据\"></a>——往表中添加数据</h3><p>—添加学生信息<br>—添加教师信息<br>—添加课程表<br>—添加成绩表</p>\n<h2 id=\"查询练习\"><a href=\"#查询练习\" class=\"headerlink\" title=\"查询练习\"></a>查询练习</h2><h3 id=\"——查询student表的所有记录。-代表所有\"><a href=\"#——查询student表的所有记录。-代表所有\" class=\"headerlink\" title=\"——查询student表的所有记录。*代表所有\"></a>——查询student表的所有记录。*代表所有</h3><p>mysql&gt; select *from student;<br>+—–+————–+——+———————+——-+<br>| sno | sname        | ssex | sbirthday           | class |<br>+—–+————–+——+———————+——-+<br>| 101 | 撒旦法达     | 男   | 1977-04-23 00:00:00 | 95037 |<br>| 102 | 阿斯蒂芬     | 女   | 1977-04-23 00:00:00 | 95033 |<br>| 103 | 发电房芬     | 女   | 1977-04-23 00:00:00 | 95035 |<br>| 104 | 曾阿凡达     | 男   | 1977-04-23 00:00:00 | 95033 |<br>| 105 | 四方达狗     | 男   | 1977-04-23 00:00:00 | 95032 |<br>| 106 | 曾华         | 女   | 1977-04-23 00:00:00 | 95031 |<br>| 107 | 阿法狗       | 男   | 1977-04-23 00:00:00 | 95033 |<br>| 108 | 沙发         | 男   | 1977-04-23 00:00:00 | 95033 |<br>| 109 | 曾曾华       | 女   | 1977-04-23 00:00:00 | 95033 |<br>+—–+————–+——+———————+——-+<br>9 rows in set (0.00 sec)</p>\n<h3 id=\"——查询student表中的所有记录的sname，ssex，class列-select\"><a href=\"#——查询student表中的所有记录的sname，ssex，class列-select\" class=\"headerlink\" title=\"——查询student表中的所有记录的sname，ssex，class列     select\"></a>——查询student表中的所有记录的sname，ssex，class列     select</h3><p>mysql&gt; select sname,ssex,class from student;<br>+————–+——+——-+<br>| sname        | ssex | class |<br>+————–+——+——-+<br>| 撒旦法达     | 男   | 95037 |<br>| 阿斯蒂芬     | 女   | 95033 |<br>| 发电房芬     | 女   | 95035 |<br>| 曾阿凡达     | 男   | 95033 |<br>| 四方达狗     | 男   | 95032 |<br>| 曾华         | 女   | 95031 |<br>| 阿法狗       | 男   | 95033 |<br>| 沙发         | 男   | 95033 |<br>| 曾曾华       | 女   | 95033 |<br>+————–+——+——-+<br>9 rows in set (0.00 sec)</p>\n<h3 id=\"——查询教师所有的单位既不重复的depart列-select-distinct-排重\"><a href=\"#——查询教师所有的单位既不重复的depart列-select-distinct-排重\" class=\"headerlink\" title=\"——查询教师所有的单位既不重复的depart列   select distinct 排重\"></a>——查询教师所有的单位既不重复的depart列   select distinct 排重</h3><p>mysql&gt; select distinct depart from teacher;<br>+—————–+<br>| depart          |<br>+—————–+<br>| 计算机系        |<br>| 电子工程系      |<br>+—————–+<br>2 rows in set (0.00 sec)</p>\n<h3 id=\"——查询score表中成绩在60-80之间的所有记录-查询区间-between。。。and\"><a href=\"#——查询score表中成绩在60-80之间的所有记录-查询区间-between。。。and\" class=\"headerlink\" title=\"——查询score表中成绩在60-80之间的所有记录     查询区间 between。。。and\"></a>——查询score表中成绩在60-80之间的所有记录     查询区间 between。。。and</h3><p>mysql&gt; select*from score where degree between 60 and 80;<br>+—–+——-+——–+<br>| sno | cno   | degree |<br>+—–+——-+——–+<br>| 102 | 2-801 |     77 |<br>| 105 | 2-801 |     67 |<br>+—–+——-+——–+<br>2 rows in set (0.00 sec)</p>\n<h3 id=\"——查询score表中成绩为98，87的记录-in\"><a href=\"#——查询score表中成绩为98，87的记录-in\" class=\"headerlink\" title=\"——查询score表中成绩为98，87的记录      in\"></a>——查询score表中成绩为98，87的记录      in</h3><p>select *from score where degree in (98,87);<br>mysql&gt; select *from score where degree in (98,87);<br>+—–+——-+——–+<br>| sno | cno   | degree |<br>+—–+——-+——–+<br>| 103 | 3-802 |     87 |<br>| 104 | 2-802 |     87 |<br>| 106 | 3-801 |     98 |<br>| 108 | 3-802 |     87 |<br>+—–+——-+——–+<br>4 rows in set (0.00 sec)</p>\n<h3 id=\"——查询student表中95031班的性别为女的同学记录-or\"><a href=\"#——查询student表中95031班的性别为女的同学记录-or\" class=\"headerlink\" title=\"——查询student表中95031班的性别为女的同学记录   or\"></a>——查询student表中95031班的性别为女的同学记录   or</h3><p>mysql&gt; select *from student where class=’95033’ or ssex = ‘女’;<br>+—–+————–+——+———————+——-+<br>| sno | sname        | ssex | sbirthday           | class |<br>+—–+————–+——+———————+——-+<br>| 102 | 阿斯蒂芬     | 女   | 1977-04-23 00:00:00 | 95033 |<br>| 103 | 发电房芬     | 女   | 1977-04-23 00:00:00 | 95035 |<br>| 104 | 曾阿凡达     | 男   | 1977-04-23 00:00:00 | 95033 |<br>| 106 | 曾华         | 女   | 1977-04-23 00:00:00 | 95031 |<br>| 107 | 阿法狗       | 男   | 1977-04-23 00:00:00 | 95033 |<br>| 108 | 沙发         | 男   | 1977-04-23 00:00:00 | 95033 |<br>| 109 | 曾曾华       | 女   | 1977-04-23 00:00:00 | 95033 |<br>+—–+————–+——+———————+——-+<br>7 rows in set (0.00 sec)</p>\n<h3 id=\"——以class降序查询student表的所有记录-order-by-…desc\"><a href=\"#——以class降序查询student表的所有记录-order-by-…desc\" class=\"headerlink\" title=\"——以class降序查询student表的所有记录  order by …desc\"></a>——以class降序查询student表的所有记录  order by …desc</h3><p>mysql&gt; select *from student order by class desc;<br>+—–+————–+——+———————+——-+<br>| sno | sname        | ssex | sbirthday           | class |<br>+—–+————–+——+———————+——-+<br>| 101 | 撒旦法达     | 男   | 1977-04-23 00:00:00 | 95037 |<br>| 103 | 发电房芬     | 女   | 1977-04-23 00:00:00 | 95035 |<br>| 102 | 阿斯蒂芬     | 女   | 1977-04-23 00:00:00 | 95033 |<br>| 104 | 曾阿凡达     | 男   | 1977-04-23 00:00:00 | 95033 |<br>| 107 | 阿法狗       | 男   | 1977-04-23 00:00:00 | 95033 |<br>| 108 | 沙发         | 男   | 1977-04-23 00:00:00 | 95033 |<br>| 109 | 曾曾华       | 女   | 1977-04-23 00:00:00 | 95033 |<br>| 105 | 四方达狗     | 男   | 1977-04-23 00:00:00 | 95032 |<br>| 106 | 曾华         | 女   | 1977-04-23 00:00:00 | 95031 |<br>+—–+————–+——+———————+——-+<br>9 rows in set (0.00 sec)</p>\n<h3 id=\"——查询以cno升序，degree降序查询score表的所有记录\"><a href=\"#——查询以cno升序，degree降序查询score表的所有记录\" class=\"headerlink\" title=\"——查询以cno升序，degree降序查询score表的所有记录\"></a>——查询以cno升序，degree降序查询score表的所有记录</h3><p>mysql&gt; select *from score order by cno asc,degree desc;<br>+—–+——-+——–+<br>| sno | cno   | degree |<br>+—–+——-+——–+<br>| 102 | 2-801 |     77 |<br>| 105 | 2-801 |     67 |<br>| 104 | 2-802 |     87 |<br>| 106 | 3-801 |     98 |<br>| 101 | 3-801 |     89 |<br>| 103 | 3-802 |     87 |<br>| 108 | 3-802 |     87 |<br>+—–+——-+——–+<br>7 rows in set (0.00 sec)</p>\n<h3 id=\"——查询95033班的学生人数-count-统计\"><a href=\"#——查询95033班的学生人数-count-统计\" class=\"headerlink\" title=\"——查询95033班的学生人数   count (统计)\"></a>——查询95033班的学生人数   count (统计)</h3><p>mysql&gt; select count(<em>) from student where class = ‘95031’;<br>+———-+<br>| count(</em>) |<br>+———-+<br>|        1 |<br>+———-+<br>1 row in set (0.00 sec)</p>\n<h3 id=\"——查询score表中的最高分的学生的学号和课程号（子查询或者排序）\"><a href=\"#——查询score表中的最高分的学生的学号和课程号（子查询或者排序）\" class=\"headerlink\" title=\"——查询score表中的最高分的学生的学号和课程号（子查询或者排序）\"></a>——查询score表中的最高分的学生的学号和课程号（子查询或者排序）</h3><p>mysql&gt; select sno,cno from score where degree =(select max(degree) from score);<br>+—–+——-+<br>| sno | cno   |<br>+—–+——-+<br>| 106 | 3-801 |<br>+—–+——-+<br>1 row in set (0.01 sec)</p>\n<h3 id=\"——查询每门课的平均成绩-——avg-平均-group-by-分组\"><a href=\"#——查询每门课的平均成绩-——avg-平均-group-by-分组\" class=\"headerlink\" title=\"——查询每门课的平均成绩  ——avg()平均  group by 分组\"></a>——查询每门课的平均成绩  ——avg()平均  group by 分组</h3><p>mysql&gt; Select  cno,avg(degree) from score group by cno;<br>+——-+————-+<br>| cno   | avg(degree) |<br>+——-+————-+<br>| 2-801 |     72.0000 |<br>| 2-802 |     87.0000 |<br>| 3-801 |     93.5000 |<br>| 3-802 |     87.0000 |<br>+——-+————-+<br>4 rows in set (0.00 sec)</p>\n<h3 id=\"——查询所有学生的sno，sname和degree列\"><a href=\"#——查询所有学生的sno，sname和degree列\" class=\"headerlink\" title=\"——查询所有学生的sno，sname和degree列\"></a>——查询所有学生的sno，sname和degree列</h3><p>mysql&gt; select sno,sname,degree from course,score where course.cno = score.cno;<br>+—–+—————–+——–+<br>| sno | sname           | degree |<br>+—–+—————–+——–+<br>| 102 | 数字电路        |     77 |<br>| 105 | 数字电路        |     67 |<br>| 104 | 高等数学        |     87 |<br>| 101 | 操作系统        |     89 |<br>| 106 | 操作系统        |     98 |<br>| 103 | 计算机导论      |     87 |<br>| 108 | 计算机导论      |     87 |<br>+—–+—————–+——–+<br>7 rows in set (0.01 sec)</p>\n<h3 id=\"——查询“95033”班级学生每门课的平均分\"><a href=\"#——查询“95033”班级学生每门课的平均分\" class=\"headerlink\" title=\"——查询“95033”班级学生每门课的平均分\"></a>——查询“95033”班级学生每门课的平均分</h3><p>1.先把班级学生拿出来<br>2.在把1当条件到分数表里筛选<br>3.再以cno字段进行分组查询平均成绩<br>mysql&gt; select cno,avg(degree) from score where sno in (select sno from student where class = ‘95033’) group by cno;<br>+——-+————-+<br>| cno   | avg(degree) |<br>+——-+————-+<br>| 2-801 |     77.0000 |<br>| 2-802 |     87.0000 |<br>| 3-802 |     87.0000 |<br>+——-+————-+<br>3 rows in set (0.00 sec);</p>\n<h3 id=\"——查询和学号为105，108的同学同年出生的所有学生的sno，sname，sbirthday。\"><a href=\"#——查询和学号为105，108的同学同年出生的所有学生的sno，sname，sbirthday。\" class=\"headerlink\" title=\"——查询和学号为105，108的同学同年出生的所有学生的sno，sname，sbirthday。\"></a>——查询和学号为105，108的同学同年出生的所有学生的sno，sname，sbirthday。</h3><p>mysql&gt; select *from student where year(sbirthday) in (select year(sbirthday)from student where sno in(105,108));<br>+—–+————–+——+———————+——-+<br>| sno | sname        | ssex | sbirthday           | class |<br>+—–+————–+——+———————+——-+<br>| 101 | 撒旦法达     | 男   | 1977-04-23 00:00:00 | 95037 |<br>| 102 | 阿斯蒂芬     | 女   | 1977-04-23 00:00:00 | 95033 |<br>| 103 | 发电房芬     | 女   | 1977-04-23 00:00:00 | 95035 |<br>| 104 | 曾阿凡达     | 男   | 1977-04-23 00:00:00 | 95033 |<br>| 105 | 四方达狗     | 男   | 1977-04-23 00:00:00 | 95032 |<br>| 106 | 曾华         | 女   | 1977-04-23 00:00:00 | 95031 |<br>| 107 | 阿法狗       | 男   | 1977-04-23 00:00:00 | 95033 |<br>| 108 | 沙发         | 男   | 1977-04-23 00:00:00 | 95033 |<br>| 109 | 曾曾华       | 女   | 1977-04-23 00:00:00 | 95033 |<br>+—–+————–+——+———————+——-+<br>9 rows in set (0.00 sec)</p>\n<h3 id=\"——查询四狗老师教课的学生的成绩\"><a href=\"#——查询四狗老师教课的学生的成绩\" class=\"headerlink\" title=\"——查询四狗老师教课的学生的成绩\"></a>——查询四狗老师教课的学生的成绩</h3><p>mysql&gt; select *from score where cno=(select cno from course where tno = (select tno from teacher where tname = ‘四狗’));<br>+—–+——-+——–+<br>| sno | cno   | degree |<br>+—–+——-+——–+<br>| 102 | 2-801 |     77 |<br>| 105 | 2-801 |     67 |<br>+—–+——-+——–+<br>2 rows in set (0.00 sec)</p>\n<h3 id=\"——查询计算机系与电子工程系不同职称的教师的tname和prof\"><a href=\"#——查询计算机系与电子工程系不同职称的教师的tname和prof\" class=\"headerlink\" title=\"——查询计算机系与电子工程系不同职称的教师的tname和prof\"></a>——查询计算机系与电子工程系不同职称的教师的tname和prof</h3><p>————union 求并集  合并到一起<br>select prof from teacher where depart =’电子工程系’；<br>select *from teacher where depart = ‘计算机系’ and prof not in (select  prof from teacher where depart =’电子工程系’)<br>union<br>select *from teacher where depart = ‘电子工程系’ and prof not in (select  prof from teacher where depart =’计算机系’);<br>+—-+————–+——+———————+———–+—————–+<br>| tno | tname        | tsex | tbirthday           | prof      | depart          |<br>+—–+————–+——+———————+———–+—————–+<br>| 801 | 法达         | 男   | 1977-04-30 00:00:00 | 讲师      | 计算机系        |<br>| 803 | 房芬         | 女   | 1977-04-13 00:00:00 | 教授      | 计算机系        |<br>| 805 | 四狗         | 男   | 1977-04-27 00:00:00 | 副教授    | 电子工程系      |<br>| 806 | 曾沙发华     | 女   | 1977-05-23 00:00:00 | 助教      | 电子工程系      |<br>+—–+————–+——+———————+———–+—————–+<br>4 rows in set (0.01 sec）</p>\n<h3 id=\"——any任意（至少）-all且（所有）-as-别名（重命名打印）-union合并-having-count-gt-1-数量大于1-year-now-现在的年份-order-by-顺序查询\"><a href=\"#——any任意（至少）-all且（所有）-as-别名（重命名打印）-union合并-having-count-gt-1-数量大于1-year-now-现在的年份-order-by-顺序查询\" class=\"headerlink\" title=\"——any任意（至少） all且（所有） as 别名（重命名打印） union合并 having count(*)&gt;1 数量大于1   year(now())现在的年份   order by 顺序查询\"></a>——any任意（至少） all且（所有） as 别名（重命名打印） union合并 having count(*)&gt;1 数量大于1   year(now())现在的年份   order by 顺序查询</h3>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"MySQL查询练习\"><a href=\"#MySQL查询练习\" class=\"headerlink\" title=\"MySQL查询练习\"></a>MySQL查询练习</h1><h3 id=\"学生表Student\"><a href=\"#学生表Student\" class=\"headerlink\" title=\"学生表Student\"></a>学生表Student</h3><p>——学号，姓名，性别，出生年月日，所在班级。</p>\n<pre class=\"line-numbers language-mysql\" data-language=\"mysql\"><code class=\"language-mysql\">create table student(\n  sno varchar(20) primary key,\n  sname varchar(20) not null,\n  ssex varchar(10) not null,\n  sbirthday datetime,\n  class varchar(20)\n  );<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"——课程表Course\"><a href=\"#——课程表Course\" class=\"headerlink\" title=\"——课程表Course\"></a>——课程表Course</h3><p>——课程号，课程名称，教师编号</p>\n<pre class=\"line-numbers language-mysql\" data-language=\"mysql\"><code class=\"language-mysql\">create table course(\n  cno varchar(20) primary key,\n  sname varchar(20) not null,\n  tno varchar(20) not null,\n  foreign key(tno) references teacher(tno)\n);<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"——成绩表-Score\"><a href=\"#——成绩表-Score\" class=\"headerlink\" title=\"——成绩表 Score\"></a>——成绩表 Score</h3><p>——学号，课程号，成绩</p>\n<pre class=\"line-numbers language-mysql\" data-language=\"mysql\"><code class=\"language-mysql\">create table score(\n  sno varchar(20) not null,\n  cno varchar(20) not null,\n  degree decimal,\n  foreign key(sno) references student(sno),\n     foreign key(cno) references course(cno),\n  primary key(sno,cno)\n  );<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"——教师表-Teacher\"><a href=\"#——教师表-Teacher\" class=\"headerlink\" title=\"——教师表 Teacher\"></a>——教师表 Teacher</h3><p>——教师编号，教师姓名，教师性别，出生年月日，职称，所在部门。</p>\n<pre class=\"line-numbers language-mysql\" data-language=\"mysql\"><code class=\"language-mysql\">create table teacher(\n  tno varchar(20) primary key,\n  tname varchar(20) not null,\n  tsex varchar(10) not null,\n  tbirthday datetime,\n  prof varchar(20) not null,\n  depart varchar(20) not null\n  );<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"——往表中添加数据\"><a href=\"#——往表中添加数据\" class=\"headerlink\" title=\"——往表中添加数据\"></a>——往表中添加数据</h3><p>—添加学生信息<br>—添加教师信息<br>—添加课程表<br>—添加成绩表</p>\n<h2 id=\"查询练习\"><a href=\"#查询练习\" class=\"headerlink\" title=\"查询练习\"></a>查询练习</h2><h3 id=\"——查询student表的所有记录。-代表所有\"><a href=\"#——查询student表的所有记录。-代表所有\" class=\"headerlink\" title=\"——查询student表的所有记录。*代表所有\"></a>——查询student表的所有记录。*代表所有</h3><p>mysql&gt; select *from student;<br>+—–+————–+——+———————+——-+<br>| sno | sname        | ssex | sbirthday           | class |<br>+—–+————–+——+———————+——-+<br>| 101 | 撒旦法达     | 男   | 1977-04-23 00:00:00 | 95037 |<br>| 102 | 阿斯蒂芬     | 女   | 1977-04-23 00:00:00 | 95033 |<br>| 103 | 发电房芬     | 女   | 1977-04-23 00:00:00 | 95035 |<br>| 104 | 曾阿凡达     | 男   | 1977-04-23 00:00:00 | 95033 |<br>| 105 | 四方达狗     | 男   | 1977-04-23 00:00:00 | 95032 |<br>| 106 | 曾华         | 女   | 1977-04-23 00:00:00 | 95031 |<br>| 107 | 阿法狗       | 男   | 1977-04-23 00:00:00 | 95033 |<br>| 108 | 沙发         | 男   | 1977-04-23 00:00:00 | 95033 |<br>| 109 | 曾曾华       | 女   | 1977-04-23 00:00:00 | 95033 |<br>+—–+————–+——+———————+——-+<br>9 rows in set (0.00 sec)</p>\n<h3 id=\"——查询student表中的所有记录的sname，ssex，class列-select\"><a href=\"#——查询student表中的所有记录的sname，ssex，class列-select\" class=\"headerlink\" title=\"——查询student表中的所有记录的sname，ssex，class列     select\"></a>——查询student表中的所有记录的sname，ssex，class列     select</h3><p>mysql&gt; select sname,ssex,class from student;<br>+————–+——+——-+<br>| sname        | ssex | class |<br>+————–+——+——-+<br>| 撒旦法达     | 男   | 95037 |<br>| 阿斯蒂芬     | 女   | 95033 |<br>| 发电房芬     | 女   | 95035 |<br>| 曾阿凡达     | 男   | 95033 |<br>| 四方达狗     | 男   | 95032 |<br>| 曾华         | 女   | 95031 |<br>| 阿法狗       | 男   | 95033 |<br>| 沙发         | 男   | 95033 |<br>| 曾曾华       | 女   | 95033 |<br>+————–+——+——-+<br>9 rows in set (0.00 sec)</p>\n<h3 id=\"——查询教师所有的单位既不重复的depart列-select-distinct-排重\"><a href=\"#——查询教师所有的单位既不重复的depart列-select-distinct-排重\" class=\"headerlink\" title=\"——查询教师所有的单位既不重复的depart列   select distinct 排重\"></a>——查询教师所有的单位既不重复的depart列   select distinct 排重</h3><p>mysql&gt; select distinct depart from teacher;<br>+—————–+<br>| depart          |<br>+—————–+<br>| 计算机系        |<br>| 电子工程系      |<br>+—————–+<br>2 rows in set (0.00 sec)</p>\n<h3 id=\"——查询score表中成绩在60-80之间的所有记录-查询区间-between。。。and\"><a href=\"#——查询score表中成绩在60-80之间的所有记录-查询区间-between。。。and\" class=\"headerlink\" title=\"——查询score表中成绩在60-80之间的所有记录     查询区间 between。。。and\"></a>——查询score表中成绩在60-80之间的所有记录     查询区间 between。。。and</h3><p>mysql&gt; select*from score where degree between 60 and 80;<br>+—–+——-+——–+<br>| sno | cno   | degree |<br>+—–+——-+——–+<br>| 102 | 2-801 |     77 |<br>| 105 | 2-801 |     67 |<br>+—–+——-+——–+<br>2 rows in set (0.00 sec)</p>\n<h3 id=\"——查询score表中成绩为98，87的记录-in\"><a href=\"#——查询score表中成绩为98，87的记录-in\" class=\"headerlink\" title=\"——查询score表中成绩为98，87的记录      in\"></a>——查询score表中成绩为98，87的记录      in</h3><p>select *from score where degree in (98,87);<br>mysql&gt; select *from score where degree in (98,87);<br>+—–+——-+——–+<br>| sno | cno   | degree |<br>+—–+——-+——–+<br>| 103 | 3-802 |     87 |<br>| 104 | 2-802 |     87 |<br>| 106 | 3-801 |     98 |<br>| 108 | 3-802 |     87 |<br>+—–+——-+——–+<br>4 rows in set (0.00 sec)</p>\n<h3 id=\"——查询student表中95031班的性别为女的同学记录-or\"><a href=\"#——查询student表中95031班的性别为女的同学记录-or\" class=\"headerlink\" title=\"——查询student表中95031班的性别为女的同学记录   or\"></a>——查询student表中95031班的性别为女的同学记录   or</h3><p>mysql&gt; select *from student where class=’95033’ or ssex = ‘女’;<br>+—–+————–+——+———————+——-+<br>| sno | sname        | ssex | sbirthday           | class |<br>+—–+————–+——+———————+——-+<br>| 102 | 阿斯蒂芬     | 女   | 1977-04-23 00:00:00 | 95033 |<br>| 103 | 发电房芬     | 女   | 1977-04-23 00:00:00 | 95035 |<br>| 104 | 曾阿凡达     | 男   | 1977-04-23 00:00:00 | 95033 |<br>| 106 | 曾华         | 女   | 1977-04-23 00:00:00 | 95031 |<br>| 107 | 阿法狗       | 男   | 1977-04-23 00:00:00 | 95033 |<br>| 108 | 沙发         | 男   | 1977-04-23 00:00:00 | 95033 |<br>| 109 | 曾曾华       | 女   | 1977-04-23 00:00:00 | 95033 |<br>+—–+————–+——+———————+——-+<br>7 rows in set (0.00 sec)</p>\n<h3 id=\"——以class降序查询student表的所有记录-order-by-…desc\"><a href=\"#——以class降序查询student表的所有记录-order-by-…desc\" class=\"headerlink\" title=\"——以class降序查询student表的所有记录  order by …desc\"></a>——以class降序查询student表的所有记录  order by …desc</h3><p>mysql&gt; select *from student order by class desc;<br>+—–+————–+——+———————+——-+<br>| sno | sname        | ssex | sbirthday           | class |<br>+—–+————–+——+———————+——-+<br>| 101 | 撒旦法达     | 男   | 1977-04-23 00:00:00 | 95037 |<br>| 103 | 发电房芬     | 女   | 1977-04-23 00:00:00 | 95035 |<br>| 102 | 阿斯蒂芬     | 女   | 1977-04-23 00:00:00 | 95033 |<br>| 104 | 曾阿凡达     | 男   | 1977-04-23 00:00:00 | 95033 |<br>| 107 | 阿法狗       | 男   | 1977-04-23 00:00:00 | 95033 |<br>| 108 | 沙发         | 男   | 1977-04-23 00:00:00 | 95033 |<br>| 109 | 曾曾华       | 女   | 1977-04-23 00:00:00 | 95033 |<br>| 105 | 四方达狗     | 男   | 1977-04-23 00:00:00 | 95032 |<br>| 106 | 曾华         | 女   | 1977-04-23 00:00:00 | 95031 |<br>+—–+————–+——+———————+——-+<br>9 rows in set (0.00 sec)</p>\n<h3 id=\"——查询以cno升序，degree降序查询score表的所有记录\"><a href=\"#——查询以cno升序，degree降序查询score表的所有记录\" class=\"headerlink\" title=\"——查询以cno升序，degree降序查询score表的所有记录\"></a>——查询以cno升序，degree降序查询score表的所有记录</h3><p>mysql&gt; select *from score order by cno asc,degree desc;<br>+—–+——-+——–+<br>| sno | cno   | degree |<br>+—–+——-+——–+<br>| 102 | 2-801 |     77 |<br>| 105 | 2-801 |     67 |<br>| 104 | 2-802 |     87 |<br>| 106 | 3-801 |     98 |<br>| 101 | 3-801 |     89 |<br>| 103 | 3-802 |     87 |<br>| 108 | 3-802 |     87 |<br>+—–+——-+——–+<br>7 rows in set (0.00 sec)</p>\n<h3 id=\"——查询95033班的学生人数-count-统计\"><a href=\"#——查询95033班的学生人数-count-统计\" class=\"headerlink\" title=\"——查询95033班的学生人数   count (统计)\"></a>——查询95033班的学生人数   count (统计)</h3><p>mysql&gt; select count(<em>) from student where class = ‘95031’;<br>+———-+<br>| count(</em>) |<br>+———-+<br>|        1 |<br>+———-+<br>1 row in set (0.00 sec)</p>\n<h3 id=\"——查询score表中的最高分的学生的学号和课程号（子查询或者排序）\"><a href=\"#——查询score表中的最高分的学生的学号和课程号（子查询或者排序）\" class=\"headerlink\" title=\"——查询score表中的最高分的学生的学号和课程号（子查询或者排序）\"></a>——查询score表中的最高分的学生的学号和课程号（子查询或者排序）</h3><p>mysql&gt; select sno,cno from score where degree =(select max(degree) from score);<br>+—–+——-+<br>| sno | cno   |<br>+—–+——-+<br>| 106 | 3-801 |<br>+—–+——-+<br>1 row in set (0.01 sec)</p>\n<h3 id=\"——查询每门课的平均成绩-——avg-平均-group-by-分组\"><a href=\"#——查询每门课的平均成绩-——avg-平均-group-by-分组\" class=\"headerlink\" title=\"——查询每门课的平均成绩  ——avg()平均  group by 分组\"></a>——查询每门课的平均成绩  ——avg()平均  group by 分组</h3><p>mysql&gt; Select  cno,avg(degree) from score group by cno;<br>+——-+————-+<br>| cno   | avg(degree) |<br>+——-+————-+<br>| 2-801 |     72.0000 |<br>| 2-802 |     87.0000 |<br>| 3-801 |     93.5000 |<br>| 3-802 |     87.0000 |<br>+——-+————-+<br>4 rows in set (0.00 sec)</p>\n<h3 id=\"——查询所有学生的sno，sname和degree列\"><a href=\"#——查询所有学生的sno，sname和degree列\" class=\"headerlink\" title=\"——查询所有学生的sno，sname和degree列\"></a>——查询所有学生的sno，sname和degree列</h3><p>mysql&gt; select sno,sname,degree from course,score where course.cno = score.cno;<br>+—–+—————–+——–+<br>| sno | sname           | degree |<br>+—–+—————–+——–+<br>| 102 | 数字电路        |     77 |<br>| 105 | 数字电路        |     67 |<br>| 104 | 高等数学        |     87 |<br>| 101 | 操作系统        |     89 |<br>| 106 | 操作系统        |     98 |<br>| 103 | 计算机导论      |     87 |<br>| 108 | 计算机导论      |     87 |<br>+—–+—————–+——–+<br>7 rows in set (0.01 sec)</p>\n<h3 id=\"——查询“95033”班级学生每门课的平均分\"><a href=\"#——查询“95033”班级学生每门课的平均分\" class=\"headerlink\" title=\"——查询“95033”班级学生每门课的平均分\"></a>——查询“95033”班级学生每门课的平均分</h3><p>1.先把班级学生拿出来<br>2.在把1当条件到分数表里筛选<br>3.再以cno字段进行分组查询平均成绩<br>mysql&gt; select cno,avg(degree) from score where sno in (select sno from student where class = ‘95033’) group by cno;<br>+——-+————-+<br>| cno   | avg(degree) |<br>+——-+————-+<br>| 2-801 |     77.0000 |<br>| 2-802 |     87.0000 |<br>| 3-802 |     87.0000 |<br>+——-+————-+<br>3 rows in set (0.00 sec);</p>\n<h3 id=\"——查询和学号为105，108的同学同年出生的所有学生的sno，sname，sbirthday。\"><a href=\"#——查询和学号为105，108的同学同年出生的所有学生的sno，sname，sbirthday。\" class=\"headerlink\" title=\"——查询和学号为105，108的同学同年出生的所有学生的sno，sname，sbirthday。\"></a>——查询和学号为105，108的同学同年出生的所有学生的sno，sname，sbirthday。</h3><p>mysql&gt; select *from student where year(sbirthday) in (select year(sbirthday)from student where sno in(105,108));<br>+—–+————–+——+———————+——-+<br>| sno | sname        | ssex | sbirthday           | class |<br>+—–+————–+——+———————+——-+<br>| 101 | 撒旦法达     | 男   | 1977-04-23 00:00:00 | 95037 |<br>| 102 | 阿斯蒂芬     | 女   | 1977-04-23 00:00:00 | 95033 |<br>| 103 | 发电房芬     | 女   | 1977-04-23 00:00:00 | 95035 |<br>| 104 | 曾阿凡达     | 男   | 1977-04-23 00:00:00 | 95033 |<br>| 105 | 四方达狗     | 男   | 1977-04-23 00:00:00 | 95032 |<br>| 106 | 曾华         | 女   | 1977-04-23 00:00:00 | 95031 |<br>| 107 | 阿法狗       | 男   | 1977-04-23 00:00:00 | 95033 |<br>| 108 | 沙发         | 男   | 1977-04-23 00:00:00 | 95033 |<br>| 109 | 曾曾华       | 女   | 1977-04-23 00:00:00 | 95033 |<br>+—–+————–+——+———————+——-+<br>9 rows in set (0.00 sec)</p>\n<h3 id=\"——查询四狗老师教课的学生的成绩\"><a href=\"#——查询四狗老师教课的学生的成绩\" class=\"headerlink\" title=\"——查询四狗老师教课的学生的成绩\"></a>——查询四狗老师教课的学生的成绩</h3><p>mysql&gt; select *from score where cno=(select cno from course where tno = (select tno from teacher where tname = ‘四狗’));<br>+—–+——-+——–+<br>| sno | cno   | degree |<br>+—–+——-+——–+<br>| 102 | 2-801 |     77 |<br>| 105 | 2-801 |     67 |<br>+—–+——-+——–+<br>2 rows in set (0.00 sec)</p>\n<h3 id=\"——查询计算机系与电子工程系不同职称的教师的tname和prof\"><a href=\"#——查询计算机系与电子工程系不同职称的教师的tname和prof\" class=\"headerlink\" title=\"——查询计算机系与电子工程系不同职称的教师的tname和prof\"></a>——查询计算机系与电子工程系不同职称的教师的tname和prof</h3><p>————union 求并集  合并到一起<br>select prof from teacher where depart =’电子工程系’；<br>select *from teacher where depart = ‘计算机系’ and prof not in (select  prof from teacher where depart =’电子工程系’)<br>union<br>select *from teacher where depart = ‘电子工程系’ and prof not in (select  prof from teacher where depart =’计算机系’);<br>+—-+————–+——+———————+———–+—————–+<br>| tno | tname        | tsex | tbirthday           | prof      | depart          |<br>+—–+————–+——+———————+———–+—————–+<br>| 801 | 法达         | 男   | 1977-04-30 00:00:00 | 讲师      | 计算机系        |<br>| 803 | 房芬         | 女   | 1977-04-13 00:00:00 | 教授      | 计算机系        |<br>| 805 | 四狗         | 男   | 1977-04-27 00:00:00 | 副教授    | 电子工程系      |<br>| 806 | 曾沙发华     | 女   | 1977-05-23 00:00:00 | 助教      | 电子工程系      |<br>+—–+————–+——+———————+———–+—————–+<br>4 rows in set (0.01 sec）</p>\n<h3 id=\"——any任意（至少）-all且（所有）-as-别名（重命名打印）-union合并-having-count-gt-1-数量大于1-year-now-现在的年份-order-by-顺序查询\"><a href=\"#——any任意（至少）-all且（所有）-as-别名（重命名打印）-union合并-having-count-gt-1-数量大于1-year-now-现在的年份-order-by-顺序查询\" class=\"headerlink\" title=\"——any任意（至少） all且（所有） as 别名（重命名打印） union合并 having count(*)&gt;1 数量大于1   year(now())现在的年份   order by 顺序查询\"></a>——any任意（至少） all且（所有） as 别名（重命名打印） union合并 having count(*)&gt;1 数量大于1   year(now())现在的年份   order by 顺序查询</h3>"},{"title":"MySQL学习笔记6","top":false,"cover":false,"toc":true,"mathjax":true,"date":"2021-08-01T03:01:36.000Z","password":null,"summary":null,"_content":"# ——SQL的四种连接查询\n### 内连接\ninner join 或者join\n```mysql\ncreate table person(\nid int,\nname varchar(20),\ncardId int);\n```\n```mysql\ncreate table card(\nid int,\nname varchar(20)\n);\n```\n```mysql\ninsert into card values(1,'饭卡');\ninsert into card values(2,'建行卡);\ninsert into card values(3,'农行卡');\ninsert into card values(4,'工商卡');\n```\n```mysql\ninsert into person values(1,' 张三',1);\ninsert into person values(2,'李四',3);\ninsert into person values(3,'王五',6);\n```\n```mysql\nselect*from person inner join card on person.cardId=card.id;\n```\n+------+--------+--------+------+-----------+\n| id   | name   | cardId | id   | name      |\n+------+--------+--------+------+-----------+\n|    1 | 张三   |      1 |    1 | 饭卡      |\n|    2 | 李四   |      3 |    3 | 农行卡    |\n+------+--------+--------+------+-----------+\n2 rows in set (0.00 sec)\n内联查询就是两张表中的数据通过某个字段相对查询出相关记录数据\n### 外连接\n左连接left join 或者 left outer join\n右连接right join 或 right outer join\n完全外连接 full join 或full outer join——————mysql暂不支持\n```mysql\nselect*from person left join card on person.cardId=card.id;\n```\n+------+--------+--------+------+-----------+\n| id   | name   | cardId | id   | name      |\n+------+--------+--------+------+-----------+\n|    1 | 张三   |      1 |    1 | 饭卡      |\n|    2 | 李四   |      3 |    3 | 农行卡    |\n|    2 | 李四   |      3 |    3 | 农行卡    |\n|    3 | 王五   |      6 | NULL | NULL      |\n+------+--------+--------+------+-----------+\n4 rows in set (0.00 sec)\n会把左边表里的数据取出来右边表中的数据有就显示出来没有就null。right join 咋刚刚相反\n```mysql\nselect*from person right join card on person.cardId=card.id;\n```\n+------+--------+--------+------+-----------+\n| id   | name   | cardId | id   | name      |\n+------+--------+--------+------+-----------+\n|    1 | 张三   |      1 |    1 | 饭卡      |\n| NULL | NULL   |   NULL |    2 | 建行卡    |\n|    2 | 李四   |      3 |    3 | 农行卡    |\n| NULL | NULL   |   NULL |    4 | 工商卡    |\n|    2 | 李四   |      3 |    3 | 农行卡    |\n+------+--------+--------+------+-----------+\n5 rows in set (0.00 sec)\n## MySQL事务\n事务是一个最小的不可分割的工作单元，事务能够保证一个业务的完整性。为的就是多条语句能同时成功或者同时失败。\n```mysql\nselect @@autocommit;\n```\n+--------------+\n| @@autocommit |\n+--------------+\n|            1 |\n+--------------+\n1 row in set (0.00 sec)\n默认事务开启的作用是什么？\n当我们去执行一个sql语句的时候，效果会立即体现出来，且不能回滚\n```mysql\ncreate database bank;\n```\n创建数据库\n```my\ncreate table user(\nid int primary key,\nname varchar(20),\nmoney int\n);\n```\n```mysql\ninsert into user values(1,'a',1000);\n```\n```mysql\nselect*from user;\n```\n+----+------+-------+\n| id | name | money |\n+----+------+-------+\n|  1 | a    |  1000 |\n+----+------+-------+\nrollback事务回滚（撤销上一句操作）\n### 事务的四大特征\nA  原子性：事务是最小的单位，不可分割\nC 一致性：事务要求，同一事务中的sql语句，必须保证同时成功或者失败\nI 隔离性：事务1和事务2之间具有隔离性\nD  持久性：事务一旦结束，就不可回滚\n### 总结\n事务开启：\n1修改默认提交 set autocommit = 0\n2 begin；\n3 start transaaction;\n事务手动提交：commit；\n事务手动回滚：rollback；\n### 事务的隔离性\n1,read uncommitted    读未提交的\n2,read committed     读已经提交的\n3,repeatable read     可以重复读\n4,serializable         串行化\n### 如何查看数据库隔离级别\nMySQL 8.0 ：\nselect @@global.transaction_isolation;————系统级别的\nselect @@transaction_isolation;————会话级别的\nMySQL5.x：\nselect @@global.tx_isolation;————系统级别的\nselect @@tx_isolation;————会话级别的\n如何修改隔离级别\nset global transaction isolation level 隔离级别;\n### 隔离性解析\n1—  会出现脏读  既a提交可以回滚的数据b在另一边看到了 之后a回滚\n2—   会出现不可重复读  既a提交了不可回滚 b也提交 会出现时差性前后看到不一致\n3—   a在一边提交 b在另一边看不见 但是如果提交相同的会出现错误提示已提交过来  这叫做幻读\n4—   a开启事务 start transaaction;写入操作 ，b也开启事务写入操作 a不commit结束事务操作b就无法执行语句\n多个人同时只能一人进行操作 其他人会进入排队状态（串行化）。  \n—串行化带来的问题是性能差\n","source":"_posts/MySQL学习笔记6.md","raw":"---\ntitle: MySQL学习笔记6\ntop: false\ncover: false\ntoc: true\nmathjax: true\ndate: 2021-08-01 11:01:36\npassword:\nsummary:\ntags: notes\ncategories: MySQL\n---\n# ——SQL的四种连接查询\n### 内连接\ninner join 或者join\n```mysql\ncreate table person(\nid int,\nname varchar(20),\ncardId int);\n```\n```mysql\ncreate table card(\nid int,\nname varchar(20)\n);\n```\n```mysql\ninsert into card values(1,'饭卡');\ninsert into card values(2,'建行卡);\ninsert into card values(3,'农行卡');\ninsert into card values(4,'工商卡');\n```\n```mysql\ninsert into person values(1,' 张三',1);\ninsert into person values(2,'李四',3);\ninsert into person values(3,'王五',6);\n```\n```mysql\nselect*from person inner join card on person.cardId=card.id;\n```\n+------+--------+--------+------+-----------+\n| id   | name   | cardId | id   | name      |\n+------+--------+--------+------+-----------+\n|    1 | 张三   |      1 |    1 | 饭卡      |\n|    2 | 李四   |      3 |    3 | 农行卡    |\n+------+--------+--------+------+-----------+\n2 rows in set (0.00 sec)\n内联查询就是两张表中的数据通过某个字段相对查询出相关记录数据\n### 外连接\n左连接left join 或者 left outer join\n右连接right join 或 right outer join\n完全外连接 full join 或full outer join——————mysql暂不支持\n```mysql\nselect*from person left join card on person.cardId=card.id;\n```\n+------+--------+--------+------+-----------+\n| id   | name   | cardId | id   | name      |\n+------+--------+--------+------+-----------+\n|    1 | 张三   |      1 |    1 | 饭卡      |\n|    2 | 李四   |      3 |    3 | 农行卡    |\n|    2 | 李四   |      3 |    3 | 农行卡    |\n|    3 | 王五   |      6 | NULL | NULL      |\n+------+--------+--------+------+-----------+\n4 rows in set (0.00 sec)\n会把左边表里的数据取出来右边表中的数据有就显示出来没有就null。right join 咋刚刚相反\n```mysql\nselect*from person right join card on person.cardId=card.id;\n```\n+------+--------+--------+------+-----------+\n| id   | name   | cardId | id   | name      |\n+------+--------+--------+------+-----------+\n|    1 | 张三   |      1 |    1 | 饭卡      |\n| NULL | NULL   |   NULL |    2 | 建行卡    |\n|    2 | 李四   |      3 |    3 | 农行卡    |\n| NULL | NULL   |   NULL |    4 | 工商卡    |\n|    2 | 李四   |      3 |    3 | 农行卡    |\n+------+--------+--------+------+-----------+\n5 rows in set (0.00 sec)\n## MySQL事务\n事务是一个最小的不可分割的工作单元，事务能够保证一个业务的完整性。为的就是多条语句能同时成功或者同时失败。\n```mysql\nselect @@autocommit;\n```\n+--------------+\n| @@autocommit |\n+--------------+\n|            1 |\n+--------------+\n1 row in set (0.00 sec)\n默认事务开启的作用是什么？\n当我们去执行一个sql语句的时候，效果会立即体现出来，且不能回滚\n```mysql\ncreate database bank;\n```\n创建数据库\n```my\ncreate table user(\nid int primary key,\nname varchar(20),\nmoney int\n);\n```\n```mysql\ninsert into user values(1,'a',1000);\n```\n```mysql\nselect*from user;\n```\n+----+------+-------+\n| id | name | money |\n+----+------+-------+\n|  1 | a    |  1000 |\n+----+------+-------+\nrollback事务回滚（撤销上一句操作）\n### 事务的四大特征\nA  原子性：事务是最小的单位，不可分割\nC 一致性：事务要求，同一事务中的sql语句，必须保证同时成功或者失败\nI 隔离性：事务1和事务2之间具有隔离性\nD  持久性：事务一旦结束，就不可回滚\n### 总结\n事务开启：\n1修改默认提交 set autocommit = 0\n2 begin；\n3 start transaaction;\n事务手动提交：commit；\n事务手动回滚：rollback；\n### 事务的隔离性\n1,read uncommitted    读未提交的\n2,read committed     读已经提交的\n3,repeatable read     可以重复读\n4,serializable         串行化\n### 如何查看数据库隔离级别\nMySQL 8.0 ：\nselect @@global.transaction_isolation;————系统级别的\nselect @@transaction_isolation;————会话级别的\nMySQL5.x：\nselect @@global.tx_isolation;————系统级别的\nselect @@tx_isolation;————会话级别的\n如何修改隔离级别\nset global transaction isolation level 隔离级别;\n### 隔离性解析\n1—  会出现脏读  既a提交可以回滚的数据b在另一边看到了 之后a回滚\n2—   会出现不可重复读  既a提交了不可回滚 b也提交 会出现时差性前后看到不一致\n3—   a在一边提交 b在另一边看不见 但是如果提交相同的会出现错误提示已提交过来  这叫做幻读\n4—   a开启事务 start transaaction;写入操作 ，b也开启事务写入操作 a不commit结束事务操作b就无法执行语句\n多个人同时只能一人进行操作 其他人会进入排队状态（串行化）。  \n—串行化带来的问题是性能差\n","slug":"MySQL学习笔记6","published":1,"updated":"2022-11-21T11:55:43.548Z","comments":1,"layout":"post","photos":[],"link":"","_id":"claqy94ke000nbklg4i0s6gpu","content":"<h1 id=\"——SQL的四种连接查询\"><a href=\"#——SQL的四种连接查询\" class=\"headerlink\" title=\"——SQL的四种连接查询\"></a>——SQL的四种连接查询</h1><h3 id=\"内连接\"><a href=\"#内连接\" class=\"headerlink\" title=\"内连接\"></a>内连接</h3><p>inner join 或者join</p>\n<pre class=\"line-numbers language-mysql\" data-language=\"mysql\"><code class=\"language-mysql\">create table person(\nid int,\nname varchar(20),\ncardId int);<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<pre class=\"line-numbers language-mysql\" data-language=\"mysql\"><code class=\"language-mysql\">create table card(\nid int,\nname varchar(20)\n);<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<pre class=\"line-numbers language-mysql\" data-language=\"mysql\"><code class=\"language-mysql\">insert into card values(1,&#39;饭卡&#39;);\ninsert into card values(2,&#39;建行卡);\ninsert into card values(3,&#39;农行卡&#39;);\ninsert into card values(4,&#39;工商卡&#39;);<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<pre class=\"line-numbers language-mysql\" data-language=\"mysql\"><code class=\"language-mysql\">insert into person values(1,&#39; 张三&#39;,1);\ninsert into person values(2,&#39;李四&#39;,3);\ninsert into person values(3,&#39;王五&#39;,6);<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<pre class=\"line-numbers language-mysql\" data-language=\"mysql\"><code class=\"language-mysql\">select*from person inner join card on person.cardId&#x3D;card.id;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>+——+——–+——–+——+———–+<br>| id   | name   | cardId | id   | name      |<br>+——+——–+——–+——+———–+<br>|    1 | 张三   |      1 |    1 | 饭卡      |<br>|    2 | 李四   |      3 |    3 | 农行卡    |<br>+——+——–+——–+——+———–+<br>2 rows in set (0.00 sec)<br>内联查询就是两张表中的数据通过某个字段相对查询出相关记录数据</p>\n<h3 id=\"外连接\"><a href=\"#外连接\" class=\"headerlink\" title=\"外连接\"></a>外连接</h3><p>左连接left join 或者 left outer join<br>右连接right join 或 right outer join<br>完全外连接 full join 或full outer join——————mysql暂不支持</p>\n<pre class=\"line-numbers language-mysql\" data-language=\"mysql\"><code class=\"language-mysql\">select*from person left join card on person.cardId&#x3D;card.id;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>+——+——–+——–+——+———–+<br>| id   | name   | cardId | id   | name      |<br>+——+——–+——–+——+———–+<br>|    1 | 张三   |      1 |    1 | 饭卡      |<br>|    2 | 李四   |      3 |    3 | 农行卡    |<br>|    2 | 李四   |      3 |    3 | 农行卡    |<br>|    3 | 王五   |      6 | NULL | NULL      |<br>+——+——–+——–+——+———–+<br>4 rows in set (0.00 sec)<br>会把左边表里的数据取出来右边表中的数据有就显示出来没有就null。right join 咋刚刚相反</p>\n<pre class=\"line-numbers language-mysql\" data-language=\"mysql\"><code class=\"language-mysql\">select*from person right join card on person.cardId&#x3D;card.id;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>+——+——–+——–+——+———–+<br>| id   | name   | cardId | id   | name      |<br>+——+——–+——–+——+———–+<br>|    1 | 张三   |      1 |    1 | 饭卡      |<br>| NULL | NULL   |   NULL |    2 | 建行卡    |<br>|    2 | 李四   |      3 |    3 | 农行卡    |<br>| NULL | NULL   |   NULL |    4 | 工商卡    |<br>|    2 | 李四   |      3 |    3 | 农行卡    |<br>+——+——–+——–+——+———–+<br>5 rows in set (0.00 sec)</p>\n<h2 id=\"MySQL事务\"><a href=\"#MySQL事务\" class=\"headerlink\" title=\"MySQL事务\"></a>MySQL事务</h2><p>事务是一个最小的不可分割的工作单元，事务能够保证一个业务的完整性。为的就是多条语句能同时成功或者同时失败。</p>\n<pre class=\"line-numbers language-mysql\" data-language=\"mysql\"><code class=\"language-mysql\">select @@autocommit;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>+————–+<br>| @@autocommit |<br>+————–+<br>|            1 |<br>+————–+<br>1 row in set (0.00 sec)<br>默认事务开启的作用是什么？<br>当我们去执行一个sql语句的时候，效果会立即体现出来，且不能回滚</p>\n<pre class=\"line-numbers language-mysql\" data-language=\"mysql\"><code class=\"language-mysql\">create database bank;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>创建数据库</p>\n<pre class=\"line-numbers language-my\" data-language=\"my\"><code class=\"language-my\">create table user(\nid int primary key,\nname varchar(20),\nmoney int\n);<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<pre class=\"line-numbers language-mysql\" data-language=\"mysql\"><code class=\"language-mysql\">insert into user values(1,&#39;a&#39;,1000);<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<pre class=\"line-numbers language-mysql\" data-language=\"mysql\"><code class=\"language-mysql\">select*from user;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>+—-+——+——-+<br>| id | name | money |<br>+—-+——+——-+<br>|  1 | a    |  1000 |<br>+—-+——+——-+<br>rollback事务回滚（撤销上一句操作）</p>\n<h3 id=\"事务的四大特征\"><a href=\"#事务的四大特征\" class=\"headerlink\" title=\"事务的四大特征\"></a>事务的四大特征</h3><p>A  原子性：事务是最小的单位，不可分割<br>C 一致性：事务要求，同一事务中的sql语句，必须保证同时成功或者失败<br>I 隔离性：事务1和事务2之间具有隔离性<br>D  持久性：事务一旦结束，就不可回滚</p>\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><p>事务开启：<br>1修改默认提交 set autocommit = 0<br>2 begin；<br>3 start transaaction;<br>事务手动提交：commit；<br>事务手动回滚：rollback；</p>\n<h3 id=\"事务的隔离性\"><a href=\"#事务的隔离性\" class=\"headerlink\" title=\"事务的隔离性\"></a>事务的隔离性</h3><p>1,read uncommitted    读未提交的<br>2,read committed     读已经提交的<br>3,repeatable read     可以重复读<br>4,serializable         串行化</p>\n<h3 id=\"如何查看数据库隔离级别\"><a href=\"#如何查看数据库隔离级别\" class=\"headerlink\" title=\"如何查看数据库隔离级别\"></a>如何查看数据库隔离级别</h3><p>MySQL 8.0 ：<br>select @@global.transaction_isolation;————系统级别的<br>select @@transaction_isolation;————会话级别的<br>MySQL5.x：<br>select @@global.tx_isolation;————系统级别的<br>select @@tx_isolation;————会话级别的<br>如何修改隔离级别<br>set global transaction isolation level 隔离级别;</p>\n<h3 id=\"隔离性解析\"><a href=\"#隔离性解析\" class=\"headerlink\" title=\"隔离性解析\"></a>隔离性解析</h3><p>1—  会出现脏读  既a提交可以回滚的数据b在另一边看到了 之后a回滚<br>2—   会出现不可重复读  既a提交了不可回滚 b也提交 会出现时差性前后看到不一致<br>3—   a在一边提交 b在另一边看不见 但是如果提交相同的会出现错误提示已提交过来  这叫做幻读<br>4—   a开启事务 start transaaction;写入操作 ，b也开启事务写入操作 a不commit结束事务操作b就无法执行语句<br>多个人同时只能一人进行操作 其他人会进入排队状态（串行化）。<br>—串行化带来的问题是性能差</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"——SQL的四种连接查询\"><a href=\"#——SQL的四种连接查询\" class=\"headerlink\" title=\"——SQL的四种连接查询\"></a>——SQL的四种连接查询</h1><h3 id=\"内连接\"><a href=\"#内连接\" class=\"headerlink\" title=\"内连接\"></a>内连接</h3><p>inner join 或者join</p>\n<pre class=\"line-numbers language-mysql\" data-language=\"mysql\"><code class=\"language-mysql\">create table person(\nid int,\nname varchar(20),\ncardId int);<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<pre class=\"line-numbers language-mysql\" data-language=\"mysql\"><code class=\"language-mysql\">create table card(\nid int,\nname varchar(20)\n);<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<pre class=\"line-numbers language-mysql\" data-language=\"mysql\"><code class=\"language-mysql\">insert into card values(1,&#39;饭卡&#39;);\ninsert into card values(2,&#39;建行卡);\ninsert into card values(3,&#39;农行卡&#39;);\ninsert into card values(4,&#39;工商卡&#39;);<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<pre class=\"line-numbers language-mysql\" data-language=\"mysql\"><code class=\"language-mysql\">insert into person values(1,&#39; 张三&#39;,1);\ninsert into person values(2,&#39;李四&#39;,3);\ninsert into person values(3,&#39;王五&#39;,6);<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<pre class=\"line-numbers language-mysql\" data-language=\"mysql\"><code class=\"language-mysql\">select*from person inner join card on person.cardId&#x3D;card.id;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>+——+——–+——–+——+———–+<br>| id   | name   | cardId | id   | name      |<br>+——+——–+——–+——+———–+<br>|    1 | 张三   |      1 |    1 | 饭卡      |<br>|    2 | 李四   |      3 |    3 | 农行卡    |<br>+——+——–+——–+——+———–+<br>2 rows in set (0.00 sec)<br>内联查询就是两张表中的数据通过某个字段相对查询出相关记录数据</p>\n<h3 id=\"外连接\"><a href=\"#外连接\" class=\"headerlink\" title=\"外连接\"></a>外连接</h3><p>左连接left join 或者 left outer join<br>右连接right join 或 right outer join<br>完全外连接 full join 或full outer join——————mysql暂不支持</p>\n<pre class=\"line-numbers language-mysql\" data-language=\"mysql\"><code class=\"language-mysql\">select*from person left join card on person.cardId&#x3D;card.id;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>+——+——–+——–+——+———–+<br>| id   | name   | cardId | id   | name      |<br>+——+——–+——–+——+———–+<br>|    1 | 张三   |      1 |    1 | 饭卡      |<br>|    2 | 李四   |      3 |    3 | 农行卡    |<br>|    2 | 李四   |      3 |    3 | 农行卡    |<br>|    3 | 王五   |      6 | NULL | NULL      |<br>+——+——–+——–+——+———–+<br>4 rows in set (0.00 sec)<br>会把左边表里的数据取出来右边表中的数据有就显示出来没有就null。right join 咋刚刚相反</p>\n<pre class=\"line-numbers language-mysql\" data-language=\"mysql\"><code class=\"language-mysql\">select*from person right join card on person.cardId&#x3D;card.id;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>+——+——–+——–+——+———–+<br>| id   | name   | cardId | id   | name      |<br>+——+——–+——–+——+———–+<br>|    1 | 张三   |      1 |    1 | 饭卡      |<br>| NULL | NULL   |   NULL |    2 | 建行卡    |<br>|    2 | 李四   |      3 |    3 | 农行卡    |<br>| NULL | NULL   |   NULL |    4 | 工商卡    |<br>|    2 | 李四   |      3 |    3 | 农行卡    |<br>+——+——–+——–+——+———–+<br>5 rows in set (0.00 sec)</p>\n<h2 id=\"MySQL事务\"><a href=\"#MySQL事务\" class=\"headerlink\" title=\"MySQL事务\"></a>MySQL事务</h2><p>事务是一个最小的不可分割的工作单元，事务能够保证一个业务的完整性。为的就是多条语句能同时成功或者同时失败。</p>\n<pre class=\"line-numbers language-mysql\" data-language=\"mysql\"><code class=\"language-mysql\">select @@autocommit;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>+————–+<br>| @@autocommit |<br>+————–+<br>|            1 |<br>+————–+<br>1 row in set (0.00 sec)<br>默认事务开启的作用是什么？<br>当我们去执行一个sql语句的时候，效果会立即体现出来，且不能回滚</p>\n<pre class=\"line-numbers language-mysql\" data-language=\"mysql\"><code class=\"language-mysql\">create database bank;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>创建数据库</p>\n<pre class=\"line-numbers language-my\" data-language=\"my\"><code class=\"language-my\">create table user(\nid int primary key,\nname varchar(20),\nmoney int\n);<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<pre class=\"line-numbers language-mysql\" data-language=\"mysql\"><code class=\"language-mysql\">insert into user values(1,&#39;a&#39;,1000);<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<pre class=\"line-numbers language-mysql\" data-language=\"mysql\"><code class=\"language-mysql\">select*from user;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>+—-+——+——-+<br>| id | name | money |<br>+—-+——+——-+<br>|  1 | a    |  1000 |<br>+—-+——+——-+<br>rollback事务回滚（撤销上一句操作）</p>\n<h3 id=\"事务的四大特征\"><a href=\"#事务的四大特征\" class=\"headerlink\" title=\"事务的四大特征\"></a>事务的四大特征</h3><p>A  原子性：事务是最小的单位，不可分割<br>C 一致性：事务要求，同一事务中的sql语句，必须保证同时成功或者失败<br>I 隔离性：事务1和事务2之间具有隔离性<br>D  持久性：事务一旦结束，就不可回滚</p>\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><p>事务开启：<br>1修改默认提交 set autocommit = 0<br>2 begin；<br>3 start transaaction;<br>事务手动提交：commit；<br>事务手动回滚：rollback；</p>\n<h3 id=\"事务的隔离性\"><a href=\"#事务的隔离性\" class=\"headerlink\" title=\"事务的隔离性\"></a>事务的隔离性</h3><p>1,read uncommitted    读未提交的<br>2,read committed     读已经提交的<br>3,repeatable read     可以重复读<br>4,serializable         串行化</p>\n<h3 id=\"如何查看数据库隔离级别\"><a href=\"#如何查看数据库隔离级别\" class=\"headerlink\" title=\"如何查看数据库隔离级别\"></a>如何查看数据库隔离级别</h3><p>MySQL 8.0 ：<br>select @@global.transaction_isolation;————系统级别的<br>select @@transaction_isolation;————会话级别的<br>MySQL5.x：<br>select @@global.tx_isolation;————系统级别的<br>select @@tx_isolation;————会话级别的<br>如何修改隔离级别<br>set global transaction isolation level 隔离级别;</p>\n<h3 id=\"隔离性解析\"><a href=\"#隔离性解析\" class=\"headerlink\" title=\"隔离性解析\"></a>隔离性解析</h3><p>1—  会出现脏读  既a提交可以回滚的数据b在另一边看到了 之后a回滚<br>2—   会出现不可重复读  既a提交了不可回滚 b也提交 会出现时差性前后看到不一致<br>3—   a在一边提交 b在另一边看不见 但是如果提交相同的会出现错误提示已提交过来  这叫做幻读<br>4—   a开启事务 start transaaction;写入操作 ，b也开启事务写入操作 a不commit结束事务操作b就无法执行语句<br>多个人同时只能一人进行操作 其他人会进入排队状态（串行化）。<br>—串行化带来的问题是性能差</p>\n"},{"title":"Tomcat细小问题解决","top":false,"cover":false,"toc":true,"mathjax":true,"date":"2021-08-05T15:59:02.000Z","password":null,"summary":null,"_content":"\n## 一.解决网址路径修改问题\n\n![](1.png)\n\n![](2.png)\n\n![](3.png)\n\n## 二.运行时无法得到网址问题\n\n![](小问题.png)\n\n如果这两个不一致会导致无法响应\n","source":"_posts/Tomcat细小问题解决.md","raw":"---\ntitle: Tomcat细小问题解决\ntop: false\ncover: false\ntoc: true\nmathjax: true\ndate: 2021-08-05 23:59:02\npassword:\nsummary:\ntags: notes\ncategories: Tomcat\n---\n\n## 一.解决网址路径修改问题\n\n![](1.png)\n\n![](2.png)\n\n![](3.png)\n\n## 二.运行时无法得到网址问题\n\n![](小问题.png)\n\n如果这两个不一致会导致无法响应\n","slug":"Tomcat细小问题解决","published":1,"updated":"2022-11-21T11:55:43.613Z","comments":1,"layout":"post","photos":[],"link":"","_id":"claqy94kf000pbklg9rceade1","content":"<h2 id=\"一-解决网址路径修改问题\"><a href=\"#一-解决网址路径修改问题\" class=\"headerlink\" title=\"一.解决网址路径修改问题\"></a>一.解决网址路径修改问题</h2><p><img src=\"/2021/08/05/tomcat-xi-xiao-wen-ti-jie-jue/1.png\"></p>\n<p><img src=\"/2021/08/05/tomcat-xi-xiao-wen-ti-jie-jue/2.png\"></p>\n<p><img src=\"/2021/08/05/tomcat-xi-xiao-wen-ti-jie-jue/3.png\"></p>\n<h2 id=\"二-运行时无法得到网址问题\"><a href=\"#二-运行时无法得到网址问题\" class=\"headerlink\" title=\"二.运行时无法得到网址问题\"></a>二.运行时无法得到网址问题</h2><p><img src=\"/2021/08/05/tomcat-xi-xiao-wen-ti-jie-jue/%E5%B0%8F%E9%97%AE%E9%A2%98.png\"></p>\n<p>如果这两个不一致会导致无法响应</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"一-解决网址路径修改问题\"><a href=\"#一-解决网址路径修改问题\" class=\"headerlink\" title=\"一.解决网址路径修改问题\"></a>一.解决网址路径修改问题</h2><p><img src=\"/2021/08/05/tomcat-xi-xiao-wen-ti-jie-jue/1.png\"></p>\n<p><img src=\"/2021/08/05/tomcat-xi-xiao-wen-ti-jie-jue/2.png\"></p>\n<p><img src=\"/2021/08/05/tomcat-xi-xiao-wen-ti-jie-jue/3.png\"></p>\n<h2 id=\"二-运行时无法得到网址问题\"><a href=\"#二-运行时无法得到网址问题\" class=\"headerlink\" title=\"二.运行时无法得到网址问题\"></a>二.运行时无法得到网址问题</h2><p><img src=\"/2021/08/05/tomcat-xi-xiao-wen-ti-jie-jue/%E5%B0%8F%E9%97%AE%E9%A2%98.png\"></p>\n<p>如果这两个不一致会导致无法响应</p>\n"},{"title":"Redis初阶","top":false,"cover":false,"toc":true,"mathjax":true,"date":"2021-08-09T09:21:37.000Z","password":null,"summary":null,"_content":"\n# \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tRedis\n\n## \t\t\t\t\t\t\t\t\t\t\t\t启动redis\n\n进入redis的redis.conf目录文件下执行redis-server redis.conf\n\n/Users/gaojian/study/redis/redis-stable\n\n开启redis成功这时就可以输入redis-cli进入操作\n\n## redis-cli\n\nRedis-cli -h(输入其他电脑的IP地址可远程连接)\n\nRedis-cli -p(端口号，开启哪个端口号默认6379)\n\nping操作可以查看是否连接成功PONG\n\nSelect (number)切换数据库\n\n![](1.png)\n\n### string类型操作\n\n存储set(一个)mset(多个)\n\n获取get(一个)mget(多个)\n\n![](2.png)\n\n### hash类型操作\n\n#### 存取\n\n![](3.png)\n\n```redis\nhgetall user\n \"name\"\n \"lisi\"\n \"age\"\n \"18\"\n \"sex\"\n \"1\"\n```\n\n删除hdel user name age\n\n### list类型\n\n分为左添加(lpush)和右添加(rpush)\n\n![](4.png)\n\n获取值：lrange\n\n查询几条语句：llen\n\n删除：lrem （数量及格） （什么内容） 从左往右开始删除\n\n### set类型\n\n乱序 \n\n添加数据saad letters (aaa nnn ccc jjj)\n\n查询数据smembers letters\n\n查询数量 scard letters\n\n删除 srem letters ()\n\n### Sorted set 数据类型\n\n根据分数来排序  集合类型\n\n![](5.png)\n\n查询数量 zcard score\n\n删除 zrem score \n\n查询数据zrange\n\n### 通用命令\n\n#### 层级关系目录形式存储数据\n\nget cart：user01：item01 apple\n\n#### 失效时间\n\nRedis有四个不同的命令可以用于设置键的生存时间（存在多久）或过期时间（什么时候删除）\n\nEXPIRE<key><ttl>:用于将键key的生存时间设置为ttl秒\n\nPEXPIRE<key><ttl>:用于将键key的生存时间设置为ttl毫秒\n\nEXPIREAT<key><timestamp>:用于将key的过期时间设置为timestamp所指定的秒数时间戳\n\nPEXPIREAT<key><timestamp>:用于将key的过期时间设置为timestamp所指定的毫秒数时间戳\n\nttl获取的值为-1说明此key没有设置有效期，永不失效。当值为-2时证明过了有效期\n\n![](6.png)\n\nExpire 为没有设置时间的值设置时间\n\n#### 删除：del\n\n## IDE创建redis配置\n\n### 配置pom.xml\n\n![](7.png)\n\n#### 配置.application.properties文件\n\n![](8.png)\n\n#### 连接jedis\n\n![](9.png)\n\n#### jedis连接pool池\n\n![](10.png)\n\n### 封装jedisutil对外提供连接对象获取的方法\n\n先创建test.java\n\n![](11.png)\n\n```java\nimport org.junit.After;\nimport org.junit.Before;\nimport org.junit.Test;\nimport org.junit.runner.RunWith;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.boot.test.context.SpringBootTest;\nimport org.springframework.test.context.junit4.SpringRunner;\nimport redis.clients.jedis.Jedis;\nimport redis.clients.jedis.JedisPool;\nimport javax.swing.*;\n@SpringBootTest\n@RunWith(SpringRunner.class)\npublic class TestJedis {\n    @Autowired\n    public JedisPool jedisPool;\n    private Jedis jedis = null;\n    //初始化jedis实例对象\n    @Before\n    public void initConnt() {\n        jedis = jedisPool.getResource();\n    }\n   @After\n    public void closeConnt() {\n        if (null != jedis) {\n            jedis.close();\n        }\n    }\n}\n```\n\n在创建配置文件config配置文件\n\n![](13.png)\n\n\n\n```java\nimport org.springframework.beans.factory.annotation.Value;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport redis.clients.jedis.JedisPool;\n\n@Configuration\npublic class RedisConfig {\n    @Value(\"${redis.host}\")\n    private String host;\n    @Value(\"${redis.port}\")\n    private int port;\n\n    @Bean\n    public JedisPool jedisPool() {\n        return new JedisPool(host, port);\n    }\n}\n```\n\n\n\n最后需要在.java文件中加入@SpringBootApplication才是封装pool池成功\n\n![](14.png)\n\n### jdesi操作\n\n#### 操作string类型\n\n```java\n @Test\n    public void test(){\n        jedis.set(\"name\",\"zhang\");\n        String name = jedis.get(\"name\");\n        System.out.println(name);\n   //参数的奇数是key偶数是value\n        jedis.mset(\"address\",\"sh\",\"sex\",\"1\");\n        List<String> list = jedis.mget(\"address\", \"sex\");\n        list.forEach(System.out::println);\n\t\t\t\t//通用删除\n        jedis.del(\"name\");\n    }\n```\n\n#### 操作hash类型\n\n```java\n @Test\n    public void hash(){\n        jedis.hset(\"user\",\"name\",\"gaojian\");\n        String hget = jedis.hget(\"user\", \"name\");\n        System.out.println(hget);\n        Map<String ,String> map =new HashMap<>();\n        map.put(\"sex\",\"1\");\n        map.put(\"age\",\"20\");\n        jedis.hmset(\"user\",map);\n        List<String> hmget = jedis.hmget(\"user\", \"age\", \"sex\");\n        hmget.forEach(System.out::println);\n\n        Map<String, String> user = jedis.hgetAll(\"user\");\n        user.entrySet().forEach(e->{\n            System.out.println(e.getKey()+\"--->\"+e.getValue());\n        });\n        jedis.hdel(\"user\",\"name\");\n    }\n```\n\n#### 操作list\n\n```java\n  @Test\n    public void testList(){\n        jedis.lpush(\"studunt\",\"zhang\",\"高\");\n        jedis.rpush(\"student\",\"hao\",\"ni\");\n        List<String> student = jedis.lrange(\"student\", 0, 3);\n        student.forEach(System.out::println);\n        Long llen = jedis.llen(\"student\");\n        System.out.println(llen);\n        jedis.lpop(\"student\");//左弹出\n        jedis.rpop(\"student\");//右弹出\n            }\n```\n\n#### 操作set\n\n```java\n @Test\n    public void testSet(){\n      jedis.sadd(\"letters\",\"11\",\"22\");\n        Set<String> set = jedis.smembers(\"letters\");\n        set.forEach(System.out::println);\n        Long scard = jedis.scard(\"letters\");//查数量\n        System.out.println(scard);\n        jedis.srem(\"letters\",\"11\");//删除\n    }\n```\n\n#### 操作Sorted set\n\n```\n    @Test\n    public void sorted(){\n        Map<String ,Double> map = new HashMap<>();\n        map.put(\"zhang\",7D);\n        map.put(\"li\",1D);\n        map.put(\"zh\",3D);\n        map.put(\"ang\",5D);\n        map.put(\"san\",9D);\n        jedis.zadd(\"asd\",map);\n        Set<String> set = jedis.zrange(\"asd\", 0, 4);\n        set.forEach(System.out::println);\n        jedis.zrem(\"asd\",\"san\");//删除\n```\n\n#### 失效时间\n\n```java\n@Test\n    public void testEx(){\n        jedis.expire(\"cord\",30);//给已经存在的key设置失效时间\n        //查看失效时间\n        jedis.ttl(\"cord\");\n        //xx,nx用法\n        SetParams setParams =new SetParams();\n        setParams.nx();//不存在才能成功\n        setParams.xx();//存在才可以成功\n        setParams.ex(30);\n        jedis.set(\"code\",\"test\",setParams);\n    }\n```\n\n#### 层级目录\n\n```java\n @Test\n    public void testDir(){\n        jedis.set(\"card:user01:item01\",\"apple\");\n        System.out.println(jedis.get(\"card:user01:item01\"));//层级目录\n    }\n```\n\n#### 获取所有key+事务\n\n```java\n @Test\n    public void testAllkey(){\n        Long size = jedis.dbSize();//当前数据库key的数量\n        System.out.println(size);\n        Set<String> keys = jedis.keys(\"*\");//查询当前数据库的所有key\n        keys.forEach(System.out::println);\n    }\n```\n\n```java\n    @Test\n    public void testMulti(){\n        Transaction tx =jedis.multi();//开启事务\n        tx.set(\"tel\",\"10086\");\n        tx.exec();//提交事务\n//        tx.discard();//回滚事务\n    }\n```\n\n#### redis的持久化\n\nbgsave 优点：可以进行保存，突然崩溃数据也不会消失。缺点：需要频繁的使用\n\naof：优点：时时保存数据。缺点：随时间积累数据越来越大 从新启动会非常慢\n\n","source":"_posts/Redis初阶.md","raw":"---\ntitle: Redis初阶\ntop: false\ncover: false\ntoc: true\nmathjax: true\ndate: 2021-08-09 17:21:37\npassword:\nsummary:\ntags: notes\ncategories: redis\n---\n\n# \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tRedis\n\n## \t\t\t\t\t\t\t\t\t\t\t\t启动redis\n\n进入redis的redis.conf目录文件下执行redis-server redis.conf\n\n/Users/gaojian/study/redis/redis-stable\n\n开启redis成功这时就可以输入redis-cli进入操作\n\n## redis-cli\n\nRedis-cli -h(输入其他电脑的IP地址可远程连接)\n\nRedis-cli -p(端口号，开启哪个端口号默认6379)\n\nping操作可以查看是否连接成功PONG\n\nSelect (number)切换数据库\n\n![](1.png)\n\n### string类型操作\n\n存储set(一个)mset(多个)\n\n获取get(一个)mget(多个)\n\n![](2.png)\n\n### hash类型操作\n\n#### 存取\n\n![](3.png)\n\n```redis\nhgetall user\n \"name\"\n \"lisi\"\n \"age\"\n \"18\"\n \"sex\"\n \"1\"\n```\n\n删除hdel user name age\n\n### list类型\n\n分为左添加(lpush)和右添加(rpush)\n\n![](4.png)\n\n获取值：lrange\n\n查询几条语句：llen\n\n删除：lrem （数量及格） （什么内容） 从左往右开始删除\n\n### set类型\n\n乱序 \n\n添加数据saad letters (aaa nnn ccc jjj)\n\n查询数据smembers letters\n\n查询数量 scard letters\n\n删除 srem letters ()\n\n### Sorted set 数据类型\n\n根据分数来排序  集合类型\n\n![](5.png)\n\n查询数量 zcard score\n\n删除 zrem score \n\n查询数据zrange\n\n### 通用命令\n\n#### 层级关系目录形式存储数据\n\nget cart：user01：item01 apple\n\n#### 失效时间\n\nRedis有四个不同的命令可以用于设置键的生存时间（存在多久）或过期时间（什么时候删除）\n\nEXPIRE<key><ttl>:用于将键key的生存时间设置为ttl秒\n\nPEXPIRE<key><ttl>:用于将键key的生存时间设置为ttl毫秒\n\nEXPIREAT<key><timestamp>:用于将key的过期时间设置为timestamp所指定的秒数时间戳\n\nPEXPIREAT<key><timestamp>:用于将key的过期时间设置为timestamp所指定的毫秒数时间戳\n\nttl获取的值为-1说明此key没有设置有效期，永不失效。当值为-2时证明过了有效期\n\n![](6.png)\n\nExpire 为没有设置时间的值设置时间\n\n#### 删除：del\n\n## IDE创建redis配置\n\n### 配置pom.xml\n\n![](7.png)\n\n#### 配置.application.properties文件\n\n![](8.png)\n\n#### 连接jedis\n\n![](9.png)\n\n#### jedis连接pool池\n\n![](10.png)\n\n### 封装jedisutil对外提供连接对象获取的方法\n\n先创建test.java\n\n![](11.png)\n\n```java\nimport org.junit.After;\nimport org.junit.Before;\nimport org.junit.Test;\nimport org.junit.runner.RunWith;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.boot.test.context.SpringBootTest;\nimport org.springframework.test.context.junit4.SpringRunner;\nimport redis.clients.jedis.Jedis;\nimport redis.clients.jedis.JedisPool;\nimport javax.swing.*;\n@SpringBootTest\n@RunWith(SpringRunner.class)\npublic class TestJedis {\n    @Autowired\n    public JedisPool jedisPool;\n    private Jedis jedis = null;\n    //初始化jedis实例对象\n    @Before\n    public void initConnt() {\n        jedis = jedisPool.getResource();\n    }\n   @After\n    public void closeConnt() {\n        if (null != jedis) {\n            jedis.close();\n        }\n    }\n}\n```\n\n在创建配置文件config配置文件\n\n![](13.png)\n\n\n\n```java\nimport org.springframework.beans.factory.annotation.Value;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport redis.clients.jedis.JedisPool;\n\n@Configuration\npublic class RedisConfig {\n    @Value(\"${redis.host}\")\n    private String host;\n    @Value(\"${redis.port}\")\n    private int port;\n\n    @Bean\n    public JedisPool jedisPool() {\n        return new JedisPool(host, port);\n    }\n}\n```\n\n\n\n最后需要在.java文件中加入@SpringBootApplication才是封装pool池成功\n\n![](14.png)\n\n### jdesi操作\n\n#### 操作string类型\n\n```java\n @Test\n    public void test(){\n        jedis.set(\"name\",\"zhang\");\n        String name = jedis.get(\"name\");\n        System.out.println(name);\n   //参数的奇数是key偶数是value\n        jedis.mset(\"address\",\"sh\",\"sex\",\"1\");\n        List<String> list = jedis.mget(\"address\", \"sex\");\n        list.forEach(System.out::println);\n\t\t\t\t//通用删除\n        jedis.del(\"name\");\n    }\n```\n\n#### 操作hash类型\n\n```java\n @Test\n    public void hash(){\n        jedis.hset(\"user\",\"name\",\"gaojian\");\n        String hget = jedis.hget(\"user\", \"name\");\n        System.out.println(hget);\n        Map<String ,String> map =new HashMap<>();\n        map.put(\"sex\",\"1\");\n        map.put(\"age\",\"20\");\n        jedis.hmset(\"user\",map);\n        List<String> hmget = jedis.hmget(\"user\", \"age\", \"sex\");\n        hmget.forEach(System.out::println);\n\n        Map<String, String> user = jedis.hgetAll(\"user\");\n        user.entrySet().forEach(e->{\n            System.out.println(e.getKey()+\"--->\"+e.getValue());\n        });\n        jedis.hdel(\"user\",\"name\");\n    }\n```\n\n#### 操作list\n\n```java\n  @Test\n    public void testList(){\n        jedis.lpush(\"studunt\",\"zhang\",\"高\");\n        jedis.rpush(\"student\",\"hao\",\"ni\");\n        List<String> student = jedis.lrange(\"student\", 0, 3);\n        student.forEach(System.out::println);\n        Long llen = jedis.llen(\"student\");\n        System.out.println(llen);\n        jedis.lpop(\"student\");//左弹出\n        jedis.rpop(\"student\");//右弹出\n            }\n```\n\n#### 操作set\n\n```java\n @Test\n    public void testSet(){\n      jedis.sadd(\"letters\",\"11\",\"22\");\n        Set<String> set = jedis.smembers(\"letters\");\n        set.forEach(System.out::println);\n        Long scard = jedis.scard(\"letters\");//查数量\n        System.out.println(scard);\n        jedis.srem(\"letters\",\"11\");//删除\n    }\n```\n\n#### 操作Sorted set\n\n```\n    @Test\n    public void sorted(){\n        Map<String ,Double> map = new HashMap<>();\n        map.put(\"zhang\",7D);\n        map.put(\"li\",1D);\n        map.put(\"zh\",3D);\n        map.put(\"ang\",5D);\n        map.put(\"san\",9D);\n        jedis.zadd(\"asd\",map);\n        Set<String> set = jedis.zrange(\"asd\", 0, 4);\n        set.forEach(System.out::println);\n        jedis.zrem(\"asd\",\"san\");//删除\n```\n\n#### 失效时间\n\n```java\n@Test\n    public void testEx(){\n        jedis.expire(\"cord\",30);//给已经存在的key设置失效时间\n        //查看失效时间\n        jedis.ttl(\"cord\");\n        //xx,nx用法\n        SetParams setParams =new SetParams();\n        setParams.nx();//不存在才能成功\n        setParams.xx();//存在才可以成功\n        setParams.ex(30);\n        jedis.set(\"code\",\"test\",setParams);\n    }\n```\n\n#### 层级目录\n\n```java\n @Test\n    public void testDir(){\n        jedis.set(\"card:user01:item01\",\"apple\");\n        System.out.println(jedis.get(\"card:user01:item01\"));//层级目录\n    }\n```\n\n#### 获取所有key+事务\n\n```java\n @Test\n    public void testAllkey(){\n        Long size = jedis.dbSize();//当前数据库key的数量\n        System.out.println(size);\n        Set<String> keys = jedis.keys(\"*\");//查询当前数据库的所有key\n        keys.forEach(System.out::println);\n    }\n```\n\n```java\n    @Test\n    public void testMulti(){\n        Transaction tx =jedis.multi();//开启事务\n        tx.set(\"tel\",\"10086\");\n        tx.exec();//提交事务\n//        tx.discard();//回滚事务\n    }\n```\n\n#### redis的持久化\n\nbgsave 优点：可以进行保存，突然崩溃数据也不会消失。缺点：需要频繁的使用\n\naof：优点：时时保存数据。缺点：随时间积累数据越来越大 从新启动会非常慢\n\n","slug":"Redis初阶","published":1,"updated":"2022-11-21T11:55:43.549Z","comments":1,"layout":"post","photos":[],"link":"","_id":"claqy94kh000tbklg8jn40f8r","content":"<h1 id=\"Redis\"><a href=\"#Redis\" class=\"headerlink\" title=\"Redis\"></a>Redis</h1><h2 id=\"启动redis\"><a href=\"#启动redis\" class=\"headerlink\" title=\"启动redis\"></a>启动redis</h2><p>进入redis的redis.conf目录文件下执行redis-server redis.conf</p>\n<p>/Users/gaojian/study/redis/redis-stable</p>\n<p>开启redis成功这时就可以输入redis-cli进入操作</p>\n<h2 id=\"redis-cli\"><a href=\"#redis-cli\" class=\"headerlink\" title=\"redis-cli\"></a>redis-cli</h2><p>Redis-cli -h(输入其他电脑的IP地址可远程连接)</p>\n<p>Redis-cli -p(端口号，开启哪个端口号默认6379)</p>\n<p>ping操作可以查看是否连接成功PONG</p>\n<p>Select (number)切换数据库</p>\n<p><img src=\"/2021/08/09/redis-chu-jie/1.png\"></p>\n<h3 id=\"string类型操作\"><a href=\"#string类型操作\" class=\"headerlink\" title=\"string类型操作\"></a>string类型操作</h3><p>存储set(一个)mset(多个)</p>\n<p>获取get(一个)mget(多个)</p>\n<p><img src=\"/2021/08/09/redis-chu-jie/2.png\"></p>\n<h3 id=\"hash类型操作\"><a href=\"#hash类型操作\" class=\"headerlink\" title=\"hash类型操作\"></a>hash类型操作</h3><h4 id=\"存取\"><a href=\"#存取\" class=\"headerlink\" title=\"存取\"></a>存取</h4><p><img src=\"/2021/08/09/redis-chu-jie/3.png\"></p>\n<pre class=\"line-numbers language-redis\" data-language=\"redis\"><code class=\"language-redis\">hgetall user\n &quot;name&quot;\n &quot;lisi&quot;\n &quot;age&quot;\n &quot;18&quot;\n &quot;sex&quot;\n &quot;1&quot;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>删除hdel user name age</p>\n<h3 id=\"list类型\"><a href=\"#list类型\" class=\"headerlink\" title=\"list类型\"></a>list类型</h3><p>分为左添加(lpush)和右添加(rpush)</p>\n<p><img src=\"/2021/08/09/redis-chu-jie/4.png\"></p>\n<p>获取值：lrange</p>\n<p>查询几条语句：llen</p>\n<p>删除：lrem （数量及格） （什么内容） 从左往右开始删除</p>\n<h3 id=\"set类型\"><a href=\"#set类型\" class=\"headerlink\" title=\"set类型\"></a>set类型</h3><p>乱序 </p>\n<p>添加数据saad letters (aaa nnn ccc jjj)</p>\n<p>查询数据smembers letters</p>\n<p>查询数量 scard letters</p>\n<p>删除 srem letters ()</p>\n<h3 id=\"Sorted-set-数据类型\"><a href=\"#Sorted-set-数据类型\" class=\"headerlink\" title=\"Sorted set 数据类型\"></a>Sorted set 数据类型</h3><p>根据分数来排序  集合类型</p>\n<p><img src=\"/2021/08/09/redis-chu-jie/5.png\"></p>\n<p>查询数量 zcard score</p>\n<p>删除 zrem score </p>\n<p>查询数据zrange</p>\n<h3 id=\"通用命令\"><a href=\"#通用命令\" class=\"headerlink\" title=\"通用命令\"></a>通用命令</h3><h4 id=\"层级关系目录形式存储数据\"><a href=\"#层级关系目录形式存储数据\" class=\"headerlink\" title=\"层级关系目录形式存储数据\"></a>层级关系目录形式存储数据</h4><p>get cart：user01：item01 apple</p>\n<h4 id=\"失效时间\"><a href=\"#失效时间\" class=\"headerlink\" title=\"失效时间\"></a>失效时间</h4><p>Redis有四个不同的命令可以用于设置键的生存时间（存在多久）或过期时间（什么时候删除）</p>\n<p>EXPIRE<key><ttl>:用于将键key的生存时间设置为ttl秒</p>\n<p>PEXPIRE<key><ttl>:用于将键key的生存时间设置为ttl毫秒</p>\n<p>EXPIREAT<key><timestamp>:用于将key的过期时间设置为timestamp所指定的秒数时间戳</p>\n<p>PEXPIREAT<key><timestamp>:用于将key的过期时间设置为timestamp所指定的毫秒数时间戳</p>\n<p>ttl获取的值为-1说明此key没有设置有效期，永不失效。当值为-2时证明过了有效期</p>\n<p><img src=\"/2021/08/09/redis-chu-jie/6.png\"></p>\n<p>Expire 为没有设置时间的值设置时间</p>\n<h4 id=\"删除：del\"><a href=\"#删除：del\" class=\"headerlink\" title=\"删除：del\"></a>删除：del</h4><h2 id=\"IDE创建redis配置\"><a href=\"#IDE创建redis配置\" class=\"headerlink\" title=\"IDE创建redis配置\"></a>IDE创建redis配置</h2><h3 id=\"配置pom-xml\"><a href=\"#配置pom-xml\" class=\"headerlink\" title=\"配置pom.xml\"></a>配置pom.xml</h3><p><img src=\"/2021/08/09/redis-chu-jie/7.png\"></p>\n<h4 id=\"配置-application-properties文件\"><a href=\"#配置-application-properties文件\" class=\"headerlink\" title=\"配置.application.properties文件\"></a>配置.application.properties文件</h4><p><img src=\"/2021/08/09/redis-chu-jie/8.png\"></p>\n<h4 id=\"连接jedis\"><a href=\"#连接jedis\" class=\"headerlink\" title=\"连接jedis\"></a>连接jedis</h4><p><img src=\"/2021/08/09/redis-chu-jie/9.png\"></p>\n<h4 id=\"jedis连接pool池\"><a href=\"#jedis连接pool池\" class=\"headerlink\" title=\"jedis连接pool池\"></a>jedis连接pool池</h4><p><img src=\"/2021/08/09/redis-chu-jie/10.png\"></p>\n<h3 id=\"封装jedisutil对外提供连接对象获取的方法\"><a href=\"#封装jedisutil对外提供连接对象获取的方法\" class=\"headerlink\" title=\"封装jedisutil对外提供连接对象获取的方法\"></a>封装jedisutil对外提供连接对象获取的方法</h3><p>先创建test.java</p>\n<p><img src=\"/2021/08/09/redis-chu-jie/11.png\"></p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>junit<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">After</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>junit<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Before</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>junit<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Test</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>junit<span class=\"token punctuation\">.</span>runner<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">RunWith</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>beans<span class=\"token punctuation\">.</span>factory<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Autowired</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>boot<span class=\"token punctuation\">.</span>test<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SpringBootTest</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>test<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>junit4<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SpringRunner</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">redis<span class=\"token punctuation\">.</span>clients<span class=\"token punctuation\">.</span>jedis<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Jedis</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">redis<span class=\"token punctuation\">.</span>clients<span class=\"token punctuation\">.</span>jedis<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">JedisPool</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">javax<span class=\"token punctuation\">.</span>swing<span class=\"token punctuation\">.</span></span><span class=\"token operator\">*</span><span class=\"token punctuation\">;</span>\n<span class=\"token annotation punctuation\">@SpringBootTest</span>\n<span class=\"token annotation punctuation\">@RunWith</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SpringRunner</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestJedis</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token annotation punctuation\">@Autowired</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">JedisPool</span> jedisPool<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Jedis</span> jedis <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">//初始化jedis实例对象</span>\n    <span class=\"token annotation punctuation\">@Before</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">initConnt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        jedis <span class=\"token operator\">=</span> jedisPool<span class=\"token punctuation\">.</span><span class=\"token function\">getResource</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n   <span class=\"token annotation punctuation\">@After</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">closeConnt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span> <span class=\"token operator\">!=</span> jedis<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            jedis<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>在创建配置文件config配置文件</p>\n<p><img src=\"/2021/08/09/redis-chu-jie/13.png\"></p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>beans<span class=\"token punctuation\">.</span>factory<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Value</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Bean</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Configuration</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">redis<span class=\"token punctuation\">.</span>clients<span class=\"token punctuation\">.</span>jedis<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">JedisPool</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token annotation punctuation\">@Configuration</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">RedisConfig</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token annotation punctuation\">@Value</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"$&#123;redis.host&#125;\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> host<span class=\"token punctuation\">;</span>\n    <span class=\"token annotation punctuation\">@Value</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"$&#123;redis.port&#125;\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> port<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@Bean</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">JedisPool</span> <span class=\"token function\">jedisPool</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">JedisPool</span><span class=\"token punctuation\">(</span>host<span class=\"token punctuation\">,</span> port<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<p>最后需要在.java文件中加入@SpringBootApplication才是封装pool池成功</p>\n<p><img src=\"/2021/08/09/redis-chu-jie/14.png\"></p>\n<h3 id=\"jdesi操作\"><a href=\"#jdesi操作\" class=\"headerlink\" title=\"jdesi操作\"></a>jdesi操作</h3><h4 id=\"操作string类型\"><a href=\"#操作string类型\" class=\"headerlink\" title=\"操作string类型\"></a>操作string类型</h4><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Test</span>\n   <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n       jedis<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"zhang\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       <span class=\"token class-name\">String</span> name <span class=\"token operator\">=</span> jedis<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">//参数的奇数是key偶数是value</span>\n       jedis<span class=\"token punctuation\">.</span><span class=\"token function\">mset</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"address\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"sh\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"sex\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> list <span class=\"token operator\">=</span> jedis<span class=\"token punctuation\">.</span><span class=\"token function\">mget</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"address\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"sex\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       list<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token operator\">::</span><span class=\"token function\">println</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token comment\">//通用删除</span>\n       jedis<span class=\"token punctuation\">.</span><span class=\"token function\">del</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"操作hash类型\"><a href=\"#操作hash类型\" class=\"headerlink\" title=\"操作hash类型\"></a>操作hash类型</h4><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Test</span>\n   <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">hash</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n       jedis<span class=\"token punctuation\">.</span><span class=\"token function\">hset</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"user\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"gaojian\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       <span class=\"token class-name\">String</span> hget <span class=\"token operator\">=</span> jedis<span class=\"token punctuation\">.</span><span class=\"token function\">hget</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"user\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"name\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>hget<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span> <span class=\"token punctuation\">,</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> map <span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">HashMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       map<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"sex\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       map<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"age\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"20\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       jedis<span class=\"token punctuation\">.</span><span class=\"token function\">hmset</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"user\"</span><span class=\"token punctuation\">,</span>map<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> hmget <span class=\"token operator\">=</span> jedis<span class=\"token punctuation\">.</span><span class=\"token function\">hmget</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"user\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"age\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"sex\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       hmget<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token operator\">::</span><span class=\"token function\">println</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n       <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> user <span class=\"token operator\">=</span> jedis<span class=\"token punctuation\">.</span><span class=\"token function\">hgetAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"user\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       user<span class=\"token punctuation\">.</span><span class=\"token function\">entrySet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span>e<span class=\"token operator\">-></span><span class=\"token punctuation\">&#123;</span>\n           <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span><span class=\"token function\">getKey</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">\"--->\"</span><span class=\"token operator\">+</span>e<span class=\"token punctuation\">.</span><span class=\"token function\">getValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       jedis<span class=\"token punctuation\">.</span><span class=\"token function\">hdel</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"user\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"操作list\"><a href=\"#操作list\" class=\"headerlink\" title=\"操作list\"></a>操作list</h4><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Test</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n      jedis<span class=\"token punctuation\">.</span><span class=\"token function\">lpush</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"studunt\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"zhang\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"高\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      jedis<span class=\"token punctuation\">.</span><span class=\"token function\">rpush</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"student\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"hao\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"ni\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> student <span class=\"token operator\">=</span> jedis<span class=\"token punctuation\">.</span><span class=\"token function\">lrange</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"student\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      student<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token operator\">::</span><span class=\"token function\">println</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token class-name\">Long</span> llen <span class=\"token operator\">=</span> jedis<span class=\"token punctuation\">.</span><span class=\"token function\">llen</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"student\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>llen<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      jedis<span class=\"token punctuation\">.</span><span class=\"token function\">lpop</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"student\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//左弹出</span>\n      jedis<span class=\"token punctuation\">.</span><span class=\"token function\">rpop</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"student\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//右弹出</span>\n          <span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"操作set\"><a href=\"#操作set\" class=\"headerlink\" title=\"操作set\"></a>操作set</h4><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Test</span>\n   <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testSet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n     jedis<span class=\"token punctuation\">.</span><span class=\"token function\">sadd</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"letters\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"11\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"22\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       <span class=\"token class-name\">Set</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> set <span class=\"token operator\">=</span> jedis<span class=\"token punctuation\">.</span><span class=\"token function\">smembers</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"letters\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       set<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token operator\">::</span><span class=\"token function\">println</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       <span class=\"token class-name\">Long</span> scard <span class=\"token operator\">=</span> jedis<span class=\"token punctuation\">.</span><span class=\"token function\">scard</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"letters\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//查数量</span>\n       <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>scard<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       jedis<span class=\"token punctuation\">.</span><span class=\"token function\">srem</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"letters\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"11\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//删除</span>\n   <span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"操作Sorted-set\"><a href=\"#操作Sorted-set\" class=\"headerlink\" title=\"操作Sorted set\"></a>操作Sorted set</h4><pre class=\"line-numbers language-none\"><code class=\"language-none\">@Test\npublic void sorted()&#123;\n    Map&lt;String ,Double&gt; map &#x3D; new HashMap&lt;&gt;();\n    map.put(&quot;zhang&quot;,7D);\n    map.put(&quot;li&quot;,1D);\n    map.put(&quot;zh&quot;,3D);\n    map.put(&quot;ang&quot;,5D);\n    map.put(&quot;san&quot;,9D);\n    jedis.zadd(&quot;asd&quot;,map);\n    Set&lt;String&gt; set &#x3D; jedis.zrange(&quot;asd&quot;, 0, 4);\n    set.forEach(System.out::println);\n    jedis.zrem(&quot;asd&quot;,&quot;san&quot;);&#x2F;&#x2F;删除<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"失效时间-1\"><a href=\"#失效时间-1\" class=\"headerlink\" title=\"失效时间\"></a>失效时间</h4><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Test</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testEx</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        jedis<span class=\"token punctuation\">.</span><span class=\"token function\">expire</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"cord\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//给已经存在的key设置失效时间</span>\n        <span class=\"token comment\">//查看失效时间</span>\n        jedis<span class=\"token punctuation\">.</span><span class=\"token function\">ttl</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"cord\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//xx,nx用法</span>\n        <span class=\"token class-name\">SetParams</span> setParams <span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">SetParams</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        setParams<span class=\"token punctuation\">.</span><span class=\"token function\">nx</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//不存在才能成功</span>\n        setParams<span class=\"token punctuation\">.</span><span class=\"token function\">xx</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//存在才可以成功</span>\n        setParams<span class=\"token punctuation\">.</span><span class=\"token function\">ex</span><span class=\"token punctuation\">(</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        jedis<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"code\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"test\"</span><span class=\"token punctuation\">,</span>setParams<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"层级目录\"><a href=\"#层级目录\" class=\"headerlink\" title=\"层级目录\"></a>层级目录</h4><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Test</span>\n   <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testDir</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n       jedis<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"card:user01:item01\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"apple\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>jedis<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"card:user01:item01\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//层级目录</span>\n   <span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"获取所有key-事务\"><a href=\"#获取所有key-事务\" class=\"headerlink\" title=\"获取所有key+事务\"></a>获取所有key+事务</h4><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Test</span>\n   <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testAllkey</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n       <span class=\"token class-name\">Long</span> size <span class=\"token operator\">=</span> jedis<span class=\"token punctuation\">.</span><span class=\"token function\">dbSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//当前数据库key的数量</span>\n       <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       <span class=\"token class-name\">Set</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> keys <span class=\"token operator\">=</span> jedis<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"*\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//查询当前数据库的所有key</span>\n       keys<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token operator\">::</span><span class=\"token function\">println</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">    <span class=\"token annotation punctuation\">@Test</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testMulti</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">Transaction</span> tx <span class=\"token operator\">=</span>jedis<span class=\"token punctuation\">.</span><span class=\"token function\">multi</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//开启事务</span>\n        tx<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"tel\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"10086\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        tx<span class=\"token punctuation\">.</span><span class=\"token function\">exec</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//提交事务</span>\n<span class=\"token comment\">//        tx.discard();//回滚事务</span>\n    <span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"redis的持久化\"><a href=\"#redis的持久化\" class=\"headerlink\" title=\"redis的持久化\"></a>redis的持久化</h4><p>bgsave 优点：可以进行保存，突然崩溃数据也不会消失。缺点：需要频繁的使用</p>\n<p>aof：优点：时时保存数据。缺点：随时间积累数据越来越大 从新启动会非常慢</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Redis\"><a href=\"#Redis\" class=\"headerlink\" title=\"Redis\"></a>Redis</h1><h2 id=\"启动redis\"><a href=\"#启动redis\" class=\"headerlink\" title=\"启动redis\"></a>启动redis</h2><p>进入redis的redis.conf目录文件下执行redis-server redis.conf</p>\n<p>/Users/gaojian/study/redis/redis-stable</p>\n<p>开启redis成功这时就可以输入redis-cli进入操作</p>\n<h2 id=\"redis-cli\"><a href=\"#redis-cli\" class=\"headerlink\" title=\"redis-cli\"></a>redis-cli</h2><p>Redis-cli -h(输入其他电脑的IP地址可远程连接)</p>\n<p>Redis-cli -p(端口号，开启哪个端口号默认6379)</p>\n<p>ping操作可以查看是否连接成功PONG</p>\n<p>Select (number)切换数据库</p>\n<p><img src=\"/2021/08/09/redis-chu-jie/1.png\"></p>\n<h3 id=\"string类型操作\"><a href=\"#string类型操作\" class=\"headerlink\" title=\"string类型操作\"></a>string类型操作</h3><p>存储set(一个)mset(多个)</p>\n<p>获取get(一个)mget(多个)</p>\n<p><img src=\"/2021/08/09/redis-chu-jie/2.png\"></p>\n<h3 id=\"hash类型操作\"><a href=\"#hash类型操作\" class=\"headerlink\" title=\"hash类型操作\"></a>hash类型操作</h3><h4 id=\"存取\"><a href=\"#存取\" class=\"headerlink\" title=\"存取\"></a>存取</h4><p><img src=\"/2021/08/09/redis-chu-jie/3.png\"></p>\n<pre class=\"line-numbers language-redis\" data-language=\"redis\"><code class=\"language-redis\">hgetall user\n &quot;name&quot;\n &quot;lisi&quot;\n &quot;age&quot;\n &quot;18&quot;\n &quot;sex&quot;\n &quot;1&quot;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>删除hdel user name age</p>\n<h3 id=\"list类型\"><a href=\"#list类型\" class=\"headerlink\" title=\"list类型\"></a>list类型</h3><p>分为左添加(lpush)和右添加(rpush)</p>\n<p><img src=\"/2021/08/09/redis-chu-jie/4.png\"></p>\n<p>获取值：lrange</p>\n<p>查询几条语句：llen</p>\n<p>删除：lrem （数量及格） （什么内容） 从左往右开始删除</p>\n<h3 id=\"set类型\"><a href=\"#set类型\" class=\"headerlink\" title=\"set类型\"></a>set类型</h3><p>乱序 </p>\n<p>添加数据saad letters (aaa nnn ccc jjj)</p>\n<p>查询数据smembers letters</p>\n<p>查询数量 scard letters</p>\n<p>删除 srem letters ()</p>\n<h3 id=\"Sorted-set-数据类型\"><a href=\"#Sorted-set-数据类型\" class=\"headerlink\" title=\"Sorted set 数据类型\"></a>Sorted set 数据类型</h3><p>根据分数来排序  集合类型</p>\n<p><img src=\"/2021/08/09/redis-chu-jie/5.png\"></p>\n<p>查询数量 zcard score</p>\n<p>删除 zrem score </p>\n<p>查询数据zrange</p>\n<h3 id=\"通用命令\"><a href=\"#通用命令\" class=\"headerlink\" title=\"通用命令\"></a>通用命令</h3><h4 id=\"层级关系目录形式存储数据\"><a href=\"#层级关系目录形式存储数据\" class=\"headerlink\" title=\"层级关系目录形式存储数据\"></a>层级关系目录形式存储数据</h4><p>get cart：user01：item01 apple</p>\n<h4 id=\"失效时间\"><a href=\"#失效时间\" class=\"headerlink\" title=\"失效时间\"></a>失效时间</h4><p>Redis有四个不同的命令可以用于设置键的生存时间（存在多久）或过期时间（什么时候删除）</p>\n<p>EXPIRE<key><ttl>:用于将键key的生存时间设置为ttl秒</p>\n<p>PEXPIRE<key><ttl>:用于将键key的生存时间设置为ttl毫秒</p>\n<p>EXPIREAT<key><timestamp>:用于将key的过期时间设置为timestamp所指定的秒数时间戳</p>\n<p>PEXPIREAT<key><timestamp>:用于将key的过期时间设置为timestamp所指定的毫秒数时间戳</p>\n<p>ttl获取的值为-1说明此key没有设置有效期，永不失效。当值为-2时证明过了有效期</p>\n<p><img src=\"/2021/08/09/redis-chu-jie/6.png\"></p>\n<p>Expire 为没有设置时间的值设置时间</p>\n<h4 id=\"删除：del\"><a href=\"#删除：del\" class=\"headerlink\" title=\"删除：del\"></a>删除：del</h4><h2 id=\"IDE创建redis配置\"><a href=\"#IDE创建redis配置\" class=\"headerlink\" title=\"IDE创建redis配置\"></a>IDE创建redis配置</h2><h3 id=\"配置pom-xml\"><a href=\"#配置pom-xml\" class=\"headerlink\" title=\"配置pom.xml\"></a>配置pom.xml</h3><p><img src=\"/2021/08/09/redis-chu-jie/7.png\"></p>\n<h4 id=\"配置-application-properties文件\"><a href=\"#配置-application-properties文件\" class=\"headerlink\" title=\"配置.application.properties文件\"></a>配置.application.properties文件</h4><p><img src=\"/2021/08/09/redis-chu-jie/8.png\"></p>\n<h4 id=\"连接jedis\"><a href=\"#连接jedis\" class=\"headerlink\" title=\"连接jedis\"></a>连接jedis</h4><p><img src=\"/2021/08/09/redis-chu-jie/9.png\"></p>\n<h4 id=\"jedis连接pool池\"><a href=\"#jedis连接pool池\" class=\"headerlink\" title=\"jedis连接pool池\"></a>jedis连接pool池</h4><p><img src=\"/2021/08/09/redis-chu-jie/10.png\"></p>\n<h3 id=\"封装jedisutil对外提供连接对象获取的方法\"><a href=\"#封装jedisutil对外提供连接对象获取的方法\" class=\"headerlink\" title=\"封装jedisutil对外提供连接对象获取的方法\"></a>封装jedisutil对外提供连接对象获取的方法</h3><p>先创建test.java</p>\n<p><img src=\"/2021/08/09/redis-chu-jie/11.png\"></p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>junit<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">After</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>junit<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Before</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>junit<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Test</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>junit<span class=\"token punctuation\">.</span>runner<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">RunWith</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>beans<span class=\"token punctuation\">.</span>factory<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Autowired</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>boot<span class=\"token punctuation\">.</span>test<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SpringBootTest</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>test<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>junit4<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SpringRunner</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">redis<span class=\"token punctuation\">.</span>clients<span class=\"token punctuation\">.</span>jedis<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Jedis</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">redis<span class=\"token punctuation\">.</span>clients<span class=\"token punctuation\">.</span>jedis<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">JedisPool</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">javax<span class=\"token punctuation\">.</span>swing<span class=\"token punctuation\">.</span></span><span class=\"token operator\">*</span><span class=\"token punctuation\">;</span>\n<span class=\"token annotation punctuation\">@SpringBootTest</span>\n<span class=\"token annotation punctuation\">@RunWith</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SpringRunner</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestJedis</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token annotation punctuation\">@Autowired</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">JedisPool</span> jedisPool<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Jedis</span> jedis <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">//初始化jedis实例对象</span>\n    <span class=\"token annotation punctuation\">@Before</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">initConnt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        jedis <span class=\"token operator\">=</span> jedisPool<span class=\"token punctuation\">.</span><span class=\"token function\">getResource</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n   <span class=\"token annotation punctuation\">@After</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">closeConnt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span> <span class=\"token operator\">!=</span> jedis<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            jedis<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>在创建配置文件config配置文件</p>\n<p><img src=\"/2021/08/09/redis-chu-jie/13.png\"></p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>beans<span class=\"token punctuation\">.</span>factory<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Value</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Bean</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Configuration</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">redis<span class=\"token punctuation\">.</span>clients<span class=\"token punctuation\">.</span>jedis<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">JedisPool</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token annotation punctuation\">@Configuration</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">RedisConfig</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token annotation punctuation\">@Value</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"$&#123;redis.host&#125;\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> host<span class=\"token punctuation\">;</span>\n    <span class=\"token annotation punctuation\">@Value</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"$&#123;redis.port&#125;\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> port<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@Bean</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">JedisPool</span> <span class=\"token function\">jedisPool</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">JedisPool</span><span class=\"token punctuation\">(</span>host<span class=\"token punctuation\">,</span> port<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<p>最后需要在.java文件中加入@SpringBootApplication才是封装pool池成功</p>\n<p><img src=\"/2021/08/09/redis-chu-jie/14.png\"></p>\n<h3 id=\"jdesi操作\"><a href=\"#jdesi操作\" class=\"headerlink\" title=\"jdesi操作\"></a>jdesi操作</h3><h4 id=\"操作string类型\"><a href=\"#操作string类型\" class=\"headerlink\" title=\"操作string类型\"></a>操作string类型</h4><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Test</span>\n   <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n       jedis<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"zhang\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       <span class=\"token class-name\">String</span> name <span class=\"token operator\">=</span> jedis<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">//参数的奇数是key偶数是value</span>\n       jedis<span class=\"token punctuation\">.</span><span class=\"token function\">mset</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"address\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"sh\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"sex\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> list <span class=\"token operator\">=</span> jedis<span class=\"token punctuation\">.</span><span class=\"token function\">mget</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"address\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"sex\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       list<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token operator\">::</span><span class=\"token function\">println</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token comment\">//通用删除</span>\n       jedis<span class=\"token punctuation\">.</span><span class=\"token function\">del</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"操作hash类型\"><a href=\"#操作hash类型\" class=\"headerlink\" title=\"操作hash类型\"></a>操作hash类型</h4><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Test</span>\n   <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">hash</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n       jedis<span class=\"token punctuation\">.</span><span class=\"token function\">hset</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"user\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"gaojian\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       <span class=\"token class-name\">String</span> hget <span class=\"token operator\">=</span> jedis<span class=\"token punctuation\">.</span><span class=\"token function\">hget</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"user\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"name\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>hget<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span> <span class=\"token punctuation\">,</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> map <span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">HashMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       map<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"sex\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       map<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"age\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"20\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       jedis<span class=\"token punctuation\">.</span><span class=\"token function\">hmset</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"user\"</span><span class=\"token punctuation\">,</span>map<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> hmget <span class=\"token operator\">=</span> jedis<span class=\"token punctuation\">.</span><span class=\"token function\">hmget</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"user\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"age\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"sex\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       hmget<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token operator\">::</span><span class=\"token function\">println</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n       <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> user <span class=\"token operator\">=</span> jedis<span class=\"token punctuation\">.</span><span class=\"token function\">hgetAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"user\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       user<span class=\"token punctuation\">.</span><span class=\"token function\">entrySet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span>e<span class=\"token operator\">-></span><span class=\"token punctuation\">&#123;</span>\n           <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span><span class=\"token function\">getKey</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">\"--->\"</span><span class=\"token operator\">+</span>e<span class=\"token punctuation\">.</span><span class=\"token function\">getValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       jedis<span class=\"token punctuation\">.</span><span class=\"token function\">hdel</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"user\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"操作list\"><a href=\"#操作list\" class=\"headerlink\" title=\"操作list\"></a>操作list</h4><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Test</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n      jedis<span class=\"token punctuation\">.</span><span class=\"token function\">lpush</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"studunt\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"zhang\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"高\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      jedis<span class=\"token punctuation\">.</span><span class=\"token function\">rpush</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"student\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"hao\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"ni\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> student <span class=\"token operator\">=</span> jedis<span class=\"token punctuation\">.</span><span class=\"token function\">lrange</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"student\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      student<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token operator\">::</span><span class=\"token function\">println</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token class-name\">Long</span> llen <span class=\"token operator\">=</span> jedis<span class=\"token punctuation\">.</span><span class=\"token function\">llen</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"student\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>llen<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      jedis<span class=\"token punctuation\">.</span><span class=\"token function\">lpop</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"student\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//左弹出</span>\n      jedis<span class=\"token punctuation\">.</span><span class=\"token function\">rpop</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"student\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//右弹出</span>\n          <span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"操作set\"><a href=\"#操作set\" class=\"headerlink\" title=\"操作set\"></a>操作set</h4><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Test</span>\n   <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testSet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n     jedis<span class=\"token punctuation\">.</span><span class=\"token function\">sadd</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"letters\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"11\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"22\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       <span class=\"token class-name\">Set</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> set <span class=\"token operator\">=</span> jedis<span class=\"token punctuation\">.</span><span class=\"token function\">smembers</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"letters\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       set<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token operator\">::</span><span class=\"token function\">println</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       <span class=\"token class-name\">Long</span> scard <span class=\"token operator\">=</span> jedis<span class=\"token punctuation\">.</span><span class=\"token function\">scard</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"letters\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//查数量</span>\n       <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>scard<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       jedis<span class=\"token punctuation\">.</span><span class=\"token function\">srem</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"letters\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"11\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//删除</span>\n   <span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"操作Sorted-set\"><a href=\"#操作Sorted-set\" class=\"headerlink\" title=\"操作Sorted set\"></a>操作Sorted set</h4><pre class=\"line-numbers language-none\"><code class=\"language-none\">@Test\npublic void sorted()&#123;\n    Map&lt;String ,Double&gt; map &#x3D; new HashMap&lt;&gt;();\n    map.put(&quot;zhang&quot;,7D);\n    map.put(&quot;li&quot;,1D);\n    map.put(&quot;zh&quot;,3D);\n    map.put(&quot;ang&quot;,5D);\n    map.put(&quot;san&quot;,9D);\n    jedis.zadd(&quot;asd&quot;,map);\n    Set&lt;String&gt; set &#x3D; jedis.zrange(&quot;asd&quot;, 0, 4);\n    set.forEach(System.out::println);\n    jedis.zrem(&quot;asd&quot;,&quot;san&quot;);&#x2F;&#x2F;删除<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"失效时间-1\"><a href=\"#失效时间-1\" class=\"headerlink\" title=\"失效时间\"></a>失效时间</h4><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Test</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testEx</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        jedis<span class=\"token punctuation\">.</span><span class=\"token function\">expire</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"cord\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//给已经存在的key设置失效时间</span>\n        <span class=\"token comment\">//查看失效时间</span>\n        jedis<span class=\"token punctuation\">.</span><span class=\"token function\">ttl</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"cord\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//xx,nx用法</span>\n        <span class=\"token class-name\">SetParams</span> setParams <span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">SetParams</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        setParams<span class=\"token punctuation\">.</span><span class=\"token function\">nx</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//不存在才能成功</span>\n        setParams<span class=\"token punctuation\">.</span><span class=\"token function\">xx</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//存在才可以成功</span>\n        setParams<span class=\"token punctuation\">.</span><span class=\"token function\">ex</span><span class=\"token punctuation\">(</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        jedis<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"code\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"test\"</span><span class=\"token punctuation\">,</span>setParams<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"层级目录\"><a href=\"#层级目录\" class=\"headerlink\" title=\"层级目录\"></a>层级目录</h4><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Test</span>\n   <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testDir</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n       jedis<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"card:user01:item01\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"apple\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>jedis<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"card:user01:item01\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//层级目录</span>\n   <span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"获取所有key-事务\"><a href=\"#获取所有key-事务\" class=\"headerlink\" title=\"获取所有key+事务\"></a>获取所有key+事务</h4><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Test</span>\n   <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testAllkey</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n       <span class=\"token class-name\">Long</span> size <span class=\"token operator\">=</span> jedis<span class=\"token punctuation\">.</span><span class=\"token function\">dbSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//当前数据库key的数量</span>\n       <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       <span class=\"token class-name\">Set</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> keys <span class=\"token operator\">=</span> jedis<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"*\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//查询当前数据库的所有key</span>\n       keys<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token operator\">::</span><span class=\"token function\">println</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">    <span class=\"token annotation punctuation\">@Test</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testMulti</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">Transaction</span> tx <span class=\"token operator\">=</span>jedis<span class=\"token punctuation\">.</span><span class=\"token function\">multi</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//开启事务</span>\n        tx<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"tel\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"10086\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        tx<span class=\"token punctuation\">.</span><span class=\"token function\">exec</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//提交事务</span>\n<span class=\"token comment\">//        tx.discard();//回滚事务</span>\n    <span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"redis的持久化\"><a href=\"#redis的持久化\" class=\"headerlink\" title=\"redis的持久化\"></a>redis的持久化</h4><p>bgsave 优点：可以进行保存，突然崩溃数据也不会消失。缺点：需要频繁的使用</p>\n<p>aof：优点：时时保存数据。缺点：随时间积累数据越来越大 从新启动会非常慢</p>\n"},{"title":"java8 Stream API 了解","top":false,"cover":false,"toc":true,"mathjax":true,"date":"2021-08-16T14:52:20.000Z","password":null,"summary":null,"_content":"\n## Lambda&&Stream\n\n### 优点\n\n简化我们匿名内部类的调用\n\n简化之前\n\n```java\nnew Thread(new Runnable() {\n            @Override\n            public void run() {\n                System.out.println(Thread.currentThread().getName()+\"你好\");\n            }\n        }).start();\n    }\n```\n\n简化之后\n\n```java\nnew Thread(() -> System.out.println(Thread.currentThread().getName() + \"你\")).start();\n```\n\n### 依赖于函数接口\n\n1.在接口中只允许有一个抽象的方法\n\n2.@FunctionalInterface标记为该接口为函数接口\n\n3.可以通过default修饰为普通方法\n\n### 方法调用\n\n()   参数列表\n\n->   分隔\n\n{}方法体\n\n无参调用\n\n```java\npublic class StreamDemo1 {\n    public static void main(String[] args) {\n    new Thread(()->System.out.println(Thread.currentThread().getName()+\"nih\"))\n      .start();\n\t\t}\n}\n```\n\n有参调用代码实现\n\n```java\npublic class StreamDemo1 {\n    public static void main(String[] args) {\n        youcan youcan1=(i,j)-> {return i+\"---\"+j;};\n        System.out.println(youcan1.get(3, 5));\n    }\n\n@FunctionalInterface\nprivate interface youcan{\n        String get(int i,int j);\n\t\t}\n}\n```\n\n精简\n\n```java\npublic class StreamDemo1 {\n    public static void main(String[] args) {\n       String s=((youcan)(i,j)-> i+\"---\"+j).get(2,3);\n      System.out.println(s);\n    }\n\n@FunctionalInterface\nprivate interface youcan{\n        String get(int i,int j);\n\t\t}\n}\n```\n\n代码案例ArrayList\n\nforEach遍历数组\n\n```java\npublic class ArrayLIst {\n    public static void main(String[] args) {\n        ArrayList<String> list = new ArrayList<String >();\n        list.add(\"d\");\n        list.add(\"a\");\n        list.add(\"s\");\n        list.forEach(s -> {\n            System.out.println(s);\n        });\n    }\n}\n```\n\n## Stream\n\nStream：非常方便精简的形式遍历集合实现过滤，排序等\n\n### API\n\n#### 1.filter:通过设置条件过滤元素\n\nConrains():找出包含()中的元素\n\ncollect：终止操作符，把流元素集合起来\n\n```java\npublic void filter() {\n        List<String> string = Arrays.asList(\"asd\", \"asdf\", \"213\");\n        List<String> s = string.stream().filter(str -> str.contains(\"s\")).collect(Collectors.toList());\n        System.out.println(s);}\n//[asd, asdf]\n```\n\n#### 2.distinct:去重,比较的是两个数的地址\n\n```java\npublic void distinct() {\n    List<String> string = Arrays.asList(\"asd\", \"asdf\", \"213\", \"213\", \"123123\");\n    List<String> collect = string.stream().distinct().collect(Collectors.toList());\n    System.out.println(collect);\n}\n//[asd, asdf, 213, 123123]\n```\n\n#### 3.limit：返回一个不超过给定长度的流\n\n```java\npublic void limit() {\n    List<String> string = Arrays.asList(\"asd\", \"asdf\", \"213\", \"213\", \"123123\");\n    List<String> collect = string.stream().limit(2).collect(Collectors.toList());\n    System.out.println(collect);\n}\n//[asd, asdf]\n```\n\n#### 4.skip:丢掉前几个元素\n\n```java\npublic void skip() {\nList<String> string = Arrays.asList(\"asd\", \"asdf\", \"213\", \"213\", \"123123\");\nList<String> collect = string.stream().skip(2).collect(Collectors.toList());\nSystem.out.println(collect);\n}\n//[213, 213, 123123]\n```\n\n#### 5.map:对流中所有元素做统一处理\n\n接收函数为参数，函数会被应用到每个元素上\n\nConcat:在元素后加后缀\n\n```java\npublic void map() {\n    List<String> string = Arrays.asList(\"asd\", \"asdf\", \"213\", \"213\", \"123123\");\n    List<String> list = string.stream().map(str -> str.concat(\"__heima\")).collect(Collectors.toList());\n    System.out.println(list);\n}\n//[asd__heima, asdf__heima, 213__heima, 213__heima, 123123__heima]\n```\n\n#### 6.flatMap：扁平化一个流，把各个数组的流合并起来成一个流\n\n#### 7.sorted：返回排序后的流\n\n排序需要的第三方jar包\n\n```xml\n <dependency>\n      <groupId>commons-collections</groupId>\n      <artifactId>commons-collections</artifactId>\n      <version>3.2.2</version>\n    </dependency>\n```\n\n```java\n public void sorted(){\n        List<String> string = Arrays.asList(\"asd\", \"asdf\", \"213\", \"213\", \"123123\");\n        List<String> collect = string.stream().sorted().collect(Collectors.toList());\n        System.out.println(collect );//[123123, 213, 213, asd, asdf]\n        System.out.println(\"----------------\");\n        List<String> int1 = Arrays.asList(\"40\", \"-312\", \"-32\", \"213\", \"123\");\n        List<String> collect1 = int1.stream().sorted().collect(Collectors.toList());\n        System.out.println(collect1);//[-312, -32, 123, 213, 40]\n        System.out.println(\"----------\");\n        List<String> int2 = Arrays.asList(\"答复\", \"阿道夫\", \"奥\", \"威风\", \"好的\");\n        List<String> collect2 = int2.stream().sorted(Collator.getInstance(Locale.CHINA)).collect(Collectors.toList());\n        System.out.println(collect2);\n   \t\t\t//[阿道夫, 奥, 答复, 好的, 威风]\n}\n```\n\n### 终止操作符\n\n#### 1.anyMatch:检查是否至少匹配一个元素\n\n```java\npublic void anymatch(){\n    List<String> string = Arrays.asList(\"asd\", \"asdf\", \"213\", \"213\", \"123123\");\n    boolean bc = string.stream().anyMatch(s -> s.contains(\"2\"));\n    System.out.println(bc);\n    }//ture\n```\n\n#### 2.allMatch：是否匹配所有元素\n\n#### 3.noneMatch:没有匹配 所有元素都不满足条件\n\n#### 4.findAny：返回当前流的任意元素\n\n```java\npublic void findAny(){\n    List<String> string = Arrays.asList(\"asd\", \"asdf\", \"213\", \"213\", \"123123\");\n        Optional<String> any = string.stream().findAny();\n        System.out.println(any.get());\n}\n```\n\n#### 5.forEach：遍历\n\n```java\npublic void forEach() {\n    List<String> string = Arrays.asList(\"asd\", \"asdf\", \"213\", \"213\", \"123123\");\n    string.stream().forEach(s -> System.out.println(s));\n}\n/**\n * asd\n * asdf\n * 213\n * 213\n * 123123\n */\n```\n\n#### 6.collect:将流转换成其他模式\n\n#### 7.reduce：将流中的元素反复结合起来，得到一个值\n\n```java\npublic void reduce() {\n    List<String> string = Arrays.asList(\"asd\", \"asdf\", \"213\", \"213\", \"123123\");\n    Optional<String> reduce = string.stream().reduce((end, item) -> {return end + item;});\n    System.out.println(reduce);\n}\n//Optional[asdasdf213213123123]\n```\n\n#### 8.count:获取集合中元素数量\n\n","source":"_posts/java8-Stream-API-了解.md","raw":"---\ntitle: java8 Stream API 了解\ntop: false\ncover: false\ntoc: true\nmathjax: true\ndate: 2021-08-16 22:52:20\npassword:\nsummary:\ntags: notes\ncategories: Stream\n---\n\n## Lambda&&Stream\n\n### 优点\n\n简化我们匿名内部类的调用\n\n简化之前\n\n```java\nnew Thread(new Runnable() {\n            @Override\n            public void run() {\n                System.out.println(Thread.currentThread().getName()+\"你好\");\n            }\n        }).start();\n    }\n```\n\n简化之后\n\n```java\nnew Thread(() -> System.out.println(Thread.currentThread().getName() + \"你\")).start();\n```\n\n### 依赖于函数接口\n\n1.在接口中只允许有一个抽象的方法\n\n2.@FunctionalInterface标记为该接口为函数接口\n\n3.可以通过default修饰为普通方法\n\n### 方法调用\n\n()   参数列表\n\n->   分隔\n\n{}方法体\n\n无参调用\n\n```java\npublic class StreamDemo1 {\n    public static void main(String[] args) {\n    new Thread(()->System.out.println(Thread.currentThread().getName()+\"nih\"))\n      .start();\n\t\t}\n}\n```\n\n有参调用代码实现\n\n```java\npublic class StreamDemo1 {\n    public static void main(String[] args) {\n        youcan youcan1=(i,j)-> {return i+\"---\"+j;};\n        System.out.println(youcan1.get(3, 5));\n    }\n\n@FunctionalInterface\nprivate interface youcan{\n        String get(int i,int j);\n\t\t}\n}\n```\n\n精简\n\n```java\npublic class StreamDemo1 {\n    public static void main(String[] args) {\n       String s=((youcan)(i,j)-> i+\"---\"+j).get(2,3);\n      System.out.println(s);\n    }\n\n@FunctionalInterface\nprivate interface youcan{\n        String get(int i,int j);\n\t\t}\n}\n```\n\n代码案例ArrayList\n\nforEach遍历数组\n\n```java\npublic class ArrayLIst {\n    public static void main(String[] args) {\n        ArrayList<String> list = new ArrayList<String >();\n        list.add(\"d\");\n        list.add(\"a\");\n        list.add(\"s\");\n        list.forEach(s -> {\n            System.out.println(s);\n        });\n    }\n}\n```\n\n## Stream\n\nStream：非常方便精简的形式遍历集合实现过滤，排序等\n\n### API\n\n#### 1.filter:通过设置条件过滤元素\n\nConrains():找出包含()中的元素\n\ncollect：终止操作符，把流元素集合起来\n\n```java\npublic void filter() {\n        List<String> string = Arrays.asList(\"asd\", \"asdf\", \"213\");\n        List<String> s = string.stream().filter(str -> str.contains(\"s\")).collect(Collectors.toList());\n        System.out.println(s);}\n//[asd, asdf]\n```\n\n#### 2.distinct:去重,比较的是两个数的地址\n\n```java\npublic void distinct() {\n    List<String> string = Arrays.asList(\"asd\", \"asdf\", \"213\", \"213\", \"123123\");\n    List<String> collect = string.stream().distinct().collect(Collectors.toList());\n    System.out.println(collect);\n}\n//[asd, asdf, 213, 123123]\n```\n\n#### 3.limit：返回一个不超过给定长度的流\n\n```java\npublic void limit() {\n    List<String> string = Arrays.asList(\"asd\", \"asdf\", \"213\", \"213\", \"123123\");\n    List<String> collect = string.stream().limit(2).collect(Collectors.toList());\n    System.out.println(collect);\n}\n//[asd, asdf]\n```\n\n#### 4.skip:丢掉前几个元素\n\n```java\npublic void skip() {\nList<String> string = Arrays.asList(\"asd\", \"asdf\", \"213\", \"213\", \"123123\");\nList<String> collect = string.stream().skip(2).collect(Collectors.toList());\nSystem.out.println(collect);\n}\n//[213, 213, 123123]\n```\n\n#### 5.map:对流中所有元素做统一处理\n\n接收函数为参数，函数会被应用到每个元素上\n\nConcat:在元素后加后缀\n\n```java\npublic void map() {\n    List<String> string = Arrays.asList(\"asd\", \"asdf\", \"213\", \"213\", \"123123\");\n    List<String> list = string.stream().map(str -> str.concat(\"__heima\")).collect(Collectors.toList());\n    System.out.println(list);\n}\n//[asd__heima, asdf__heima, 213__heima, 213__heima, 123123__heima]\n```\n\n#### 6.flatMap：扁平化一个流，把各个数组的流合并起来成一个流\n\n#### 7.sorted：返回排序后的流\n\n排序需要的第三方jar包\n\n```xml\n <dependency>\n      <groupId>commons-collections</groupId>\n      <artifactId>commons-collections</artifactId>\n      <version>3.2.2</version>\n    </dependency>\n```\n\n```java\n public void sorted(){\n        List<String> string = Arrays.asList(\"asd\", \"asdf\", \"213\", \"213\", \"123123\");\n        List<String> collect = string.stream().sorted().collect(Collectors.toList());\n        System.out.println(collect );//[123123, 213, 213, asd, asdf]\n        System.out.println(\"----------------\");\n        List<String> int1 = Arrays.asList(\"40\", \"-312\", \"-32\", \"213\", \"123\");\n        List<String> collect1 = int1.stream().sorted().collect(Collectors.toList());\n        System.out.println(collect1);//[-312, -32, 123, 213, 40]\n        System.out.println(\"----------\");\n        List<String> int2 = Arrays.asList(\"答复\", \"阿道夫\", \"奥\", \"威风\", \"好的\");\n        List<String> collect2 = int2.stream().sorted(Collator.getInstance(Locale.CHINA)).collect(Collectors.toList());\n        System.out.println(collect2);\n   \t\t\t//[阿道夫, 奥, 答复, 好的, 威风]\n}\n```\n\n### 终止操作符\n\n#### 1.anyMatch:检查是否至少匹配一个元素\n\n```java\npublic void anymatch(){\n    List<String> string = Arrays.asList(\"asd\", \"asdf\", \"213\", \"213\", \"123123\");\n    boolean bc = string.stream().anyMatch(s -> s.contains(\"2\"));\n    System.out.println(bc);\n    }//ture\n```\n\n#### 2.allMatch：是否匹配所有元素\n\n#### 3.noneMatch:没有匹配 所有元素都不满足条件\n\n#### 4.findAny：返回当前流的任意元素\n\n```java\npublic void findAny(){\n    List<String> string = Arrays.asList(\"asd\", \"asdf\", \"213\", \"213\", \"123123\");\n        Optional<String> any = string.stream().findAny();\n        System.out.println(any.get());\n}\n```\n\n#### 5.forEach：遍历\n\n```java\npublic void forEach() {\n    List<String> string = Arrays.asList(\"asd\", \"asdf\", \"213\", \"213\", \"123123\");\n    string.stream().forEach(s -> System.out.println(s));\n}\n/**\n * asd\n * asdf\n * 213\n * 213\n * 123123\n */\n```\n\n#### 6.collect:将流转换成其他模式\n\n#### 7.reduce：将流中的元素反复结合起来，得到一个值\n\n```java\npublic void reduce() {\n    List<String> string = Arrays.asList(\"asd\", \"asdf\", \"213\", \"213\", \"123123\");\n    Optional<String> reduce = string.stream().reduce((end, item) -> {return end + item;});\n    System.out.println(reduce);\n}\n//Optional[asdasdf213213123123]\n```\n\n#### 8.count:获取集合中元素数量\n\n","slug":"java8-Stream-API-了解","published":1,"updated":"2022-11-21T11:55:43.620Z","comments":1,"layout":"post","photos":[],"link":"","_id":"claqy94ki000vbklgerhebxh0","content":"<h2 id=\"Lambda-amp-amp-Stream\"><a href=\"#Lambda-amp-amp-Stream\" class=\"headerlink\" title=\"Lambda&amp;&amp;Stream\"></a>Lambda&amp;&amp;Stream</h2><h3 id=\"优点\"><a href=\"#优点\" class=\"headerlink\" title=\"优点\"></a>优点</h3><p>简化我们匿名内部类的调用</p>\n<p>简化之前</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">new</span> <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Runnable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token annotation punctuation\">@Override</span>\n            <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Thread</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">\"你好\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>简化之后</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">new</span> <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Thread</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"你\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"依赖于函数接口\"><a href=\"#依赖于函数接口\" class=\"headerlink\" title=\"依赖于函数接口\"></a>依赖于函数接口</h3><p>1.在接口中只允许有一个抽象的方法</p>\n<p>2.@FunctionalInterface标记为该接口为函数接口</p>\n<p>3.可以通过default修饰为普通方法</p>\n<h3 id=\"方法调用\"><a href=\"#方法调用\" class=\"headerlink\" title=\"方法调用\"></a>方法调用</h3><p>()   参数列表</p>\n<p>-&gt;   分隔</p>\n<p>{}方法体</p>\n<p>无参调用</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">StreamDemo1</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">new</span> <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Thread</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">\"nih\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>有参调用代码实现</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">StreamDemo1</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        youcan youcan1<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span>j<span class=\"token punctuation\">)</span><span class=\"token operator\">-></span> <span class=\"token punctuation\">&#123;</span><span class=\"token keyword\">return</span> i<span class=\"token operator\">+</span><span class=\"token string\">\"---\"</span><span class=\"token operator\">+</span>j<span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>youcan1<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token annotation punctuation\">@FunctionalInterface</span>\n<span class=\"token keyword\">private</span> <span class=\"token keyword\">interface</span> youcan<span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">String</span> <span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>精简</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">StreamDemo1</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n       <span class=\"token class-name\">String</span> s<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>youcan<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span>j<span class=\"token punctuation\">)</span><span class=\"token operator\">-></span> i<span class=\"token operator\">+</span><span class=\"token string\">\"---\"</span><span class=\"token operator\">+</span>j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token annotation punctuation\">@FunctionalInterface</span>\n<span class=\"token keyword\">private</span> <span class=\"token keyword\">interface</span> youcan<span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">String</span> <span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>代码案例ArrayList</p>\n<p>forEach遍历数组</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ArrayLIst</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> list <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span> <span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        list<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"d\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        list<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        list<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"s\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        list<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span>s <span class=\"token operator\">-></span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"Stream\"><a href=\"#Stream\" class=\"headerlink\" title=\"Stream\"></a>Stream</h2><p>Stream：非常方便精简的形式遍历集合实现过滤，排序等</p>\n<h3 id=\"API\"><a href=\"#API\" class=\"headerlink\" title=\"API\"></a>API</h3><h4 id=\"1-filter-通过设置条件过滤元素\"><a href=\"#1-filter-通过设置条件过滤元素\" class=\"headerlink\" title=\"1.filter:通过设置条件过滤元素\"></a>1.filter:通过设置条件过滤元素</h4><p>Conrains():找出包含()中的元素</p>\n<p>collect：终止操作符，把流元素集合起来</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> string <span class=\"token operator\">=</span> <span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">asList</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"asd\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"asdf\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"213\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> s <span class=\"token operator\">=</span> string<span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span>str <span class=\"token operator\">-></span> str<span class=\"token punctuation\">.</span><span class=\"token function\">contains</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"s\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">collect</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Collectors</span><span class=\"token punctuation\">.</span><span class=\"token function\">toList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span>\n<span class=\"token comment\">//[asd, asdf]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"2-distinct-去重-比较的是两个数的地址\"><a href=\"#2-distinct-去重-比较的是两个数的地址\" class=\"headerlink\" title=\"2.distinct:去重,比较的是两个数的地址\"></a>2.distinct:去重,比较的是两个数的地址</h4><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">distinct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> string <span class=\"token operator\">=</span> <span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">asList</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"asd\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"asdf\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"213\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"213\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"123123\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> collect <span class=\"token operator\">=</span> string<span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">distinct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">collect</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Collectors</span><span class=\"token punctuation\">.</span><span class=\"token function\">toList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>collect<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token comment\">//[asd, asdf, 213, 123123]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"3-limit：返回一个不超过给定长度的流\"><a href=\"#3-limit：返回一个不超过给定长度的流\" class=\"headerlink\" title=\"3.limit：返回一个不超过给定长度的流\"></a>3.limit：返回一个不超过给定长度的流</h4><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">limit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> string <span class=\"token operator\">=</span> <span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">asList</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"asd\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"asdf\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"213\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"213\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"123123\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> collect <span class=\"token operator\">=</span> string<span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">limit</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">collect</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Collectors</span><span class=\"token punctuation\">.</span><span class=\"token function\">toList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>collect<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token comment\">//[asd, asdf]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"4-skip-丢掉前几个元素\"><a href=\"#4-skip-丢掉前几个元素\" class=\"headerlink\" title=\"4.skip:丢掉前几个元素\"></a>4.skip:丢掉前几个元素</h4><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">skip</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n<span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> string <span class=\"token operator\">=</span> <span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">asList</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"asd\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"asdf\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"213\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"213\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"123123\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> collect <span class=\"token operator\">=</span> string<span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">skip</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">collect</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Collectors</span><span class=\"token punctuation\">.</span><span class=\"token function\">toList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>collect<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token comment\">//[213, 213, 123123]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"5-map-对流中所有元素做统一处理\"><a href=\"#5-map-对流中所有元素做统一处理\" class=\"headerlink\" title=\"5.map:对流中所有元素做统一处理\"></a>5.map:对流中所有元素做统一处理</h4><p>接收函数为参数，函数会被应用到每个元素上</p>\n<p>Concat:在元素后加后缀</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> string <span class=\"token operator\">=</span> <span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">asList</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"asd\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"asdf\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"213\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"213\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"123123\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> list <span class=\"token operator\">=</span> string<span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span>str <span class=\"token operator\">-></span> str<span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"__heima\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">collect</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Collectors</span><span class=\"token punctuation\">.</span><span class=\"token function\">toList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token comment\">//[asd__heima, asdf__heima, 213__heima, 213__heima, 123123__heima]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"6-flatMap：扁平化一个流，把各个数组的流合并起来成一个流\"><a href=\"#6-flatMap：扁平化一个流，把各个数组的流合并起来成一个流\" class=\"headerlink\" title=\"6.flatMap：扁平化一个流，把各个数组的流合并起来成一个流\"></a>6.flatMap：扁平化一个流，把各个数组的流合并起来成一个流</h4><h4 id=\"7-sorted：返回排序后的流\"><a href=\"#7-sorted：返回排序后的流\" class=\"headerlink\" title=\"7.sorted：返回排序后的流\"></a>7.sorted：返回排序后的流</h4><p>排序需要的第三方jar包</p>\n<pre class=\"line-numbers language-xml\" data-language=\"xml\"><code class=\"language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span>\n     <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>commons-collections<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span>\n     <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>commons-collections<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span>\n     <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>3.2.2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span>\n   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"> <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">sorted</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> string <span class=\"token operator\">=</span> <span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">asList</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"asd\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"asdf\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"213\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"213\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"123123\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> collect <span class=\"token operator\">=</span> string<span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">sorted</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">collect</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Collectors</span><span class=\"token punctuation\">.</span><span class=\"token function\">toList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>collect <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//[123123, 213, 213, asd, asdf]</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"----------------\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> int1 <span class=\"token operator\">=</span> <span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">asList</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"40\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"-312\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"-32\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"213\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"123\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> collect1 <span class=\"token operator\">=</span> int1<span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">sorted</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">collect</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Collectors</span><span class=\"token punctuation\">.</span><span class=\"token function\">toList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>collect1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//[-312, -32, 123, 213, 40]</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"----------\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> int2 <span class=\"token operator\">=</span> <span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">asList</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"答复\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"阿道夫\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"奥\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"威风\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"好的\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> collect2 <span class=\"token operator\">=</span> int2<span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">sorted</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Collator</span><span class=\"token punctuation\">.</span><span class=\"token function\">getInstance</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Locale</span><span class=\"token punctuation\">.</span>CHINA<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">collect</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Collectors</span><span class=\"token punctuation\">.</span><span class=\"token function\">toList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>collect2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   \t\t\t<span class=\"token comment\">//[阿道夫, 奥, 答复, 好的, 威风]</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"终止操作符\"><a href=\"#终止操作符\" class=\"headerlink\" title=\"终止操作符\"></a>终止操作符</h3><h4 id=\"1-anyMatch-检查是否至少匹配一个元素\"><a href=\"#1-anyMatch-检查是否至少匹配一个元素\" class=\"headerlink\" title=\"1.anyMatch:检查是否至少匹配一个元素\"></a>1.anyMatch:检查是否至少匹配一个元素</h4><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">anymatch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> string <span class=\"token operator\">=</span> <span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">asList</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"asd\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"asdf\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"213\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"213\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"123123\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">boolean</span> bc <span class=\"token operator\">=</span> string<span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">anyMatch</span><span class=\"token punctuation\">(</span>s <span class=\"token operator\">-></span> s<span class=\"token punctuation\">.</span><span class=\"token function\">contains</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>bc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token comment\">//ture</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"2-allMatch：是否匹配所有元素\"><a href=\"#2-allMatch：是否匹配所有元素\" class=\"headerlink\" title=\"2.allMatch：是否匹配所有元素\"></a>2.allMatch：是否匹配所有元素</h4><h4 id=\"3-noneMatch-没有匹配-所有元素都不满足条件\"><a href=\"#3-noneMatch-没有匹配-所有元素都不满足条件\" class=\"headerlink\" title=\"3.noneMatch:没有匹配 所有元素都不满足条件\"></a>3.noneMatch:没有匹配 所有元素都不满足条件</h4><h4 id=\"4-findAny：返回当前流的任意元素\"><a href=\"#4-findAny：返回当前流的任意元素\" class=\"headerlink\" title=\"4.findAny：返回当前流的任意元素\"></a>4.findAny：返回当前流的任意元素</h4><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">findAny</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> string <span class=\"token operator\">=</span> <span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">asList</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"asd\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"asdf\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"213\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"213\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"123123\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">Optional</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> any <span class=\"token operator\">=</span> string<span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">findAny</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>any<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"5-forEach：遍历\"><a href=\"#5-forEach：遍历\" class=\"headerlink\" title=\"5.forEach：遍历\"></a>5.forEach：遍历</h4><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> string <span class=\"token operator\">=</span> <span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">asList</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"asd\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"asdf\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"213\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"213\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"123123\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    string<span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span>s <span class=\"token operator\">-></span> <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token comment\">/**\n * asd\n * asdf\n * 213\n * 213\n * 123123\n */</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"6-collect-将流转换成其他模式\"><a href=\"#6-collect-将流转换成其他模式\" class=\"headerlink\" title=\"6.collect:将流转换成其他模式\"></a>6.collect:将流转换成其他模式</h4><h4 id=\"7-reduce：将流中的元素反复结合起来，得到一个值\"><a href=\"#7-reduce：将流中的元素反复结合起来，得到一个值\" class=\"headerlink\" title=\"7.reduce：将流中的元素反复结合起来，得到一个值\"></a>7.reduce：将流中的元素反复结合起来，得到一个值</h4><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">reduce</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> string <span class=\"token operator\">=</span> <span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">asList</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"asd\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"asdf\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"213\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"213\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"123123\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">Optional</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> reduce <span class=\"token operator\">=</span> string<span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">reduce</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>end<span class=\"token punctuation\">,</span> item<span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token punctuation\">&#123;</span><span class=\"token keyword\">return</span> end <span class=\"token operator\">+</span> item<span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>reduce<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token comment\">//Optional[asdasdf213213123123]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"8-count-获取集合中元素数量\"><a href=\"#8-count-获取集合中元素数量\" class=\"headerlink\" title=\"8.count:获取集合中元素数量\"></a>8.count:获取集合中元素数量</h4>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"Lambda-amp-amp-Stream\"><a href=\"#Lambda-amp-amp-Stream\" class=\"headerlink\" title=\"Lambda&amp;&amp;Stream\"></a>Lambda&amp;&amp;Stream</h2><h3 id=\"优点\"><a href=\"#优点\" class=\"headerlink\" title=\"优点\"></a>优点</h3><p>简化我们匿名内部类的调用</p>\n<p>简化之前</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">new</span> <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Runnable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token annotation punctuation\">@Override</span>\n            <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Thread</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">\"你好\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>简化之后</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">new</span> <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Thread</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"你\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"依赖于函数接口\"><a href=\"#依赖于函数接口\" class=\"headerlink\" title=\"依赖于函数接口\"></a>依赖于函数接口</h3><p>1.在接口中只允许有一个抽象的方法</p>\n<p>2.@FunctionalInterface标记为该接口为函数接口</p>\n<p>3.可以通过default修饰为普通方法</p>\n<h3 id=\"方法调用\"><a href=\"#方法调用\" class=\"headerlink\" title=\"方法调用\"></a>方法调用</h3><p>()   参数列表</p>\n<p>-&gt;   分隔</p>\n<p>{}方法体</p>\n<p>无参调用</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">StreamDemo1</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">new</span> <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Thread</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">\"nih\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>有参调用代码实现</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">StreamDemo1</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        youcan youcan1<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span>j<span class=\"token punctuation\">)</span><span class=\"token operator\">-></span> <span class=\"token punctuation\">&#123;</span><span class=\"token keyword\">return</span> i<span class=\"token operator\">+</span><span class=\"token string\">\"---\"</span><span class=\"token operator\">+</span>j<span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>youcan1<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token annotation punctuation\">@FunctionalInterface</span>\n<span class=\"token keyword\">private</span> <span class=\"token keyword\">interface</span> youcan<span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">String</span> <span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>精简</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">StreamDemo1</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n       <span class=\"token class-name\">String</span> s<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>youcan<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span>j<span class=\"token punctuation\">)</span><span class=\"token operator\">-></span> i<span class=\"token operator\">+</span><span class=\"token string\">\"---\"</span><span class=\"token operator\">+</span>j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token annotation punctuation\">@FunctionalInterface</span>\n<span class=\"token keyword\">private</span> <span class=\"token keyword\">interface</span> youcan<span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">String</span> <span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>代码案例ArrayList</p>\n<p>forEach遍历数组</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ArrayLIst</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> list <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span> <span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        list<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"d\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        list<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        list<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"s\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        list<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span>s <span class=\"token operator\">-></span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"Stream\"><a href=\"#Stream\" class=\"headerlink\" title=\"Stream\"></a>Stream</h2><p>Stream：非常方便精简的形式遍历集合实现过滤，排序等</p>\n<h3 id=\"API\"><a href=\"#API\" class=\"headerlink\" title=\"API\"></a>API</h3><h4 id=\"1-filter-通过设置条件过滤元素\"><a href=\"#1-filter-通过设置条件过滤元素\" class=\"headerlink\" title=\"1.filter:通过设置条件过滤元素\"></a>1.filter:通过设置条件过滤元素</h4><p>Conrains():找出包含()中的元素</p>\n<p>collect：终止操作符，把流元素集合起来</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> string <span class=\"token operator\">=</span> <span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">asList</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"asd\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"asdf\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"213\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> s <span class=\"token operator\">=</span> string<span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span>str <span class=\"token operator\">-></span> str<span class=\"token punctuation\">.</span><span class=\"token function\">contains</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"s\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">collect</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Collectors</span><span class=\"token punctuation\">.</span><span class=\"token function\">toList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span>\n<span class=\"token comment\">//[asd, asdf]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"2-distinct-去重-比较的是两个数的地址\"><a href=\"#2-distinct-去重-比较的是两个数的地址\" class=\"headerlink\" title=\"2.distinct:去重,比较的是两个数的地址\"></a>2.distinct:去重,比较的是两个数的地址</h4><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">distinct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> string <span class=\"token operator\">=</span> <span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">asList</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"asd\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"asdf\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"213\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"213\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"123123\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> collect <span class=\"token operator\">=</span> string<span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">distinct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">collect</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Collectors</span><span class=\"token punctuation\">.</span><span class=\"token function\">toList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>collect<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token comment\">//[asd, asdf, 213, 123123]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"3-limit：返回一个不超过给定长度的流\"><a href=\"#3-limit：返回一个不超过给定长度的流\" class=\"headerlink\" title=\"3.limit：返回一个不超过给定长度的流\"></a>3.limit：返回一个不超过给定长度的流</h4><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">limit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> string <span class=\"token operator\">=</span> <span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">asList</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"asd\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"asdf\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"213\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"213\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"123123\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> collect <span class=\"token operator\">=</span> string<span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">limit</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">collect</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Collectors</span><span class=\"token punctuation\">.</span><span class=\"token function\">toList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>collect<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token comment\">//[asd, asdf]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"4-skip-丢掉前几个元素\"><a href=\"#4-skip-丢掉前几个元素\" class=\"headerlink\" title=\"4.skip:丢掉前几个元素\"></a>4.skip:丢掉前几个元素</h4><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">skip</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n<span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> string <span class=\"token operator\">=</span> <span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">asList</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"asd\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"asdf\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"213\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"213\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"123123\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> collect <span class=\"token operator\">=</span> string<span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">skip</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">collect</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Collectors</span><span class=\"token punctuation\">.</span><span class=\"token function\">toList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>collect<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token comment\">//[213, 213, 123123]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"5-map-对流中所有元素做统一处理\"><a href=\"#5-map-对流中所有元素做统一处理\" class=\"headerlink\" title=\"5.map:对流中所有元素做统一处理\"></a>5.map:对流中所有元素做统一处理</h4><p>接收函数为参数，函数会被应用到每个元素上</p>\n<p>Concat:在元素后加后缀</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> string <span class=\"token operator\">=</span> <span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">asList</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"asd\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"asdf\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"213\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"213\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"123123\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> list <span class=\"token operator\">=</span> string<span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span>str <span class=\"token operator\">-></span> str<span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"__heima\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">collect</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Collectors</span><span class=\"token punctuation\">.</span><span class=\"token function\">toList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token comment\">//[asd__heima, asdf__heima, 213__heima, 213__heima, 123123__heima]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"6-flatMap：扁平化一个流，把各个数组的流合并起来成一个流\"><a href=\"#6-flatMap：扁平化一个流，把各个数组的流合并起来成一个流\" class=\"headerlink\" title=\"6.flatMap：扁平化一个流，把各个数组的流合并起来成一个流\"></a>6.flatMap：扁平化一个流，把各个数组的流合并起来成一个流</h4><h4 id=\"7-sorted：返回排序后的流\"><a href=\"#7-sorted：返回排序后的流\" class=\"headerlink\" title=\"7.sorted：返回排序后的流\"></a>7.sorted：返回排序后的流</h4><p>排序需要的第三方jar包</p>\n<pre class=\"line-numbers language-xml\" data-language=\"xml\"><code class=\"language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span>\n     <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>commons-collections<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span>\n     <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>commons-collections<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span>\n     <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>3.2.2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span>\n   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"> <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">sorted</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> string <span class=\"token operator\">=</span> <span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">asList</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"asd\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"asdf\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"213\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"213\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"123123\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> collect <span class=\"token operator\">=</span> string<span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">sorted</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">collect</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Collectors</span><span class=\"token punctuation\">.</span><span class=\"token function\">toList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>collect <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//[123123, 213, 213, asd, asdf]</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"----------------\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> int1 <span class=\"token operator\">=</span> <span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">asList</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"40\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"-312\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"-32\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"213\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"123\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> collect1 <span class=\"token operator\">=</span> int1<span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">sorted</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">collect</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Collectors</span><span class=\"token punctuation\">.</span><span class=\"token function\">toList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>collect1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//[-312, -32, 123, 213, 40]</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"----------\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> int2 <span class=\"token operator\">=</span> <span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">asList</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"答复\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"阿道夫\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"奥\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"威风\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"好的\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> collect2 <span class=\"token operator\">=</span> int2<span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">sorted</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Collator</span><span class=\"token punctuation\">.</span><span class=\"token function\">getInstance</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Locale</span><span class=\"token punctuation\">.</span>CHINA<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">collect</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Collectors</span><span class=\"token punctuation\">.</span><span class=\"token function\">toList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>collect2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   \t\t\t<span class=\"token comment\">//[阿道夫, 奥, 答复, 好的, 威风]</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"终止操作符\"><a href=\"#终止操作符\" class=\"headerlink\" title=\"终止操作符\"></a>终止操作符</h3><h4 id=\"1-anyMatch-检查是否至少匹配一个元素\"><a href=\"#1-anyMatch-检查是否至少匹配一个元素\" class=\"headerlink\" title=\"1.anyMatch:检查是否至少匹配一个元素\"></a>1.anyMatch:检查是否至少匹配一个元素</h4><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">anymatch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> string <span class=\"token operator\">=</span> <span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">asList</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"asd\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"asdf\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"213\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"213\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"123123\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">boolean</span> bc <span class=\"token operator\">=</span> string<span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">anyMatch</span><span class=\"token punctuation\">(</span>s <span class=\"token operator\">-></span> s<span class=\"token punctuation\">.</span><span class=\"token function\">contains</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>bc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token comment\">//ture</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"2-allMatch：是否匹配所有元素\"><a href=\"#2-allMatch：是否匹配所有元素\" class=\"headerlink\" title=\"2.allMatch：是否匹配所有元素\"></a>2.allMatch：是否匹配所有元素</h4><h4 id=\"3-noneMatch-没有匹配-所有元素都不满足条件\"><a href=\"#3-noneMatch-没有匹配-所有元素都不满足条件\" class=\"headerlink\" title=\"3.noneMatch:没有匹配 所有元素都不满足条件\"></a>3.noneMatch:没有匹配 所有元素都不满足条件</h4><h4 id=\"4-findAny：返回当前流的任意元素\"><a href=\"#4-findAny：返回当前流的任意元素\" class=\"headerlink\" title=\"4.findAny：返回当前流的任意元素\"></a>4.findAny：返回当前流的任意元素</h4><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">findAny</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> string <span class=\"token operator\">=</span> <span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">asList</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"asd\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"asdf\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"213\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"213\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"123123\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">Optional</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> any <span class=\"token operator\">=</span> string<span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">findAny</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>any<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"5-forEach：遍历\"><a href=\"#5-forEach：遍历\" class=\"headerlink\" title=\"5.forEach：遍历\"></a>5.forEach：遍历</h4><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> string <span class=\"token operator\">=</span> <span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">asList</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"asd\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"asdf\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"213\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"213\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"123123\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    string<span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span>s <span class=\"token operator\">-></span> <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token comment\">/**\n * asd\n * asdf\n * 213\n * 213\n * 123123\n */</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"6-collect-将流转换成其他模式\"><a href=\"#6-collect-将流转换成其他模式\" class=\"headerlink\" title=\"6.collect:将流转换成其他模式\"></a>6.collect:将流转换成其他模式</h4><h4 id=\"7-reduce：将流中的元素反复结合起来，得到一个值\"><a href=\"#7-reduce：将流中的元素反复结合起来，得到一个值\" class=\"headerlink\" title=\"7.reduce：将流中的元素反复结合起来，得到一个值\"></a>7.reduce：将流中的元素反复结合起来，得到一个值</h4><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">reduce</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> string <span class=\"token operator\">=</span> <span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">asList</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"asd\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"asdf\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"213\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"213\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"123123\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">Optional</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> reduce <span class=\"token operator\">=</span> string<span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">reduce</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>end<span class=\"token punctuation\">,</span> item<span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token punctuation\">&#123;</span><span class=\"token keyword\">return</span> end <span class=\"token operator\">+</span> item<span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>reduce<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token comment\">//Optional[asdasdf213213123123]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"8-count-获取集合中元素数量\"><a href=\"#8-count-获取集合中元素数量\" class=\"headerlink\" title=\"8.count:获取集合中元素数量\"></a>8.count:获取集合中元素数量</h4>"},{"title":"Sevelet2","top":false,"cover":false,"toc":true,"mathjax":true,"date":"2021-08-09T09:43:31.000Z","password":null,"summary":null,"_content":"\n# Sevelet\n\n## HttpServletResponse对象\n\n向客户端输出数据service()方法中接收的是Response接口的实例化对象，这个对象向客户端发送数据，响应头响应状态码的方法。\n\n### 输出流的两种形式：\n\ngetWrite()获取字符流，只能响应字符\n\ngetOutputStream()获取字节流，可以响应一切数据\n\n![1](1.png)\n\n### 解决响应乱码问题\n\n乱码原因：服务端进行编码采用ISO-8859-1不支持中文\n\n指定服务端编码格式，同时指定客户端编码格式，同时设置才好使\n\n![](2.png)\n\n### 重定向\n\n重定向是一种服务器指导客户端的行为。重定向中有两个请求且属于客户端行为\n\n![](3.png)\n\n### 请求转发和重定向区别\n\n| 请求转发(requst.getRequestDispatcher().forward()) | 重定向(response.sendRedirect()) |\n| :------------------------------------------------ | ------------------------------- |\n| 一次请求，数据在request域共享                     | 两次请求，数据不共享            |\n| 服务器端行为                                      | 客户端行为                      |\n| 地址栏不发生变化                                  | 地址栏发生改变                  |\n| 绝对地址定位到站点后                              | 绝对地址可写到http://           |\n\n在当前资源下跳转可以重定向也可以请求转发，跨域做跳转只能重定向\n\n共享request对象用请求转发，跳转地址不是当前项目下的只能重定向\n\n![](4.png)\n\n### Cookie对象\n\n浏览器提供的技术，会存在客户端的目的是提高网络效益以及浏览器负载\n\n#### cookie的创建\n\n![](5.png)\n\n#### cookie的获取\n\n![](6.png)\n\n#### Cookie到期时间\n\n![](7.png)\n\n#### Cookie注意点\n\n1.cookie保存当前浏览器\n\n2.cookie不支持中文，如果一定要中文需要先URLEncoder.encode()进行编码，然后通过URLDecoder.decode()解码\n\n3.同名会覆盖\n\n4.不同浏览器存放数量有限，也有大小限制\n\n5.创建cookie对象都要响应response.addcookie()\n\n#### cookie的路径\n\n![](8.png)\n\n总结：只有访问的路径中包含cookie对象的path值时才可以获取到\n\n## HttpSession对象\n\n### 总结\n\n优点：传输数据可多次跳转，只要不销毁就可一直拿到\n\n### 创建Session\n\n![](9.png)\n\n### Session域对象\n\n![](10.png)\n\n### Session销毁\n\n1默认到期时间\n\n2自己设定到期时间\n\n3立即销毁  Session.invalidate()\n\n4关闭浏览器就失效\n\n5关闭服务器失效\n\n![](11.png)\n\n## ServletContext对象\n\n### ServletContext对象的获取\n\n![1](12.png)\n\n### ServletContext域对象\n\n![1](13.png)\n\n## 文件的上传和下载\n\n### 文件上传创建表单\n\n![1](14.png)\n\n### 后台代码实现\n\n使用注解@MultipartConfig将一个Servlet标识为支持文件上传，Servlet将multipart/form-data的POST请求封装成Part，通过Part对上传文件的操作\n\n![](15.png)\n\n编写完代码后先进入文件上传的HTML中传输文件然后找到传输的指定路径\n\n### 文件下载\n\n#### 超链接下载\n\n![](16.png)\n\n后台下载\n\n```java\n@WebServlet(name = \"0\", value = \"/0\")\npublic class download extends HttpServlet {\n    @Override\n    protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\n        System.out.println(\"文件下载\" );\n        request.setCharacterEncoding(\"UTF-8\");//设置请求的编码格式\n        String fileName = request.getParameter(\"fileName\");//获取参数(得到要下载的文件名)\n        //判断参数的非空 trim()去除字符串的前后空格\n        if (fileName ==null|| \"\".equals(fileName.trim())){\n            response.setContentType(\"text/html;charset=UTF-8\");\n            response.getWriter().print(\"请输入要下载的文件名!\");\n            response.getWriter().close();\n            return;\n        }\n        //得到要下载的资料的路径\n        String Path = request.getServletContext().getRealPath(\"/download/\");\n        File file= new File(Path+fileName);//通过路径得到file对象\n        //判断文件对象是否存在并且是一个标准文件\n        if (file.exists() &&file.isFile()){\n            response.setContentType(\"application/x-msdownload\");//设置响应类型\n            response.setHeader(\"Content-Dispoition\",\"attachment;filename=\"+fileName);\n            FileInputStream in = new FileInputStream(file);//得到file输入流\n            ServletOutputStream out = response.getOutputStream();//得到字节输出流\n\n            byte[] bytes=new byte[1024];//定义数组\n            int len = 0;//定义长度\n            while ((len=in.read(bytes))!=-1){\n            out.write(bytes,0,len);\n            }\n            out.close();\n            in.close();\n\n        }else {\n            response.getWriter().write(\"文件不存在\");\n            response.getWriter().close();\n        }\n\n    }\n```\n\n```html\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\"\n        \"http://www.w3.org/TR/html4/loose.dtd\">\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>文件下载</title>\n</head>\n<body>\n    <a href=\"download/14.png\">文本文件</a>\n    <a href=\"download/15.png\">图片文件</a>\n    <a href=\"download/16.png\">压缩文件</a>\n    <hr>\n    <a href=\"download/14.png\" download>文本文件</a>\n    <a href=\"download/15.png\" download>图片文件</a>\n    <hr>\n    <form action=\"download\">\n        文件名：<input type=\"text\" name=\"fileName\" placeholder=\"请输入\">\n        <button>下载</button>\n    </form>\n</body>\n</html>\n```\n\n","source":"_posts/Sevelet2.md","raw":"---\ntitle: Sevelet2\ntop: false\ncover: false\ntoc: true\nmathjax: true\ndate: 2021-08-09 17:43:31\npassword:\nsummary:\ntags: notes\ncategories: Sevelet\n---\n\n# Sevelet\n\n## HttpServletResponse对象\n\n向客户端输出数据service()方法中接收的是Response接口的实例化对象，这个对象向客户端发送数据，响应头响应状态码的方法。\n\n### 输出流的两种形式：\n\ngetWrite()获取字符流，只能响应字符\n\ngetOutputStream()获取字节流，可以响应一切数据\n\n![1](1.png)\n\n### 解决响应乱码问题\n\n乱码原因：服务端进行编码采用ISO-8859-1不支持中文\n\n指定服务端编码格式，同时指定客户端编码格式，同时设置才好使\n\n![](2.png)\n\n### 重定向\n\n重定向是一种服务器指导客户端的行为。重定向中有两个请求且属于客户端行为\n\n![](3.png)\n\n### 请求转发和重定向区别\n\n| 请求转发(requst.getRequestDispatcher().forward()) | 重定向(response.sendRedirect()) |\n| :------------------------------------------------ | ------------------------------- |\n| 一次请求，数据在request域共享                     | 两次请求，数据不共享            |\n| 服务器端行为                                      | 客户端行为                      |\n| 地址栏不发生变化                                  | 地址栏发生改变                  |\n| 绝对地址定位到站点后                              | 绝对地址可写到http://           |\n\n在当前资源下跳转可以重定向也可以请求转发，跨域做跳转只能重定向\n\n共享request对象用请求转发，跳转地址不是当前项目下的只能重定向\n\n![](4.png)\n\n### Cookie对象\n\n浏览器提供的技术，会存在客户端的目的是提高网络效益以及浏览器负载\n\n#### cookie的创建\n\n![](5.png)\n\n#### cookie的获取\n\n![](6.png)\n\n#### Cookie到期时间\n\n![](7.png)\n\n#### Cookie注意点\n\n1.cookie保存当前浏览器\n\n2.cookie不支持中文，如果一定要中文需要先URLEncoder.encode()进行编码，然后通过URLDecoder.decode()解码\n\n3.同名会覆盖\n\n4.不同浏览器存放数量有限，也有大小限制\n\n5.创建cookie对象都要响应response.addcookie()\n\n#### cookie的路径\n\n![](8.png)\n\n总结：只有访问的路径中包含cookie对象的path值时才可以获取到\n\n## HttpSession对象\n\n### 总结\n\n优点：传输数据可多次跳转，只要不销毁就可一直拿到\n\n### 创建Session\n\n![](9.png)\n\n### Session域对象\n\n![](10.png)\n\n### Session销毁\n\n1默认到期时间\n\n2自己设定到期时间\n\n3立即销毁  Session.invalidate()\n\n4关闭浏览器就失效\n\n5关闭服务器失效\n\n![](11.png)\n\n## ServletContext对象\n\n### ServletContext对象的获取\n\n![1](12.png)\n\n### ServletContext域对象\n\n![1](13.png)\n\n## 文件的上传和下载\n\n### 文件上传创建表单\n\n![1](14.png)\n\n### 后台代码实现\n\n使用注解@MultipartConfig将一个Servlet标识为支持文件上传，Servlet将multipart/form-data的POST请求封装成Part，通过Part对上传文件的操作\n\n![](15.png)\n\n编写完代码后先进入文件上传的HTML中传输文件然后找到传输的指定路径\n\n### 文件下载\n\n#### 超链接下载\n\n![](16.png)\n\n后台下载\n\n```java\n@WebServlet(name = \"0\", value = \"/0\")\npublic class download extends HttpServlet {\n    @Override\n    protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\n        System.out.println(\"文件下载\" );\n        request.setCharacterEncoding(\"UTF-8\");//设置请求的编码格式\n        String fileName = request.getParameter(\"fileName\");//获取参数(得到要下载的文件名)\n        //判断参数的非空 trim()去除字符串的前后空格\n        if (fileName ==null|| \"\".equals(fileName.trim())){\n            response.setContentType(\"text/html;charset=UTF-8\");\n            response.getWriter().print(\"请输入要下载的文件名!\");\n            response.getWriter().close();\n            return;\n        }\n        //得到要下载的资料的路径\n        String Path = request.getServletContext().getRealPath(\"/download/\");\n        File file= new File(Path+fileName);//通过路径得到file对象\n        //判断文件对象是否存在并且是一个标准文件\n        if (file.exists() &&file.isFile()){\n            response.setContentType(\"application/x-msdownload\");//设置响应类型\n            response.setHeader(\"Content-Dispoition\",\"attachment;filename=\"+fileName);\n            FileInputStream in = new FileInputStream(file);//得到file输入流\n            ServletOutputStream out = response.getOutputStream();//得到字节输出流\n\n            byte[] bytes=new byte[1024];//定义数组\n            int len = 0;//定义长度\n            while ((len=in.read(bytes))!=-1){\n            out.write(bytes,0,len);\n            }\n            out.close();\n            in.close();\n\n        }else {\n            response.getWriter().write(\"文件不存在\");\n            response.getWriter().close();\n        }\n\n    }\n```\n\n```html\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\"\n        \"http://www.w3.org/TR/html4/loose.dtd\">\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>文件下载</title>\n</head>\n<body>\n    <a href=\"download/14.png\">文本文件</a>\n    <a href=\"download/15.png\">图片文件</a>\n    <a href=\"download/16.png\">压缩文件</a>\n    <hr>\n    <a href=\"download/14.png\" download>文本文件</a>\n    <a href=\"download/15.png\" download>图片文件</a>\n    <hr>\n    <form action=\"download\">\n        文件名：<input type=\"text\" name=\"fileName\" placeholder=\"请输入\">\n        <button>下载</button>\n    </form>\n</body>\n</html>\n```\n\n","slug":"Sevelet2","published":1,"updated":"2022-11-21T11:55:43.566Z","comments":1,"layout":"post","photos":[],"link":"","_id":"claqy94kj000zbklg7vtc7oql","content":"<h1 id=\"Sevelet\"><a href=\"#Sevelet\" class=\"headerlink\" title=\"Sevelet\"></a>Sevelet</h1><h2 id=\"HttpServletResponse对象\"><a href=\"#HttpServletResponse对象\" class=\"headerlink\" title=\"HttpServletResponse对象\"></a>HttpServletResponse对象</h2><p>向客户端输出数据service()方法中接收的是Response接口的实例化对象，这个对象向客户端发送数据，响应头响应状态码的方法。</p>\n<h3 id=\"输出流的两种形式：\"><a href=\"#输出流的两种形式：\" class=\"headerlink\" title=\"输出流的两种形式：\"></a>输出流的两种形式：</h3><p>getWrite()获取字符流，只能响应字符</p>\n<p>getOutputStream()获取字节流，可以响应一切数据</p>\n<p><img src=\"/2021/08/09/sevelet2/1.png\" alt=\"1\"></p>\n<h3 id=\"解决响应乱码问题\"><a href=\"#解决响应乱码问题\" class=\"headerlink\" title=\"解决响应乱码问题\"></a>解决响应乱码问题</h3><p>乱码原因：服务端进行编码采用ISO-8859-1不支持中文</p>\n<p>指定服务端编码格式，同时指定客户端编码格式，同时设置才好使</p>\n<p><img src=\"/2021/08/09/sevelet2/2.png\"></p>\n<h3 id=\"重定向\"><a href=\"#重定向\" class=\"headerlink\" title=\"重定向\"></a>重定向</h3><p>重定向是一种服务器指导客户端的行为。重定向中有两个请求且属于客户端行为</p>\n<p><img src=\"/2021/08/09/sevelet2/3.png\"></p>\n<h3 id=\"请求转发和重定向区别\"><a href=\"#请求转发和重定向区别\" class=\"headerlink\" title=\"请求转发和重定向区别\"></a>请求转发和重定向区别</h3><table>\n<thead>\n<tr>\n<th align=\"left\">请求转发(requst.getRequestDispatcher().forward())</th>\n<th>重定向(response.sendRedirect())</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">一次请求，数据在request域共享</td>\n<td>两次请求，数据不共享</td>\n</tr>\n<tr>\n<td align=\"left\">服务器端行为</td>\n<td>客户端行为</td>\n</tr>\n<tr>\n<td align=\"left\">地址栏不发生变化</td>\n<td>地址栏发生改变</td>\n</tr>\n<tr>\n<td align=\"left\">绝对地址定位到站点后</td>\n<td>绝对地址可写到http://</td>\n</tr>\n</tbody></table>\n<p>在当前资源下跳转可以重定向也可以请求转发，跨域做跳转只能重定向</p>\n<p>共享request对象用请求转发，跳转地址不是当前项目下的只能重定向</p>\n<p><img src=\"/2021/08/09/sevelet2/4.png\"></p>\n<h3 id=\"Cookie对象\"><a href=\"#Cookie对象\" class=\"headerlink\" title=\"Cookie对象\"></a>Cookie对象</h3><p>浏览器提供的技术，会存在客户端的目的是提高网络效益以及浏览器负载</p>\n<h4 id=\"cookie的创建\"><a href=\"#cookie的创建\" class=\"headerlink\" title=\"cookie的创建\"></a>cookie的创建</h4><p><img src=\"/2021/08/09/sevelet2/5.png\"></p>\n<h4 id=\"cookie的获取\"><a href=\"#cookie的获取\" class=\"headerlink\" title=\"cookie的获取\"></a>cookie的获取</h4><p><img src=\"/2021/08/09/sevelet2/6.png\"></p>\n<h4 id=\"Cookie到期时间\"><a href=\"#Cookie到期时间\" class=\"headerlink\" title=\"Cookie到期时间\"></a>Cookie到期时间</h4><p><img src=\"/2021/08/09/sevelet2/7.png\"></p>\n<h4 id=\"Cookie注意点\"><a href=\"#Cookie注意点\" class=\"headerlink\" title=\"Cookie注意点\"></a>Cookie注意点</h4><p>1.cookie保存当前浏览器</p>\n<p>2.cookie不支持中文，如果一定要中文需要先URLEncoder.encode()进行编码，然后通过URLDecoder.decode()解码</p>\n<p>3.同名会覆盖</p>\n<p>4.不同浏览器存放数量有限，也有大小限制</p>\n<p>5.创建cookie对象都要响应response.addcookie()</p>\n<h4 id=\"cookie的路径\"><a href=\"#cookie的路径\" class=\"headerlink\" title=\"cookie的路径\"></a>cookie的路径</h4><p><img src=\"/2021/08/09/sevelet2/8.png\"></p>\n<p>总结：只有访问的路径中包含cookie对象的path值时才可以获取到</p>\n<h2 id=\"HttpSession对象\"><a href=\"#HttpSession对象\" class=\"headerlink\" title=\"HttpSession对象\"></a>HttpSession对象</h2><h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><p>优点：传输数据可多次跳转，只要不销毁就可一直拿到</p>\n<h3 id=\"创建Session\"><a href=\"#创建Session\" class=\"headerlink\" title=\"创建Session\"></a>创建Session</h3><p><img src=\"/2021/08/09/sevelet2/9.png\"></p>\n<h3 id=\"Session域对象\"><a href=\"#Session域对象\" class=\"headerlink\" title=\"Session域对象\"></a>Session域对象</h3><p><img src=\"/2021/08/09/sevelet2/10.png\"></p>\n<h3 id=\"Session销毁\"><a href=\"#Session销毁\" class=\"headerlink\" title=\"Session销毁\"></a>Session销毁</h3><p>1默认到期时间</p>\n<p>2自己设定到期时间</p>\n<p>3立即销毁  Session.invalidate()</p>\n<p>4关闭浏览器就失效</p>\n<p>5关闭服务器失效</p>\n<p><img src=\"/2021/08/09/sevelet2/11.png\"></p>\n<h2 id=\"ServletContext对象\"><a href=\"#ServletContext对象\" class=\"headerlink\" title=\"ServletContext对象\"></a>ServletContext对象</h2><h3 id=\"ServletContext对象的获取\"><a href=\"#ServletContext对象的获取\" class=\"headerlink\" title=\"ServletContext对象的获取\"></a>ServletContext对象的获取</h3><p><img src=\"/2021/08/09/sevelet2/12.png\" alt=\"1\"></p>\n<h3 id=\"ServletContext域对象\"><a href=\"#ServletContext域对象\" class=\"headerlink\" title=\"ServletContext域对象\"></a>ServletContext域对象</h3><p><img src=\"/2021/08/09/sevelet2/13.png\" alt=\"1\"></p>\n<h2 id=\"文件的上传和下载\"><a href=\"#文件的上传和下载\" class=\"headerlink\" title=\"文件的上传和下载\"></a>文件的上传和下载</h2><h3 id=\"文件上传创建表单\"><a href=\"#文件上传创建表单\" class=\"headerlink\" title=\"文件上传创建表单\"></a>文件上传创建表单</h3><p><img src=\"/2021/08/09/sevelet2/14.png\" alt=\"1\"></p>\n<h3 id=\"后台代码实现\"><a href=\"#后台代码实现\" class=\"headerlink\" title=\"后台代码实现\"></a>后台代码实现</h3><p>使用注解@MultipartConfig将一个Servlet标识为支持文件上传，Servlet将multipart/form-data的POST请求封装成Part，通过Part对上传文件的操作</p>\n<p><img src=\"/2021/08/09/sevelet2/15.png\"></p>\n<p>编写完代码后先进入文件上传的HTML中传输文件然后找到传输的指定路径</p>\n<h3 id=\"文件下载\"><a href=\"#文件下载\" class=\"headerlink\" title=\"文件下载\"></a>文件下载</h3><h4 id=\"超链接下载\"><a href=\"#超链接下载\" class=\"headerlink\" title=\"超链接下载\"></a>超链接下载</h4><p><img src=\"/2021/08/09/sevelet2/16.png\"></p>\n<p>后台下载</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@WebServlet</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"0\"</span><span class=\"token punctuation\">,</span> value <span class=\"token operator\">=</span> <span class=\"token string\">\"/0\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> download <span class=\"token keyword\">extends</span> <span class=\"token class-name\">HttpServlet</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">void</span> <span class=\"token function\">doGet</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpServletRequest</span> request<span class=\"token punctuation\">,</span> <span class=\"token class-name\">HttpServletResponse</span> response<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">ServletException</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">IOException</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"文件下载\"</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        request<span class=\"token punctuation\">.</span><span class=\"token function\">setCharacterEncoding</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"UTF-8\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//设置请求的编码格式</span>\n        <span class=\"token class-name\">String</span> fileName <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span><span class=\"token function\">getParameter</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fileName\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//获取参数(得到要下载的文件名)</span>\n        <span class=\"token comment\">//判断参数的非空 trim()去除字符串的前后空格</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>fileName <span class=\"token operator\">==</span><span class=\"token keyword\">null</span><span class=\"token operator\">||</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span>fileName<span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n            response<span class=\"token punctuation\">.</span><span class=\"token function\">setContentType</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"text/html;charset=UTF-8\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            response<span class=\"token punctuation\">.</span><span class=\"token function\">getWriter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入要下载的文件名!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            response<span class=\"token punctuation\">.</span><span class=\"token function\">getWriter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token comment\">//得到要下载的资料的路径</span>\n        <span class=\"token class-name\">String</span> <span class=\"token class-name\">Path</span> <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span><span class=\"token function\">getServletContext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getRealPath</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/download/\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">File</span> file<span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">File</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Path</span><span class=\"token operator\">+</span>fileName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//通过路径得到file对象</span>\n        <span class=\"token comment\">//判断文件对象是否存在并且是一个标准文件</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">.</span><span class=\"token function\">exists</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span>file<span class=\"token punctuation\">.</span><span class=\"token function\">isFile</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n            response<span class=\"token punctuation\">.</span><span class=\"token function\">setContentType</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"application/x-msdownload\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//设置响应类型</span>\n            response<span class=\"token punctuation\">.</span><span class=\"token function\">setHeader</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Content-Dispoition\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"attachment;filename=\"</span><span class=\"token operator\">+</span>fileName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">FileInputStream</span> in <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">FileInputStream</span><span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//得到file输入流</span>\n            <span class=\"token class-name\">ServletOutputStream</span> out <span class=\"token operator\">=</span> response<span class=\"token punctuation\">.</span><span class=\"token function\">getOutputStream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//得到字节输出流</span>\n\n            <span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> bytes<span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token number\">1024</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//定义数组</span>\n            <span class=\"token keyword\">int</span> len <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//定义长度</span>\n            <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>len<span class=\"token operator\">=</span>in<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span>bytes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">!=</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n            out<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span>bytes<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>len<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n            out<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            in<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n            response<span class=\"token punctuation\">.</span><span class=\"token function\">getWriter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"文件不存在\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            response<span class=\"token punctuation\">.</span><span class=\"token function\">getWriter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">HTML</span> <span class=\"token name\">PUBLIC</span> <span class=\"token string\">\"-//W3C//DTD HTML 4.01 Transitional//EN\"</span>\n        <span class=\"token string\">\"http://www.w3.org/TR/html4/loose.dtd\"</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>en<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>UTF-8<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>文件下载<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>download/14.png<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>文本文件<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>download/15.png<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>图片文件<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>download/16.png<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>压缩文件<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>hr</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>download/14.png<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">download</span><span class=\"token punctuation\">></span></span>文本文件<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>download/15.png<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">download</span><span class=\"token punctuation\">></span></span>图片文件<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>hr</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span> <span class=\"token attr-name\">action</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>download<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        文件名：<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>fileName<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">placeholder</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>请输入<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span><span class=\"token punctuation\">></span></span>下载<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Sevelet\"><a href=\"#Sevelet\" class=\"headerlink\" title=\"Sevelet\"></a>Sevelet</h1><h2 id=\"HttpServletResponse对象\"><a href=\"#HttpServletResponse对象\" class=\"headerlink\" title=\"HttpServletResponse对象\"></a>HttpServletResponse对象</h2><p>向客户端输出数据service()方法中接收的是Response接口的实例化对象，这个对象向客户端发送数据，响应头响应状态码的方法。</p>\n<h3 id=\"输出流的两种形式：\"><a href=\"#输出流的两种形式：\" class=\"headerlink\" title=\"输出流的两种形式：\"></a>输出流的两种形式：</h3><p>getWrite()获取字符流，只能响应字符</p>\n<p>getOutputStream()获取字节流，可以响应一切数据</p>\n<p><img src=\"/2021/08/09/sevelet2/1.png\" alt=\"1\"></p>\n<h3 id=\"解决响应乱码问题\"><a href=\"#解决响应乱码问题\" class=\"headerlink\" title=\"解决响应乱码问题\"></a>解决响应乱码问题</h3><p>乱码原因：服务端进行编码采用ISO-8859-1不支持中文</p>\n<p>指定服务端编码格式，同时指定客户端编码格式，同时设置才好使</p>\n<p><img src=\"/2021/08/09/sevelet2/2.png\"></p>\n<h3 id=\"重定向\"><a href=\"#重定向\" class=\"headerlink\" title=\"重定向\"></a>重定向</h3><p>重定向是一种服务器指导客户端的行为。重定向中有两个请求且属于客户端行为</p>\n<p><img src=\"/2021/08/09/sevelet2/3.png\"></p>\n<h3 id=\"请求转发和重定向区别\"><a href=\"#请求转发和重定向区别\" class=\"headerlink\" title=\"请求转发和重定向区别\"></a>请求转发和重定向区别</h3><table>\n<thead>\n<tr>\n<th align=\"left\">请求转发(requst.getRequestDispatcher().forward())</th>\n<th>重定向(response.sendRedirect())</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">一次请求，数据在request域共享</td>\n<td>两次请求，数据不共享</td>\n</tr>\n<tr>\n<td align=\"left\">服务器端行为</td>\n<td>客户端行为</td>\n</tr>\n<tr>\n<td align=\"left\">地址栏不发生变化</td>\n<td>地址栏发生改变</td>\n</tr>\n<tr>\n<td align=\"left\">绝对地址定位到站点后</td>\n<td>绝对地址可写到http://</td>\n</tr>\n</tbody></table>\n<p>在当前资源下跳转可以重定向也可以请求转发，跨域做跳转只能重定向</p>\n<p>共享request对象用请求转发，跳转地址不是当前项目下的只能重定向</p>\n<p><img src=\"/2021/08/09/sevelet2/4.png\"></p>\n<h3 id=\"Cookie对象\"><a href=\"#Cookie对象\" class=\"headerlink\" title=\"Cookie对象\"></a>Cookie对象</h3><p>浏览器提供的技术，会存在客户端的目的是提高网络效益以及浏览器负载</p>\n<h4 id=\"cookie的创建\"><a href=\"#cookie的创建\" class=\"headerlink\" title=\"cookie的创建\"></a>cookie的创建</h4><p><img src=\"/2021/08/09/sevelet2/5.png\"></p>\n<h4 id=\"cookie的获取\"><a href=\"#cookie的获取\" class=\"headerlink\" title=\"cookie的获取\"></a>cookie的获取</h4><p><img src=\"/2021/08/09/sevelet2/6.png\"></p>\n<h4 id=\"Cookie到期时间\"><a href=\"#Cookie到期时间\" class=\"headerlink\" title=\"Cookie到期时间\"></a>Cookie到期时间</h4><p><img src=\"/2021/08/09/sevelet2/7.png\"></p>\n<h4 id=\"Cookie注意点\"><a href=\"#Cookie注意点\" class=\"headerlink\" title=\"Cookie注意点\"></a>Cookie注意点</h4><p>1.cookie保存当前浏览器</p>\n<p>2.cookie不支持中文，如果一定要中文需要先URLEncoder.encode()进行编码，然后通过URLDecoder.decode()解码</p>\n<p>3.同名会覆盖</p>\n<p>4.不同浏览器存放数量有限，也有大小限制</p>\n<p>5.创建cookie对象都要响应response.addcookie()</p>\n<h4 id=\"cookie的路径\"><a href=\"#cookie的路径\" class=\"headerlink\" title=\"cookie的路径\"></a>cookie的路径</h4><p><img src=\"/2021/08/09/sevelet2/8.png\"></p>\n<p>总结：只有访问的路径中包含cookie对象的path值时才可以获取到</p>\n<h2 id=\"HttpSession对象\"><a href=\"#HttpSession对象\" class=\"headerlink\" title=\"HttpSession对象\"></a>HttpSession对象</h2><h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><p>优点：传输数据可多次跳转，只要不销毁就可一直拿到</p>\n<h3 id=\"创建Session\"><a href=\"#创建Session\" class=\"headerlink\" title=\"创建Session\"></a>创建Session</h3><p><img src=\"/2021/08/09/sevelet2/9.png\"></p>\n<h3 id=\"Session域对象\"><a href=\"#Session域对象\" class=\"headerlink\" title=\"Session域对象\"></a>Session域对象</h3><p><img src=\"/2021/08/09/sevelet2/10.png\"></p>\n<h3 id=\"Session销毁\"><a href=\"#Session销毁\" class=\"headerlink\" title=\"Session销毁\"></a>Session销毁</h3><p>1默认到期时间</p>\n<p>2自己设定到期时间</p>\n<p>3立即销毁  Session.invalidate()</p>\n<p>4关闭浏览器就失效</p>\n<p>5关闭服务器失效</p>\n<p><img src=\"/2021/08/09/sevelet2/11.png\"></p>\n<h2 id=\"ServletContext对象\"><a href=\"#ServletContext对象\" class=\"headerlink\" title=\"ServletContext对象\"></a>ServletContext对象</h2><h3 id=\"ServletContext对象的获取\"><a href=\"#ServletContext对象的获取\" class=\"headerlink\" title=\"ServletContext对象的获取\"></a>ServletContext对象的获取</h3><p><img src=\"/2021/08/09/sevelet2/12.png\" alt=\"1\"></p>\n<h3 id=\"ServletContext域对象\"><a href=\"#ServletContext域对象\" class=\"headerlink\" title=\"ServletContext域对象\"></a>ServletContext域对象</h3><p><img src=\"/2021/08/09/sevelet2/13.png\" alt=\"1\"></p>\n<h2 id=\"文件的上传和下载\"><a href=\"#文件的上传和下载\" class=\"headerlink\" title=\"文件的上传和下载\"></a>文件的上传和下载</h2><h3 id=\"文件上传创建表单\"><a href=\"#文件上传创建表单\" class=\"headerlink\" title=\"文件上传创建表单\"></a>文件上传创建表单</h3><p><img src=\"/2021/08/09/sevelet2/14.png\" alt=\"1\"></p>\n<h3 id=\"后台代码实现\"><a href=\"#后台代码实现\" class=\"headerlink\" title=\"后台代码实现\"></a>后台代码实现</h3><p>使用注解@MultipartConfig将一个Servlet标识为支持文件上传，Servlet将multipart/form-data的POST请求封装成Part，通过Part对上传文件的操作</p>\n<p><img src=\"/2021/08/09/sevelet2/15.png\"></p>\n<p>编写完代码后先进入文件上传的HTML中传输文件然后找到传输的指定路径</p>\n<h3 id=\"文件下载\"><a href=\"#文件下载\" class=\"headerlink\" title=\"文件下载\"></a>文件下载</h3><h4 id=\"超链接下载\"><a href=\"#超链接下载\" class=\"headerlink\" title=\"超链接下载\"></a>超链接下载</h4><p><img src=\"/2021/08/09/sevelet2/16.png\"></p>\n<p>后台下载</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@WebServlet</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"0\"</span><span class=\"token punctuation\">,</span> value <span class=\"token operator\">=</span> <span class=\"token string\">\"/0\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> download <span class=\"token keyword\">extends</span> <span class=\"token class-name\">HttpServlet</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">void</span> <span class=\"token function\">doGet</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpServletRequest</span> request<span class=\"token punctuation\">,</span> <span class=\"token class-name\">HttpServletResponse</span> response<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">ServletException</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">IOException</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"文件下载\"</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        request<span class=\"token punctuation\">.</span><span class=\"token function\">setCharacterEncoding</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"UTF-8\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//设置请求的编码格式</span>\n        <span class=\"token class-name\">String</span> fileName <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span><span class=\"token function\">getParameter</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fileName\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//获取参数(得到要下载的文件名)</span>\n        <span class=\"token comment\">//判断参数的非空 trim()去除字符串的前后空格</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>fileName <span class=\"token operator\">==</span><span class=\"token keyword\">null</span><span class=\"token operator\">||</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span>fileName<span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n            response<span class=\"token punctuation\">.</span><span class=\"token function\">setContentType</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"text/html;charset=UTF-8\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            response<span class=\"token punctuation\">.</span><span class=\"token function\">getWriter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入要下载的文件名!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            response<span class=\"token punctuation\">.</span><span class=\"token function\">getWriter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token comment\">//得到要下载的资料的路径</span>\n        <span class=\"token class-name\">String</span> <span class=\"token class-name\">Path</span> <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span><span class=\"token function\">getServletContext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getRealPath</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/download/\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">File</span> file<span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">File</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Path</span><span class=\"token operator\">+</span>fileName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//通过路径得到file对象</span>\n        <span class=\"token comment\">//判断文件对象是否存在并且是一个标准文件</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">.</span><span class=\"token function\">exists</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span>file<span class=\"token punctuation\">.</span><span class=\"token function\">isFile</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n            response<span class=\"token punctuation\">.</span><span class=\"token function\">setContentType</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"application/x-msdownload\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//设置响应类型</span>\n            response<span class=\"token punctuation\">.</span><span class=\"token function\">setHeader</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Content-Dispoition\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"attachment;filename=\"</span><span class=\"token operator\">+</span>fileName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">FileInputStream</span> in <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">FileInputStream</span><span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//得到file输入流</span>\n            <span class=\"token class-name\">ServletOutputStream</span> out <span class=\"token operator\">=</span> response<span class=\"token punctuation\">.</span><span class=\"token function\">getOutputStream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//得到字节输出流</span>\n\n            <span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> bytes<span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token number\">1024</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//定义数组</span>\n            <span class=\"token keyword\">int</span> len <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//定义长度</span>\n            <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>len<span class=\"token operator\">=</span>in<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span>bytes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">!=</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n            out<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span>bytes<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>len<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n            out<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            in<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n            response<span class=\"token punctuation\">.</span><span class=\"token function\">getWriter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"文件不存在\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            response<span class=\"token punctuation\">.</span><span class=\"token function\">getWriter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">HTML</span> <span class=\"token name\">PUBLIC</span> <span class=\"token string\">\"-//W3C//DTD HTML 4.01 Transitional//EN\"</span>\n        <span class=\"token string\">\"http://www.w3.org/TR/html4/loose.dtd\"</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>en<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>UTF-8<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>文件下载<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>download/14.png<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>文本文件<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>download/15.png<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>图片文件<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>download/16.png<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>压缩文件<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>hr</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>download/14.png<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">download</span><span class=\"token punctuation\">></span></span>文本文件<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>download/15.png<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">download</span><span class=\"token punctuation\">></span></span>图片文件<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>hr</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span> <span class=\"token attr-name\">action</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>download<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        文件名：<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>fileName<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">placeholder</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>请输入<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span><span class=\"token punctuation\">></span></span>下载<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n"},{"title":"maven创建与使用","top":false,"cover":false,"toc":true,"mathjax":true,"date":"2021-07-29T02:21:26.000Z","password":null,"summary":null,"_content":"## 1下载maven\n输入以下网址进入maven官网 \n```\nmaven.apache.org\n```\n![](2.png)\n点击进入Download下滑找到第一个是Linux第二个是Windows版本\n![](3.png)\n下载完解压即可\n## 2配置path和环境路径\n在终端输入mvn确定mvn是否配置了环境变量\n![](1.png)\n这是已经配置完成可以直接使用mvn。\n如果没有出现该界面则到下载解压文件所在位置将路径加入到path中即可\n输入该命令下载maven运行环境.m2路径\n```\nmvn help:system\n```\n![](4.png)\n运行完毕   将下载解压下的文件settings.xml移动到.m2中\n## 3创建maven IDE运行模板\n创建一个新文件夹在当前文件夹中输入\n```\nmvn archetype:generate -DgroupId=io.gaojian -DartifactId=demo -DarchetypeArtifactId=maven-archetype-quickstart -DarchetypeVersion=1.4 -DinteractiveMode=false\n```\n输入此配置为不需要交互一切按默认设置算\n![](5.png)\n```\nmvn archetype:generate -DarchetypeArtifactId=maven-archetype-quickstart -DarchetypeVersion=1.4  \n```\n此配置为交互模式，模板名称，项目名称，版本号可以自己设置\n![](6.png)\n模板名称要倒写，创建完毕\n## 4.IDE运行\n进入IDE 找到open 打开\n![](7.png)\n找到创建模板的文件夹位置点击open\n![](8.png)\n即操作完成\n## 5.maven操作\n可以在软件最右边找到maven按钮 会出现快捷操作按钮\n![](9.png)\n双击即可运行\n也可以通过terminal来输入mvn语句执行\n![](10.png)\n## 6.打包与运行\n当运用maven写完一个程序或者项目时需要将成品发送给需要的人 这时就需要打包\n![](11.png)\nmaven中install提供了打包的程序双击执行这时文件夹下会出现target文件夹 这就是已经打包完毕可以传输的了\n![](12.png)\n在当前文件下可用java -cp+项目名-版本号.jar +模板名.app来执行\n![](13.png)\n","source":"_posts/maven创建与使用.md","raw":"---\ntitle: maven创建与使用\ntop: false\ncover: false\ntoc: true\nmathjax: true\ndate: 2021-07-29 10:21:26\npassword:\nsummary:\ntags: notes\ncategories: maven\n---\n## 1下载maven\n输入以下网址进入maven官网 \n```\nmaven.apache.org\n```\n![](2.png)\n点击进入Download下滑找到第一个是Linux第二个是Windows版本\n![](3.png)\n下载完解压即可\n## 2配置path和环境路径\n在终端输入mvn确定mvn是否配置了环境变量\n![](1.png)\n这是已经配置完成可以直接使用mvn。\n如果没有出现该界面则到下载解压文件所在位置将路径加入到path中即可\n输入该命令下载maven运行环境.m2路径\n```\nmvn help:system\n```\n![](4.png)\n运行完毕   将下载解压下的文件settings.xml移动到.m2中\n## 3创建maven IDE运行模板\n创建一个新文件夹在当前文件夹中输入\n```\nmvn archetype:generate -DgroupId=io.gaojian -DartifactId=demo -DarchetypeArtifactId=maven-archetype-quickstart -DarchetypeVersion=1.4 -DinteractiveMode=false\n```\n输入此配置为不需要交互一切按默认设置算\n![](5.png)\n```\nmvn archetype:generate -DarchetypeArtifactId=maven-archetype-quickstart -DarchetypeVersion=1.4  \n```\n此配置为交互模式，模板名称，项目名称，版本号可以自己设置\n![](6.png)\n模板名称要倒写，创建完毕\n## 4.IDE运行\n进入IDE 找到open 打开\n![](7.png)\n找到创建模板的文件夹位置点击open\n![](8.png)\n即操作完成\n## 5.maven操作\n可以在软件最右边找到maven按钮 会出现快捷操作按钮\n![](9.png)\n双击即可运行\n也可以通过terminal来输入mvn语句执行\n![](10.png)\n## 6.打包与运行\n当运用maven写完一个程序或者项目时需要将成品发送给需要的人 这时就需要打包\n![](11.png)\nmaven中install提供了打包的程序双击执行这时文件夹下会出现target文件夹 这就是已经打包完毕可以传输的了\n![](12.png)\n在当前文件下可用java -cp+项目名-版本号.jar +模板名.app来执行\n![](13.png)\n","slug":"maven创建与使用","published":1,"updated":"2022-11-21T11:55:43.620Z","comments":1,"layout":"post","photos":[],"link":"","_id":"claqy94kk0011bklgd0r93h5d","content":"<h2 id=\"1下载maven\"><a href=\"#1下载maven\" class=\"headerlink\" title=\"1下载maven\"></a>1下载maven</h2><p>输入以下网址进入maven官网 </p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">maven.apache.org<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"/2021/07/29/maven-chuang-jian-yu-shi-yong/2.png\"><br>点击进入Download下滑找到第一个是Linux第二个是Windows版本<br><img src=\"/2021/07/29/maven-chuang-jian-yu-shi-yong/3.png\"><br>下载完解压即可</p>\n<h2 id=\"2配置path和环境路径\"><a href=\"#2配置path和环境路径\" class=\"headerlink\" title=\"2配置path和环境路径\"></a>2配置path和环境路径</h2><p>在终端输入mvn确定mvn是否配置了环境变量<br><img src=\"/2021/07/29/maven-chuang-jian-yu-shi-yong/1.png\"><br>这是已经配置完成可以直接使用mvn。<br>如果没有出现该界面则到下载解压文件所在位置将路径加入到path中即可<br>输入该命令下载maven运行环境.m2路径</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">mvn help:system<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"/2021/07/29/maven-chuang-jian-yu-shi-yong/4.png\"><br>运行完毕   将下载解压下的文件settings.xml移动到.m2中</p>\n<h2 id=\"3创建maven-IDE运行模板\"><a href=\"#3创建maven-IDE运行模板\" class=\"headerlink\" title=\"3创建maven IDE运行模板\"></a>3创建maven IDE运行模板</h2><p>创建一个新文件夹在当前文件夹中输入</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">mvn archetype:generate -DgroupId&#x3D;io.gaojian -DartifactId&#x3D;demo -DarchetypeArtifactId&#x3D;maven-archetype-quickstart -DarchetypeVersion&#x3D;1.4 -DinteractiveMode&#x3D;false<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>输入此配置为不需要交互一切按默认设置算<br><img src=\"/2021/07/29/maven-chuang-jian-yu-shi-yong/5.png\"></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">mvn archetype:generate -DarchetypeArtifactId&#x3D;maven-archetype-quickstart -DarchetypeVersion&#x3D;1.4  <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>此配置为交互模式，模板名称，项目名称，版本号可以自己设置<br><img src=\"/2021/07/29/maven-chuang-jian-yu-shi-yong/6.png\"><br>模板名称要倒写，创建完毕</p>\n<h2 id=\"4-IDE运行\"><a href=\"#4-IDE运行\" class=\"headerlink\" title=\"4.IDE运行\"></a>4.IDE运行</h2><p>进入IDE 找到open 打开<br><img src=\"/2021/07/29/maven-chuang-jian-yu-shi-yong/7.png\"><br>找到创建模板的文件夹位置点击open<br><img src=\"/2021/07/29/maven-chuang-jian-yu-shi-yong/8.png\"><br>即操作完成</p>\n<h2 id=\"5-maven操作\"><a href=\"#5-maven操作\" class=\"headerlink\" title=\"5.maven操作\"></a>5.maven操作</h2><p>可以在软件最右边找到maven按钮 会出现快捷操作按钮<br><img src=\"/2021/07/29/maven-chuang-jian-yu-shi-yong/9.png\"><br>双击即可运行<br>也可以通过terminal来输入mvn语句执行<br><img src=\"/2021/07/29/maven-chuang-jian-yu-shi-yong/10.png\"></p>\n<h2 id=\"6-打包与运行\"><a href=\"#6-打包与运行\" class=\"headerlink\" title=\"6.打包与运行\"></a>6.打包与运行</h2><p>当运用maven写完一个程序或者项目时需要将成品发送给需要的人 这时就需要打包<br><img src=\"/2021/07/29/maven-chuang-jian-yu-shi-yong/11.png\"><br>maven中install提供了打包的程序双击执行这时文件夹下会出现target文件夹 这就是已经打包完毕可以传输的了<br><img src=\"/2021/07/29/maven-chuang-jian-yu-shi-yong/12.png\"><br>在当前文件下可用java -cp+项目名-版本号.jar +模板名.app来执行<br><img src=\"/2021/07/29/maven-chuang-jian-yu-shi-yong/13.png\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"1下载maven\"><a href=\"#1下载maven\" class=\"headerlink\" title=\"1下载maven\"></a>1下载maven</h2><p>输入以下网址进入maven官网 </p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">maven.apache.org<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"/2021/07/29/maven-chuang-jian-yu-shi-yong/2.png\"><br>点击进入Download下滑找到第一个是Linux第二个是Windows版本<br><img src=\"/2021/07/29/maven-chuang-jian-yu-shi-yong/3.png\"><br>下载完解压即可</p>\n<h2 id=\"2配置path和环境路径\"><a href=\"#2配置path和环境路径\" class=\"headerlink\" title=\"2配置path和环境路径\"></a>2配置path和环境路径</h2><p>在终端输入mvn确定mvn是否配置了环境变量<br><img src=\"/2021/07/29/maven-chuang-jian-yu-shi-yong/1.png\"><br>这是已经配置完成可以直接使用mvn。<br>如果没有出现该界面则到下载解压文件所在位置将路径加入到path中即可<br>输入该命令下载maven运行环境.m2路径</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">mvn help:system<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"/2021/07/29/maven-chuang-jian-yu-shi-yong/4.png\"><br>运行完毕   将下载解压下的文件settings.xml移动到.m2中</p>\n<h2 id=\"3创建maven-IDE运行模板\"><a href=\"#3创建maven-IDE运行模板\" class=\"headerlink\" title=\"3创建maven IDE运行模板\"></a>3创建maven IDE运行模板</h2><p>创建一个新文件夹在当前文件夹中输入</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">mvn archetype:generate -DgroupId&#x3D;io.gaojian -DartifactId&#x3D;demo -DarchetypeArtifactId&#x3D;maven-archetype-quickstart -DarchetypeVersion&#x3D;1.4 -DinteractiveMode&#x3D;false<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>输入此配置为不需要交互一切按默认设置算<br><img src=\"/2021/07/29/maven-chuang-jian-yu-shi-yong/5.png\"></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">mvn archetype:generate -DarchetypeArtifactId&#x3D;maven-archetype-quickstart -DarchetypeVersion&#x3D;1.4  <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>此配置为交互模式，模板名称，项目名称，版本号可以自己设置<br><img src=\"/2021/07/29/maven-chuang-jian-yu-shi-yong/6.png\"><br>模板名称要倒写，创建完毕</p>\n<h2 id=\"4-IDE运行\"><a href=\"#4-IDE运行\" class=\"headerlink\" title=\"4.IDE运行\"></a>4.IDE运行</h2><p>进入IDE 找到open 打开<br><img src=\"/2021/07/29/maven-chuang-jian-yu-shi-yong/7.png\"><br>找到创建模板的文件夹位置点击open<br><img src=\"/2021/07/29/maven-chuang-jian-yu-shi-yong/8.png\"><br>即操作完成</p>\n<h2 id=\"5-maven操作\"><a href=\"#5-maven操作\" class=\"headerlink\" title=\"5.maven操作\"></a>5.maven操作</h2><p>可以在软件最右边找到maven按钮 会出现快捷操作按钮<br><img src=\"/2021/07/29/maven-chuang-jian-yu-shi-yong/9.png\"><br>双击即可运行<br>也可以通过terminal来输入mvn语句执行<br><img src=\"/2021/07/29/maven-chuang-jian-yu-shi-yong/10.png\"></p>\n<h2 id=\"6-打包与运行\"><a href=\"#6-打包与运行\" class=\"headerlink\" title=\"6.打包与运行\"></a>6.打包与运行</h2><p>当运用maven写完一个程序或者项目时需要将成品发送给需要的人 这时就需要打包<br><img src=\"/2021/07/29/maven-chuang-jian-yu-shi-yong/11.png\"><br>maven中install提供了打包的程序双击执行这时文件夹下会出现target文件夹 这就是已经打包完毕可以传输的了<br><img src=\"/2021/07/29/maven-chuang-jian-yu-shi-yong/12.png\"><br>在当前文件下可用java -cp+项目名-版本号.jar +模板名.app来执行<br><img src=\"/2021/07/29/maven-chuang-jian-yu-shi-yong/13.png\"></p>\n"},{"title":"mybatis第一次框架操作","top":false,"cover":false,"toc":true,"mathjax":true,"date":"2021-08-04T04:18:05.000Z","password":null,"summary":null,"_content":"\n# mybatis\n\n第一章框架概况\n\n### 1.三层架构\n\n​\t界面层：和用户打交道，接收用户的请求参数显示处理结果。（jsp，HTML，servlet）\n\n​\t业务逻辑层：接收了界面层传递的数据，计算逻辑，调用数据库，获取数据\n\n​\t数据访问层：就是访问数据库，执行对数据的查询，修改，删除等\n\n三层对应的包：\n\n​\t界面层：controller包  （servlet）\n\n​\t业务逻辑层：service包（XXXService类）\n\n​\t数据访问层：dao包（XXXDao类）\n\n三层中类的交互\n\n​\t用户使用界面层--->业务逻辑层---->数据访问层(持久层)---->数据库(mysql)\n\n三层对应的处理框架\n\n​\t界面层-----servlet---->springmvc(框架)\n\n​\t业务逻辑层-----service类---->spring(框架)\n\n​\t数据访问层----dao类------>mybatis(框架)\n\n### 2.框架\n\n​\t框架是一个舞台，是一个模板。定义好了一些功能，这些功能是可用的，可以加入项目中自己的功能，这些功能可以利用框架中写好的功能。\n\n​\t框架是针对某一领域有效的。特长是某一方面不是全能的，比如mybatis做数据库强但是不能做其他的。\n\nmybatis框架\n\n​\t1sql mapper ：sql映射\n\n​\t\t可以把数据库中的一行数据映射为一个java对象\n\n​\t2。Data Access Objects(DAOs):数据访问，对数据库执行增删改查\n\n### 3.功能\n\nmybatis提供了哪些功能：\n1提供了创建Connection,Statement,ResultSet的能力，不用开发人员自己创建了\n\n2提供了执行SQL语句的能力\n\n3提供了循环SQL，把SQL的结果转换为Java对象，list集合的能力\n\n4提供了关闭资源的能力\n\n开发人员要做的是：提供SQL语句\n\n流程：开发人员提供SQL语句--->mybatis处理SQL----->得到list集合或java对象(表中的数据)\n\n## 第二章入门案例\n\n### 总体流程\n\n![2](2.png)\n\n## 准备工作\n\n**1.在IDE中创建一个maven工程，补全路径下的resources包**\n\n![1](1.png)\n\n**2.进入mvnrepository搜索mybatis选择最新版本复制链接**\n\n![3](3.png)\n\n**进入ide找到pom，将上面复制的加入pom中**\n\n![4](4.png)\n\n**接着再在mvnrepository中搜索mysql下载mysql驱动**\n\n![5](5.png)\n\n**在pom中加入依赖**\n\n![6](6.png)\n\n**接着在pom中build下加入日志插件**\n\n![7](7.png)\n\n准备工作完成\n\n## 案例实施\n\n1创建Student\n\n![8](8.png)\n\nalt+回车 选择图中这两个进入里面全选\n\n![9](9.png)\n\n接着创建个packeg包命名为dao在里面创建StudentDao.java接口和StudentDao.xml文件\n\n![10](10.png)\n\n![11](11.png)\n\nStudentDao接口中这么写\n\n![12](12.png)\n\n在reources中创建.xml表\n\n![13](13.png)\n\n![14](14.png)\n\n![15](15.png)\n\n![16](16.png)\n\n创建myapp.java来运行这个命令\n\n![17](17.png)\n\n## 代码实现\n\n***<u>Student</u>***\n\n```java\npackage io.gaojian.bjpowernode.domain;\n\npublic class Student {\n    //定义属性，要求是属性名和列名一致\n    private Integer id;\n    private String name;\n    private String email;\n    private Integer age;\n\n    public Integer getId() {\n        return id;\n    }\n\n    public void setId(Integer id) {\n        this.id = id;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public void setName(String name) {\n        this.name = name;\n    }\n\n    public String getEmail() {\n        return email;\n    }\n\n    public void setEmail(String email) {\n        this.email = email;\n    }\n\n    public Integer getAge() {\n        return age;\n    }\n\n    public void setAge(Integer age) {\n        this.age = age;\n    }\n\n    @Override\n    public String toString() {\n        return \"Student{\" +\n                \"id=\" + id +\n                \", name='\" + name + '\\'' +\n                \", email='\" + email + '\\'' +\n                \", age=\" + age +\n                '}';\n    }\n}\n```\n\n***<u>Studentdao</u>***\n\n```java\nimport io.gaojian.bjpowernode.domain.Student;\nimport java.util.List;\npublic interface StudentDao {\n    public List<Student> selectStudent();\n}\n```\n\n***<u>StudentDao.xml</u>***\n\n```java\n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE mapper\n        PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\"\n        \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\">\n\n<mapper namespace=\"io.gaojian.bjpowernode.dao.StudentDao\">\n\n    <select id=\"selectStudent\" resultType=\"io.gaojian.bjpowernode.domain.Student\">\n        select id,name,email,age from student order by id;\n    </select>\n\n</mapper>\n```\n\n**<u>*Mybatis.xml*</u>**\n\n```java\n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE configuration\n        PUBLIC \"-//mybatis.org//DTD Config 3.0//EN\"\n        \"http://mybatis.org/dtd/mybatis-3-config.dtd\">\n<configuration>\n    \n    <settings>\n        <setting name=\"logImpl\" value=\"STDOUT_LOGGING\"/>\n    </settings>\n    <environments default=\"bank\">\n        <environment id=\"bank\">\n            <transactionManager type=\"JDBC\"/>\n            <dataSource type=\"POOLED\">\n                <property name=\"driver\" value=\"com.mysql.cj.jdbc.Driver\"/>\n                <property name=\"url\" value=\"jdbc:mysql://localhost:3306/bank\"/>\n                <property name=\"username\" value=\"root\"/>\n                <property name=\"password\" value=\"12345678\"/>\n            </dataSource>\n        </environment>\n    </environments>\n\n    <mappers>\n        <mapper resource=\"io/gaojian/bjpowernode/dao/StudentsceDao.xml\"/>\n    </mappers>\n</configuration>\n```\n\n**<u>*Pom.xml*</u>**\n\n```java\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n    <modelVersion>4.0.0</modelVersion>\n\n    <groupId>io.gaojian</groupId>\n    <artifactId>mybatis</artifactId>\n    <version>1.0-SNAPSHOT</version>\n\n    <name>mybatis</name>\n    <!-- FIXME change it to the project's website -->\n    <url>http://www.example.com</url>\n\n    <properties>\n        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n        <maven.compiler.source>1.8</maven.compiler.source>\n        <maven.compiler.target>1.8</maven.compiler.target>\n    </properties>\n\n    <dependencies>\n        <dependency>\n            <groupId>org.mybatis</groupId>\n            <artifactId>mybatis</artifactId>\n            <version>3.5.7</version>\n        </dependency>\n\n        <dependency>\n            <groupId>junit</groupId>\n            <artifactId>junit</artifactId>\n            <version>4.11</version>\n            <scope>test</scope>\n        </dependency>\n        <!--mysql驱动-->\n        <dependency>\n            <groupId>mysql</groupId>\n            <artifactId>mysql-connector-java</artifactId>\n            <version>8.0.25</version>\n        </dependency>\n\n\n    </dependencies>\n\n    <build>\n        <resources>\n            <resource>\n                <directory>src/main/java</directory>\n                <includes>\n                    <include>**/*.properties</include>\n                    <include>**/*.xml</include>\n                </includes>\n                <filtering>false</filtering>\n            </resource>\n        </resources>\n\n        <pluginManagement>\n            <plugins>\n\n                <plugin>\n                    <artifactId>maven-clean-plugin</artifactId>\n                    <version>3.1.0</version>\n                </plugin>\n\n                <plugin>\n                    <artifactId>maven-resources-plugin</artifactId>\n                    <version>3.0.2</version>\n                </plugin>\n                <plugin>\n                    <artifactId>maven-compiler-plugin</artifactId>\n                    <version>3.8.0</version>\n                </plugin>\n                <plugin>\n                    <artifactId>maven-surefire-plugin</artifactId>\n                    <version>2.22.1</version>\n                </plugin>\n                <plugin>\n                    <artifactId>maven-jar-plugin</artifactId>\n                    <version>3.0.2</version>\n                </plugin>\n                <plugin>\n                    <artifactId>maven-install-plugin</artifactId>\n                    <version>2.5.2</version>\n                </plugin>\n                <plugin>\n                    <artifactId>maven-deploy-plugin</artifactId>\n                    <version>2.8.2</version>\n                </plugin>\n                <plugin>\n                    <artifactId>maven-site-plugin</artifactId>\n                    <version>3.7.1</version>\n                </plugin>\n                <plugin>\n                    <artifactId>maven-project-info-reports-plugin</artifactId>\n                    <version>3.0.0</version>\n                </plugin>\n            </plugins>\n        </pluginManagement>\n    </build>\n</project>\n\n```\n\n**<u>*MyApp*</u>**\n\n```java\nimport io.gaojian.bjpowernode.domain.Student;\nimport org.apache.ibatis.io.Resources;\nimport org.apache.ibatis.session.SqlSession;\nimport org.apache.ibatis.session.SqlSessionFactory;\nimport org.apache.ibatis.session.SqlSessionFactoryBuilder;\n\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.util.List;\n\npublic class MyApp {\n    public static void main(String[] args) throws IOException {\n        String config = \"mybatis.xml\";\n        InputStream in = Resources.getResourceAsStream(config);\n        SqlSessionFactoryBuilder builder = new SqlSessionFactoryBuilder();\n        SqlSessionFactory factory = builder.build(in);\n        SqlSession sqlSession =factory.openSession();\n        String sqlId = \"selectStudent\";\n        List<Student> studentList = sqlSession.selectList(sqlId);\n        studentList.forEach(student -> System.out.println(student));\n        sqlSession.close();\n\n    }\n}\n\n```\n\n","source":"_posts/mybatis第一次框架操作.md","raw":"---\ntitle: mybatis第一次框架操作\ntop: false\ncover: false\ntoc: true\nmathjax: true\ndate: 2021-08-04 12:18:05\npassword:\nsummary:\ntags: notes\ncategories: mybatis\n---\n\n# mybatis\n\n第一章框架概况\n\n### 1.三层架构\n\n​\t界面层：和用户打交道，接收用户的请求参数显示处理结果。（jsp，HTML，servlet）\n\n​\t业务逻辑层：接收了界面层传递的数据，计算逻辑，调用数据库，获取数据\n\n​\t数据访问层：就是访问数据库，执行对数据的查询，修改，删除等\n\n三层对应的包：\n\n​\t界面层：controller包  （servlet）\n\n​\t业务逻辑层：service包（XXXService类）\n\n​\t数据访问层：dao包（XXXDao类）\n\n三层中类的交互\n\n​\t用户使用界面层--->业务逻辑层---->数据访问层(持久层)---->数据库(mysql)\n\n三层对应的处理框架\n\n​\t界面层-----servlet---->springmvc(框架)\n\n​\t业务逻辑层-----service类---->spring(框架)\n\n​\t数据访问层----dao类------>mybatis(框架)\n\n### 2.框架\n\n​\t框架是一个舞台，是一个模板。定义好了一些功能，这些功能是可用的，可以加入项目中自己的功能，这些功能可以利用框架中写好的功能。\n\n​\t框架是针对某一领域有效的。特长是某一方面不是全能的，比如mybatis做数据库强但是不能做其他的。\n\nmybatis框架\n\n​\t1sql mapper ：sql映射\n\n​\t\t可以把数据库中的一行数据映射为一个java对象\n\n​\t2。Data Access Objects(DAOs):数据访问，对数据库执行增删改查\n\n### 3.功能\n\nmybatis提供了哪些功能：\n1提供了创建Connection,Statement,ResultSet的能力，不用开发人员自己创建了\n\n2提供了执行SQL语句的能力\n\n3提供了循环SQL，把SQL的结果转换为Java对象，list集合的能力\n\n4提供了关闭资源的能力\n\n开发人员要做的是：提供SQL语句\n\n流程：开发人员提供SQL语句--->mybatis处理SQL----->得到list集合或java对象(表中的数据)\n\n## 第二章入门案例\n\n### 总体流程\n\n![2](2.png)\n\n## 准备工作\n\n**1.在IDE中创建一个maven工程，补全路径下的resources包**\n\n![1](1.png)\n\n**2.进入mvnrepository搜索mybatis选择最新版本复制链接**\n\n![3](3.png)\n\n**进入ide找到pom，将上面复制的加入pom中**\n\n![4](4.png)\n\n**接着再在mvnrepository中搜索mysql下载mysql驱动**\n\n![5](5.png)\n\n**在pom中加入依赖**\n\n![6](6.png)\n\n**接着在pom中build下加入日志插件**\n\n![7](7.png)\n\n准备工作完成\n\n## 案例实施\n\n1创建Student\n\n![8](8.png)\n\nalt+回车 选择图中这两个进入里面全选\n\n![9](9.png)\n\n接着创建个packeg包命名为dao在里面创建StudentDao.java接口和StudentDao.xml文件\n\n![10](10.png)\n\n![11](11.png)\n\nStudentDao接口中这么写\n\n![12](12.png)\n\n在reources中创建.xml表\n\n![13](13.png)\n\n![14](14.png)\n\n![15](15.png)\n\n![16](16.png)\n\n创建myapp.java来运行这个命令\n\n![17](17.png)\n\n## 代码实现\n\n***<u>Student</u>***\n\n```java\npackage io.gaojian.bjpowernode.domain;\n\npublic class Student {\n    //定义属性，要求是属性名和列名一致\n    private Integer id;\n    private String name;\n    private String email;\n    private Integer age;\n\n    public Integer getId() {\n        return id;\n    }\n\n    public void setId(Integer id) {\n        this.id = id;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public void setName(String name) {\n        this.name = name;\n    }\n\n    public String getEmail() {\n        return email;\n    }\n\n    public void setEmail(String email) {\n        this.email = email;\n    }\n\n    public Integer getAge() {\n        return age;\n    }\n\n    public void setAge(Integer age) {\n        this.age = age;\n    }\n\n    @Override\n    public String toString() {\n        return \"Student{\" +\n                \"id=\" + id +\n                \", name='\" + name + '\\'' +\n                \", email='\" + email + '\\'' +\n                \", age=\" + age +\n                '}';\n    }\n}\n```\n\n***<u>Studentdao</u>***\n\n```java\nimport io.gaojian.bjpowernode.domain.Student;\nimport java.util.List;\npublic interface StudentDao {\n    public List<Student> selectStudent();\n}\n```\n\n***<u>StudentDao.xml</u>***\n\n```java\n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE mapper\n        PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\"\n        \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\">\n\n<mapper namespace=\"io.gaojian.bjpowernode.dao.StudentDao\">\n\n    <select id=\"selectStudent\" resultType=\"io.gaojian.bjpowernode.domain.Student\">\n        select id,name,email,age from student order by id;\n    </select>\n\n</mapper>\n```\n\n**<u>*Mybatis.xml*</u>**\n\n```java\n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE configuration\n        PUBLIC \"-//mybatis.org//DTD Config 3.0//EN\"\n        \"http://mybatis.org/dtd/mybatis-3-config.dtd\">\n<configuration>\n    \n    <settings>\n        <setting name=\"logImpl\" value=\"STDOUT_LOGGING\"/>\n    </settings>\n    <environments default=\"bank\">\n        <environment id=\"bank\">\n            <transactionManager type=\"JDBC\"/>\n            <dataSource type=\"POOLED\">\n                <property name=\"driver\" value=\"com.mysql.cj.jdbc.Driver\"/>\n                <property name=\"url\" value=\"jdbc:mysql://localhost:3306/bank\"/>\n                <property name=\"username\" value=\"root\"/>\n                <property name=\"password\" value=\"12345678\"/>\n            </dataSource>\n        </environment>\n    </environments>\n\n    <mappers>\n        <mapper resource=\"io/gaojian/bjpowernode/dao/StudentsceDao.xml\"/>\n    </mappers>\n</configuration>\n```\n\n**<u>*Pom.xml*</u>**\n\n```java\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n    <modelVersion>4.0.0</modelVersion>\n\n    <groupId>io.gaojian</groupId>\n    <artifactId>mybatis</artifactId>\n    <version>1.0-SNAPSHOT</version>\n\n    <name>mybatis</name>\n    <!-- FIXME change it to the project's website -->\n    <url>http://www.example.com</url>\n\n    <properties>\n        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n        <maven.compiler.source>1.8</maven.compiler.source>\n        <maven.compiler.target>1.8</maven.compiler.target>\n    </properties>\n\n    <dependencies>\n        <dependency>\n            <groupId>org.mybatis</groupId>\n            <artifactId>mybatis</artifactId>\n            <version>3.5.7</version>\n        </dependency>\n\n        <dependency>\n            <groupId>junit</groupId>\n            <artifactId>junit</artifactId>\n            <version>4.11</version>\n            <scope>test</scope>\n        </dependency>\n        <!--mysql驱动-->\n        <dependency>\n            <groupId>mysql</groupId>\n            <artifactId>mysql-connector-java</artifactId>\n            <version>8.0.25</version>\n        </dependency>\n\n\n    </dependencies>\n\n    <build>\n        <resources>\n            <resource>\n                <directory>src/main/java</directory>\n                <includes>\n                    <include>**/*.properties</include>\n                    <include>**/*.xml</include>\n                </includes>\n                <filtering>false</filtering>\n            </resource>\n        </resources>\n\n        <pluginManagement>\n            <plugins>\n\n                <plugin>\n                    <artifactId>maven-clean-plugin</artifactId>\n                    <version>3.1.0</version>\n                </plugin>\n\n                <plugin>\n                    <artifactId>maven-resources-plugin</artifactId>\n                    <version>3.0.2</version>\n                </plugin>\n                <plugin>\n                    <artifactId>maven-compiler-plugin</artifactId>\n                    <version>3.8.0</version>\n                </plugin>\n                <plugin>\n                    <artifactId>maven-surefire-plugin</artifactId>\n                    <version>2.22.1</version>\n                </plugin>\n                <plugin>\n                    <artifactId>maven-jar-plugin</artifactId>\n                    <version>3.0.2</version>\n                </plugin>\n                <plugin>\n                    <artifactId>maven-install-plugin</artifactId>\n                    <version>2.5.2</version>\n                </plugin>\n                <plugin>\n                    <artifactId>maven-deploy-plugin</artifactId>\n                    <version>2.8.2</version>\n                </plugin>\n                <plugin>\n                    <artifactId>maven-site-plugin</artifactId>\n                    <version>3.7.1</version>\n                </plugin>\n                <plugin>\n                    <artifactId>maven-project-info-reports-plugin</artifactId>\n                    <version>3.0.0</version>\n                </plugin>\n            </plugins>\n        </pluginManagement>\n    </build>\n</project>\n\n```\n\n**<u>*MyApp*</u>**\n\n```java\nimport io.gaojian.bjpowernode.domain.Student;\nimport org.apache.ibatis.io.Resources;\nimport org.apache.ibatis.session.SqlSession;\nimport org.apache.ibatis.session.SqlSessionFactory;\nimport org.apache.ibatis.session.SqlSessionFactoryBuilder;\n\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.util.List;\n\npublic class MyApp {\n    public static void main(String[] args) throws IOException {\n        String config = \"mybatis.xml\";\n        InputStream in = Resources.getResourceAsStream(config);\n        SqlSessionFactoryBuilder builder = new SqlSessionFactoryBuilder();\n        SqlSessionFactory factory = builder.build(in);\n        SqlSession sqlSession =factory.openSession();\n        String sqlId = \"selectStudent\";\n        List<Student> studentList = sqlSession.selectList(sqlId);\n        studentList.forEach(student -> System.out.println(student));\n        sqlSession.close();\n\n    }\n}\n\n```\n\n","slug":"mybatis第一次框架操作","published":1,"updated":"2022-11-21T11:55:43.647Z","comments":1,"layout":"post","photos":[],"link":"","_id":"claqy94km0015bklg3s2n54q7","content":"<h1 id=\"mybatis\"><a href=\"#mybatis\" class=\"headerlink\" title=\"mybatis\"></a>mybatis</h1><p>第一章框架概况</p>\n<h3 id=\"1-三层架构\"><a href=\"#1-三层架构\" class=\"headerlink\" title=\"1.三层架构\"></a>1.三层架构</h3><p>​    界面层：和用户打交道，接收用户的请求参数显示处理结果。（jsp，HTML，servlet）</p>\n<p>​    业务逻辑层：接收了界面层传递的数据，计算逻辑，调用数据库，获取数据</p>\n<p>​    数据访问层：就是访问数据库，执行对数据的查询，修改，删除等</p>\n<p>三层对应的包：</p>\n<p>​    界面层：controller包  （servlet）</p>\n<p>​    业务逻辑层：service包（XXXService类）</p>\n<p>​    数据访问层：dao包（XXXDao类）</p>\n<p>三层中类的交互</p>\n<p>​    用户使用界面层—&gt;业务逻辑层—-&gt;数据访问层(持久层)—-&gt;数据库(mysql)</p>\n<p>三层对应的处理框架</p>\n<p>​    界面层—–servlet—-&gt;springmvc(框架)</p>\n<p>​    业务逻辑层—–service类—-&gt;spring(框架)</p>\n<p>​    数据访问层—-dao类——&gt;mybatis(框架)</p>\n<h3 id=\"2-框架\"><a href=\"#2-框架\" class=\"headerlink\" title=\"2.框架\"></a>2.框架</h3><p>​    框架是一个舞台，是一个模板。定义好了一些功能，这些功能是可用的，可以加入项目中自己的功能，这些功能可以利用框架中写好的功能。</p>\n<p>​    框架是针对某一领域有效的。特长是某一方面不是全能的，比如mybatis做数据库强但是不能做其他的。</p>\n<p>mybatis框架</p>\n<p>​    1sql mapper ：sql映射</p>\n<p>​        可以把数据库中的一行数据映射为一个java对象</p>\n<p>​    2。Data Access Objects(DAOs):数据访问，对数据库执行增删改查</p>\n<h3 id=\"3-功能\"><a href=\"#3-功能\" class=\"headerlink\" title=\"3.功能\"></a>3.功能</h3><p>mybatis提供了哪些功能：<br>1提供了创建Connection,Statement,ResultSet的能力，不用开发人员自己创建了</p>\n<p>2提供了执行SQL语句的能力</p>\n<p>3提供了循环SQL，把SQL的结果转换为Java对象，list集合的能力</p>\n<p>4提供了关闭资源的能力</p>\n<p>开发人员要做的是：提供SQL语句</p>\n<p>流程：开发人员提供SQL语句—&gt;mybatis处理SQL—–&gt;得到list集合或java对象(表中的数据)</p>\n<h2 id=\"第二章入门案例\"><a href=\"#第二章入门案例\" class=\"headerlink\" title=\"第二章入门案例\"></a>第二章入门案例</h2><h3 id=\"总体流程\"><a href=\"#总体流程\" class=\"headerlink\" title=\"总体流程\"></a>总体流程</h3><p><img src=\"/2021/08/04/mybatis-di-yi-ci-kuang-jia-cao-zuo/2.png\" alt=\"2\"></p>\n<h2 id=\"准备工作\"><a href=\"#准备工作\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h2><p><strong>1.在IDE中创建一个maven工程，补全路径下的resources包</strong></p>\n<p><img src=\"/2021/08/04/mybatis-di-yi-ci-kuang-jia-cao-zuo/1.png\" alt=\"1\"></p>\n<p><strong>2.进入mvnrepository搜索mybatis选择最新版本复制链接</strong></p>\n<p><img src=\"/2021/08/04/mybatis-di-yi-ci-kuang-jia-cao-zuo/3.png\" alt=\"3\"></p>\n<p><strong>进入ide找到pom，将上面复制的加入pom中</strong></p>\n<p><img src=\"/2021/08/04/mybatis-di-yi-ci-kuang-jia-cao-zuo/4.png\" alt=\"4\"></p>\n<p><strong>接着再在mvnrepository中搜索mysql下载mysql驱动</strong></p>\n<p><img src=\"/2021/08/04/mybatis-di-yi-ci-kuang-jia-cao-zuo/5.png\" alt=\"5\"></p>\n<p><strong>在pom中加入依赖</strong></p>\n<p><img src=\"/2021/08/04/mybatis-di-yi-ci-kuang-jia-cao-zuo/6.png\" alt=\"6\"></p>\n<p><strong>接着在pom中build下加入日志插件</strong></p>\n<p><img src=\"/2021/08/04/mybatis-di-yi-ci-kuang-jia-cao-zuo/7.png\" alt=\"7\"></p>\n<p>准备工作完成</p>\n<h2 id=\"案例实施\"><a href=\"#案例实施\" class=\"headerlink\" title=\"案例实施\"></a>案例实施</h2><p>1创建Student</p>\n<p><img src=\"/2021/08/04/mybatis-di-yi-ci-kuang-jia-cao-zuo/8.png\" alt=\"8\"></p>\n<p>alt+回车 选择图中这两个进入里面全选</p>\n<p><img src=\"/2021/08/04/mybatis-di-yi-ci-kuang-jia-cao-zuo/9.png\" alt=\"9\"></p>\n<p>接着创建个packeg包命名为dao在里面创建StudentDao.java接口和StudentDao.xml文件</p>\n<p><img src=\"/2021/08/04/mybatis-di-yi-ci-kuang-jia-cao-zuo/10.png\" alt=\"10\"></p>\n<p><img src=\"/2021/08/04/mybatis-di-yi-ci-kuang-jia-cao-zuo/11.png\" alt=\"11\"></p>\n<p>StudentDao接口中这么写</p>\n<p><img src=\"/2021/08/04/mybatis-di-yi-ci-kuang-jia-cao-zuo/12.png\" alt=\"12\"></p>\n<p>在reources中创建.xml表</p>\n<p><img src=\"/2021/08/04/mybatis-di-yi-ci-kuang-jia-cao-zuo/13.png\" alt=\"13\"></p>\n<p><img src=\"/2021/08/04/mybatis-di-yi-ci-kuang-jia-cao-zuo/14.png\" alt=\"14\"></p>\n<p><img src=\"/2021/08/04/mybatis-di-yi-ci-kuang-jia-cao-zuo/15.png\" alt=\"15\"></p>\n<p><img src=\"/2021/08/04/mybatis-di-yi-ci-kuang-jia-cao-zuo/16.png\" alt=\"16\"></p>\n<p>创建myapp.java来运行这个命令</p>\n<p><img src=\"/2021/08/04/mybatis-di-yi-ci-kuang-jia-cao-zuo/17.png\" alt=\"17\"></p>\n<h2 id=\"代码实现\"><a href=\"#代码实现\" class=\"headerlink\" title=\"代码实现\"></a>代码实现</h2><p><em><strong><u>Student</u></strong></em></p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">io<span class=\"token punctuation\">.</span>gaojian<span class=\"token punctuation\">.</span>bjpowernode<span class=\"token punctuation\">.</span>domain</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Student</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">//定义属性，要求是属性名和列名一致</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Integer</span> id<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> name<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> email<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Integer</span> age<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Integer</span> <span class=\"token function\">getId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> id<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setId</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Integer</span> id<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>id <span class=\"token operator\">=</span> id<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> name<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setName</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> name<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">getEmail</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> email<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setEmail</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> email<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>email <span class=\"token operator\">=</span> email<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Integer</span> <span class=\"token function\">getAge</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> age<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setAge</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Integer</span> age<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>age <span class=\"token operator\">=</span> age<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">\"Student&#123;\"</span> <span class=\"token operator\">+</span>\n                <span class=\"token string\">\"id=\"</span> <span class=\"token operator\">+</span> id <span class=\"token operator\">+</span>\n                <span class=\"token string\">\", name='\"</span> <span class=\"token operator\">+</span> name <span class=\"token operator\">+</span> <span class=\"token string\">'\\''</span> <span class=\"token operator\">+</span>\n                <span class=\"token string\">\", email='\"</span> <span class=\"token operator\">+</span> email <span class=\"token operator\">+</span> <span class=\"token string\">'\\''</span> <span class=\"token operator\">+</span>\n                <span class=\"token string\">\", age=\"</span> <span class=\"token operator\">+</span> age <span class=\"token operator\">+</span>\n                <span class=\"token string\">'&#125;'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><em><strong><u>Studentdao</u></strong></em></p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">import</span> <span class=\"token namespace\">io<span class=\"token punctuation\">.</span>gaojian<span class=\"token punctuation\">.</span>bjpowernode<span class=\"token punctuation\">.</span>domain<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Student</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">List</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">StudentDao</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Student</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">selectStudent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><em><strong><u>StudentDao.xml</u></strong></em></p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token operator\">&lt;</span><span class=\"token operator\">?</span>xml version<span class=\"token operator\">=</span><span class=\"token string\">\"1.0\"</span> encoding<span class=\"token operator\">=</span><span class=\"token string\">\"UTF-8\"</span> <span class=\"token operator\">?</span><span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span>DOCTYPE mapper\n        PUBLIC <span class=\"token string\">\"-//mybatis.org//DTD Mapper 3.0//EN\"</span>\n        <span class=\"token string\">\"http://mybatis.org/dtd/mybatis-3-mapper.dtd\"</span><span class=\"token operator\">></span>\n\n<span class=\"token operator\">&lt;</span>mapper namespace<span class=\"token operator\">=</span><span class=\"token string\">\"io.gaojian.bjpowernode.dao.StudentDao\"</span><span class=\"token operator\">></span>\n\n    <span class=\"token operator\">&lt;</span>select id<span class=\"token operator\">=</span><span class=\"token string\">\"selectStudent\"</span> resultType<span class=\"token operator\">=</span><span class=\"token string\">\"io.gaojian.bjpowernode.domain.Student\"</span><span class=\"token operator\">></span>\n        select id<span class=\"token punctuation\">,</span>name<span class=\"token punctuation\">,</span>email<span class=\"token punctuation\">,</span>age from student order by id<span class=\"token punctuation\">;</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>select<span class=\"token operator\">></span>\n\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>mapper<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><strong><u><em>Mybatis.xml</em></u></strong></p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token operator\">&lt;</span><span class=\"token operator\">?</span>xml version<span class=\"token operator\">=</span><span class=\"token string\">\"1.0\"</span> encoding<span class=\"token operator\">=</span><span class=\"token string\">\"UTF-8\"</span> <span class=\"token operator\">?</span><span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span>DOCTYPE configuration\n        PUBLIC <span class=\"token string\">\"-//mybatis.org//DTD Config 3.0//EN\"</span>\n        <span class=\"token string\">\"http://mybatis.org/dtd/mybatis-3-config.dtd\"</span><span class=\"token operator\">></span>\n<span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>configuration<span class=\"token punctuation\">></span></span>\n    \n    <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>settings<span class=\"token punctuation\">></span></span>\n        <span class=\"token operator\">&lt;</span>setting name<span class=\"token operator\">=</span><span class=\"token string\">\"logImpl\"</span> value<span class=\"token operator\">=</span><span class=\"token string\">\"STDOUT_LOGGING\"</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>settings<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>environments <span class=\"token keyword\">default</span><span class=\"token operator\">=</span><span class=\"token string\">\"bank\"</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>environment id<span class=\"token operator\">=</span><span class=\"token string\">\"bank\"</span><span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span>transactionManager type<span class=\"token operator\">=</span><span class=\"token string\">\"JDBC\"</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span>dataSource type<span class=\"token operator\">=</span><span class=\"token string\">\"POOLED\"</span><span class=\"token operator\">></span>\n                <span class=\"token operator\">&lt;</span>property name<span class=\"token operator\">=</span><span class=\"token string\">\"driver\"</span> value<span class=\"token operator\">=</span><span class=\"token string\">\"com.mysql.cj.jdbc.Driver\"</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\n                <span class=\"token operator\">&lt;</span>property name<span class=\"token operator\">=</span><span class=\"token string\">\"url\"</span> value<span class=\"token operator\">=</span><span class=\"token string\">\"jdbc:mysql://localhost:3306/bank\"</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\n                <span class=\"token operator\">&lt;</span>property name<span class=\"token operator\">=</span><span class=\"token string\">\"username\"</span> value<span class=\"token operator\">=</span><span class=\"token string\">\"root\"</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\n                <span class=\"token operator\">&lt;</span>property name<span class=\"token operator\">=</span><span class=\"token string\">\"password\"</span> value<span class=\"token operator\">=</span><span class=\"token string\">\"12345678\"</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>dataSource<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>environment<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>environments<span class=\"token operator\">></span>\n\n    <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>mappers<span class=\"token punctuation\">></span></span>\n        <span class=\"token operator\">&lt;</span>mapper resource<span class=\"token operator\">=</span><span class=\"token string\">\"io/gaojian/bjpowernode/dao/StudentsceDao.xml\"</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>mappers<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>configuration<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><strong><u><em>Pom.xml</em></u></strong></p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token operator\">&lt;</span><span class=\"token operator\">?</span>xml version<span class=\"token operator\">=</span><span class=\"token string\">\"1.0\"</span> encoding<span class=\"token operator\">=</span><span class=\"token string\">\"UTF-8\"</span><span class=\"token operator\">?</span><span class=\"token operator\">></span>\n\n<span class=\"token operator\">&lt;</span>project xmlns<span class=\"token operator\">=</span><span class=\"token string\">\"http://maven.apache.org/POM/4.0.0\"</span> xmlns<span class=\"token operator\">:</span>xsi<span class=\"token operator\">=</span><span class=\"token string\">\"http://www.w3.org/2001/XMLSchema-instance\"</span>\n         xsi<span class=\"token operator\">:</span>schemaLocation<span class=\"token operator\">=</span><span class=\"token string\">\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\"</span><span class=\"token operator\">></span>\n    <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>modelVersion<span class=\"token punctuation\">></span></span><span class=\"token number\">4.0</span><span class=\"token number\">.0</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>modelVersion<span class=\"token operator\">></span>\n\n    <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>groupId<span class=\"token punctuation\">></span></span>io<span class=\"token punctuation\">.</span>gaojian<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>groupId<span class=\"token operator\">></span>\n    <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>artifactId<span class=\"token punctuation\">></span></span>mybatis<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>artifactId<span class=\"token operator\">></span>\n    <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>version<span class=\"token punctuation\">></span></span><span class=\"token number\">1.0</span><span class=\"token operator\">-</span>SNAPSHOT<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>version<span class=\"token operator\">></span>\n\n    <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>name<span class=\"token punctuation\">></span></span>mybatis<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>name<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span> FIXME change it <span class=\"token keyword\">to</span> <span class=\"token namespace\">the</span> project's website <span class=\"token operator\">--</span><span class=\"token operator\">></span>\n    <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>url<span class=\"token punctuation\">></span></span>http<span class=\"token operator\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>www<span class=\"token punctuation\">.</span>example<span class=\"token punctuation\">.</span>com<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>url<span class=\"token operator\">></span>\n\n    <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>properties<span class=\"token punctuation\">></span></span>\n        <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>project<span class=\"token punctuation\">.</span>build<span class=\"token punctuation\">.</span>sourceEncoding<span class=\"token punctuation\">></span></span>UTF<span class=\"token operator\">-</span><span class=\"token number\">8</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>project<span class=\"token punctuation\">.</span>build<span class=\"token punctuation\">.</span>sourceEncoding<span class=\"token operator\">></span>\n        <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>maven<span class=\"token punctuation\">.</span>compiler<span class=\"token punctuation\">.</span>source<span class=\"token punctuation\">></span></span><span class=\"token number\">1.8</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>maven<span class=\"token punctuation\">.</span>compiler<span class=\"token punctuation\">.</span>source<span class=\"token operator\">></span>\n        <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>maven<span class=\"token punctuation\">.</span>compiler<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">></span></span><span class=\"token number\">1.8</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>maven<span class=\"token punctuation\">.</span>compiler<span class=\"token punctuation\">.</span>target<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>properties<span class=\"token operator\">></span>\n\n    <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>dependencies<span class=\"token punctuation\">></span></span>\n        <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>dependency<span class=\"token punctuation\">></span></span>\n            <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>groupId<span class=\"token punctuation\">></span></span>org<span class=\"token punctuation\">.</span>mybatis<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>groupId<span class=\"token operator\">></span>\n            <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>artifactId<span class=\"token punctuation\">></span></span>mybatis<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>artifactId<span class=\"token operator\">></span>\n            <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>version<span class=\"token punctuation\">></span></span><span class=\"token number\">3.5</span><span class=\"token number\">.7</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>version<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>dependency<span class=\"token operator\">></span>\n\n        <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>dependency<span class=\"token punctuation\">></span></span>\n            <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>groupId<span class=\"token punctuation\">></span></span>junit<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>groupId<span class=\"token operator\">></span>\n            <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>artifactId<span class=\"token punctuation\">></span></span>junit<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>artifactId<span class=\"token operator\">></span>\n            <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>version<span class=\"token punctuation\">></span></span><span class=\"token number\">4.11</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>version<span class=\"token operator\">></span>\n            <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>scope<span class=\"token punctuation\">></span></span>test<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>scope<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>dependency<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span>mysql驱动<span class=\"token operator\">--</span><span class=\"token operator\">></span>\n        <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>dependency<span class=\"token punctuation\">></span></span>\n            <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>groupId<span class=\"token punctuation\">></span></span>mysql<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>groupId<span class=\"token operator\">></span>\n            <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>artifactId<span class=\"token punctuation\">></span></span>mysql<span class=\"token operator\">-</span>connector<span class=\"token operator\">-</span>java<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>artifactId<span class=\"token operator\">></span>\n            <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>version<span class=\"token punctuation\">></span></span><span class=\"token number\">8.0</span><span class=\"token number\">.25</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>version<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>dependency<span class=\"token operator\">></span>\n\n\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>dependencies<span class=\"token operator\">></span>\n\n    <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>build<span class=\"token punctuation\">></span></span>\n        <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>resources<span class=\"token punctuation\">></span></span>\n            <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>resource<span class=\"token punctuation\">></span></span>\n                <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>directory<span class=\"token punctuation\">></span></span>src<span class=\"token operator\">/</span>main<span class=\"token operator\">/</span>java<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>directory<span class=\"token operator\">></span>\n                <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>includes<span class=\"token punctuation\">></span></span>\n                    <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>include<span class=\"token punctuation\">></span></span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token comment\">/*.properties&lt;/include>\n                    &lt;include>**/</span><span class=\"token operator\">*</span><span class=\"token punctuation\">.</span>xml<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>include<span class=\"token operator\">></span>\n                <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>includes<span class=\"token operator\">></span>\n                <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>filtering<span class=\"token punctuation\">></span></span><span class=\"token boolean\">false</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>filtering<span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>resource<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>resources<span class=\"token operator\">></span>\n\n        <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>pluginManagement<span class=\"token punctuation\">></span></span>\n            <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>plugins<span class=\"token punctuation\">></span></span>\n\n                <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>plugin<span class=\"token punctuation\">></span></span>\n                    <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>artifactId<span class=\"token punctuation\">></span></span>maven<span class=\"token operator\">-</span>clean<span class=\"token operator\">-</span>plugin<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>artifactId<span class=\"token operator\">></span>\n                    <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>version<span class=\"token punctuation\">></span></span><span class=\"token number\">3.1</span><span class=\"token number\">.0</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>version<span class=\"token operator\">></span>\n                <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>plugin<span class=\"token operator\">></span>\n\n                <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>plugin<span class=\"token punctuation\">></span></span>\n                    <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>artifactId<span class=\"token punctuation\">></span></span>maven<span class=\"token operator\">-</span>resources<span class=\"token operator\">-</span>plugin<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>artifactId<span class=\"token operator\">></span>\n                    <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>version<span class=\"token punctuation\">></span></span><span class=\"token number\">3.0</span><span class=\"token number\">.2</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>version<span class=\"token operator\">></span>\n                <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>plugin<span class=\"token operator\">></span>\n                <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>plugin<span class=\"token punctuation\">></span></span>\n                    <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>artifactId<span class=\"token punctuation\">></span></span>maven<span class=\"token operator\">-</span>compiler<span class=\"token operator\">-</span>plugin<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>artifactId<span class=\"token operator\">></span>\n                    <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>version<span class=\"token punctuation\">></span></span><span class=\"token number\">3.8</span><span class=\"token number\">.0</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>version<span class=\"token operator\">></span>\n                <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>plugin<span class=\"token operator\">></span>\n                <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>plugin<span class=\"token punctuation\">></span></span>\n                    <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>artifactId<span class=\"token punctuation\">></span></span>maven<span class=\"token operator\">-</span>surefire<span class=\"token operator\">-</span>plugin<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>artifactId<span class=\"token operator\">></span>\n                    <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>version<span class=\"token punctuation\">></span></span><span class=\"token number\">2.22</span><span class=\"token number\">.1</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>version<span class=\"token operator\">></span>\n                <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>plugin<span class=\"token operator\">></span>\n                <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>plugin<span class=\"token punctuation\">></span></span>\n                    <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>artifactId<span class=\"token punctuation\">></span></span>maven<span class=\"token operator\">-</span>jar<span class=\"token operator\">-</span>plugin<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>artifactId<span class=\"token operator\">></span>\n                    <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>version<span class=\"token punctuation\">></span></span><span class=\"token number\">3.0</span><span class=\"token number\">.2</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>version<span class=\"token operator\">></span>\n                <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>plugin<span class=\"token operator\">></span>\n                <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>plugin<span class=\"token punctuation\">></span></span>\n                    <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>artifactId<span class=\"token punctuation\">></span></span>maven<span class=\"token operator\">-</span>install<span class=\"token operator\">-</span>plugin<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>artifactId<span class=\"token operator\">></span>\n                    <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>version<span class=\"token punctuation\">></span></span><span class=\"token number\">2.5</span><span class=\"token number\">.2</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>version<span class=\"token operator\">></span>\n                <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>plugin<span class=\"token operator\">></span>\n                <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>plugin<span class=\"token punctuation\">></span></span>\n                    <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>artifactId<span class=\"token punctuation\">></span></span>maven<span class=\"token operator\">-</span>deploy<span class=\"token operator\">-</span>plugin<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>artifactId<span class=\"token operator\">></span>\n                    <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>version<span class=\"token punctuation\">></span></span><span class=\"token number\">2.8</span><span class=\"token number\">.2</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>version<span class=\"token operator\">></span>\n                <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>plugin<span class=\"token operator\">></span>\n                <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>plugin<span class=\"token punctuation\">></span></span>\n                    <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>artifactId<span class=\"token punctuation\">></span></span>maven<span class=\"token operator\">-</span>site<span class=\"token operator\">-</span>plugin<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>artifactId<span class=\"token operator\">></span>\n                    <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>version<span class=\"token punctuation\">></span></span><span class=\"token number\">3.7</span><span class=\"token number\">.1</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>version<span class=\"token operator\">></span>\n                <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>plugin<span class=\"token operator\">></span>\n                <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>plugin<span class=\"token punctuation\">></span></span>\n                    <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>artifactId<span class=\"token punctuation\">></span></span>maven<span class=\"token operator\">-</span>project<span class=\"token operator\">-</span>info<span class=\"token operator\">-</span>reports<span class=\"token operator\">-</span>plugin<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>artifactId<span class=\"token operator\">></span>\n                    <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>version<span class=\"token punctuation\">></span></span><span class=\"token number\">3.0</span><span class=\"token number\">.0</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>version<span class=\"token operator\">></span>\n                <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>plugin<span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>plugins<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>pluginManagement<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>build<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>project<span class=\"token operator\">></span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><strong><u><em>MyApp</em></u></strong></p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">import</span> <span class=\"token namespace\">io<span class=\"token punctuation\">.</span>gaojian<span class=\"token punctuation\">.</span>bjpowernode<span class=\"token punctuation\">.</span>domain<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Student</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>ibatis<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Resources</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>ibatis<span class=\"token punctuation\">.</span>session<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SqlSession</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>ibatis<span class=\"token punctuation\">.</span>session<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SqlSessionFactory</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>ibatis<span class=\"token punctuation\">.</span>session<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SqlSessionFactoryBuilder</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">IOException</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">InputStream</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">List</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MyApp</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">IOException</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">String</span> config <span class=\"token operator\">=</span> <span class=\"token string\">\"mybatis.xml\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">InputStream</span> in <span class=\"token operator\">=</span> <span class=\"token class-name\">Resources</span><span class=\"token punctuation\">.</span><span class=\"token function\">getResourceAsStream</span><span class=\"token punctuation\">(</span>config<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">SqlSessionFactoryBuilder</span> builder <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SqlSessionFactoryBuilder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">SqlSessionFactory</span> factory <span class=\"token operator\">=</span> builder<span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">SqlSession</span> sqlSession <span class=\"token operator\">=</span>factory<span class=\"token punctuation\">.</span><span class=\"token function\">openSession</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">String</span> sqlId <span class=\"token operator\">=</span> <span class=\"token string\">\"selectStudent\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Student</span><span class=\"token punctuation\">></span></span> studentList <span class=\"token operator\">=</span> sqlSession<span class=\"token punctuation\">.</span><span class=\"token function\">selectList</span><span class=\"token punctuation\">(</span>sqlId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        studentList<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span>student <span class=\"token operator\">-></span> <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>student<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        sqlSession<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"mybatis\"><a href=\"#mybatis\" class=\"headerlink\" title=\"mybatis\"></a>mybatis</h1><p>第一章框架概况</p>\n<h3 id=\"1-三层架构\"><a href=\"#1-三层架构\" class=\"headerlink\" title=\"1.三层架构\"></a>1.三层架构</h3><p>​    界面层：和用户打交道，接收用户的请求参数显示处理结果。（jsp，HTML，servlet）</p>\n<p>​    业务逻辑层：接收了界面层传递的数据，计算逻辑，调用数据库，获取数据</p>\n<p>​    数据访问层：就是访问数据库，执行对数据的查询，修改，删除等</p>\n<p>三层对应的包：</p>\n<p>​    界面层：controller包  （servlet）</p>\n<p>​    业务逻辑层：service包（XXXService类）</p>\n<p>​    数据访问层：dao包（XXXDao类）</p>\n<p>三层中类的交互</p>\n<p>​    用户使用界面层—&gt;业务逻辑层—-&gt;数据访问层(持久层)—-&gt;数据库(mysql)</p>\n<p>三层对应的处理框架</p>\n<p>​    界面层—–servlet—-&gt;springmvc(框架)</p>\n<p>​    业务逻辑层—–service类—-&gt;spring(框架)</p>\n<p>​    数据访问层—-dao类——&gt;mybatis(框架)</p>\n<h3 id=\"2-框架\"><a href=\"#2-框架\" class=\"headerlink\" title=\"2.框架\"></a>2.框架</h3><p>​    框架是一个舞台，是一个模板。定义好了一些功能，这些功能是可用的，可以加入项目中自己的功能，这些功能可以利用框架中写好的功能。</p>\n<p>​    框架是针对某一领域有效的。特长是某一方面不是全能的，比如mybatis做数据库强但是不能做其他的。</p>\n<p>mybatis框架</p>\n<p>​    1sql mapper ：sql映射</p>\n<p>​        可以把数据库中的一行数据映射为一个java对象</p>\n<p>​    2。Data Access Objects(DAOs):数据访问，对数据库执行增删改查</p>\n<h3 id=\"3-功能\"><a href=\"#3-功能\" class=\"headerlink\" title=\"3.功能\"></a>3.功能</h3><p>mybatis提供了哪些功能：<br>1提供了创建Connection,Statement,ResultSet的能力，不用开发人员自己创建了</p>\n<p>2提供了执行SQL语句的能力</p>\n<p>3提供了循环SQL，把SQL的结果转换为Java对象，list集合的能力</p>\n<p>4提供了关闭资源的能力</p>\n<p>开发人员要做的是：提供SQL语句</p>\n<p>流程：开发人员提供SQL语句—&gt;mybatis处理SQL—–&gt;得到list集合或java对象(表中的数据)</p>\n<h2 id=\"第二章入门案例\"><a href=\"#第二章入门案例\" class=\"headerlink\" title=\"第二章入门案例\"></a>第二章入门案例</h2><h3 id=\"总体流程\"><a href=\"#总体流程\" class=\"headerlink\" title=\"总体流程\"></a>总体流程</h3><p><img src=\"/2021/08/04/mybatis-di-yi-ci-kuang-jia-cao-zuo/2.png\" alt=\"2\"></p>\n<h2 id=\"准备工作\"><a href=\"#准备工作\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h2><p><strong>1.在IDE中创建一个maven工程，补全路径下的resources包</strong></p>\n<p><img src=\"/2021/08/04/mybatis-di-yi-ci-kuang-jia-cao-zuo/1.png\" alt=\"1\"></p>\n<p><strong>2.进入mvnrepository搜索mybatis选择最新版本复制链接</strong></p>\n<p><img src=\"/2021/08/04/mybatis-di-yi-ci-kuang-jia-cao-zuo/3.png\" alt=\"3\"></p>\n<p><strong>进入ide找到pom，将上面复制的加入pom中</strong></p>\n<p><img src=\"/2021/08/04/mybatis-di-yi-ci-kuang-jia-cao-zuo/4.png\" alt=\"4\"></p>\n<p><strong>接着再在mvnrepository中搜索mysql下载mysql驱动</strong></p>\n<p><img src=\"/2021/08/04/mybatis-di-yi-ci-kuang-jia-cao-zuo/5.png\" alt=\"5\"></p>\n<p><strong>在pom中加入依赖</strong></p>\n<p><img src=\"/2021/08/04/mybatis-di-yi-ci-kuang-jia-cao-zuo/6.png\" alt=\"6\"></p>\n<p><strong>接着在pom中build下加入日志插件</strong></p>\n<p><img src=\"/2021/08/04/mybatis-di-yi-ci-kuang-jia-cao-zuo/7.png\" alt=\"7\"></p>\n<p>准备工作完成</p>\n<h2 id=\"案例实施\"><a href=\"#案例实施\" class=\"headerlink\" title=\"案例实施\"></a>案例实施</h2><p>1创建Student</p>\n<p><img src=\"/2021/08/04/mybatis-di-yi-ci-kuang-jia-cao-zuo/8.png\" alt=\"8\"></p>\n<p>alt+回车 选择图中这两个进入里面全选</p>\n<p><img src=\"/2021/08/04/mybatis-di-yi-ci-kuang-jia-cao-zuo/9.png\" alt=\"9\"></p>\n<p>接着创建个packeg包命名为dao在里面创建StudentDao.java接口和StudentDao.xml文件</p>\n<p><img src=\"/2021/08/04/mybatis-di-yi-ci-kuang-jia-cao-zuo/10.png\" alt=\"10\"></p>\n<p><img src=\"/2021/08/04/mybatis-di-yi-ci-kuang-jia-cao-zuo/11.png\" alt=\"11\"></p>\n<p>StudentDao接口中这么写</p>\n<p><img src=\"/2021/08/04/mybatis-di-yi-ci-kuang-jia-cao-zuo/12.png\" alt=\"12\"></p>\n<p>在reources中创建.xml表</p>\n<p><img src=\"/2021/08/04/mybatis-di-yi-ci-kuang-jia-cao-zuo/13.png\" alt=\"13\"></p>\n<p><img src=\"/2021/08/04/mybatis-di-yi-ci-kuang-jia-cao-zuo/14.png\" alt=\"14\"></p>\n<p><img src=\"/2021/08/04/mybatis-di-yi-ci-kuang-jia-cao-zuo/15.png\" alt=\"15\"></p>\n<p><img src=\"/2021/08/04/mybatis-di-yi-ci-kuang-jia-cao-zuo/16.png\" alt=\"16\"></p>\n<p>创建myapp.java来运行这个命令</p>\n<p><img src=\"/2021/08/04/mybatis-di-yi-ci-kuang-jia-cao-zuo/17.png\" alt=\"17\"></p>\n<h2 id=\"代码实现\"><a href=\"#代码实现\" class=\"headerlink\" title=\"代码实现\"></a>代码实现</h2><p><em><strong><u>Student</u></strong></em></p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">io<span class=\"token punctuation\">.</span>gaojian<span class=\"token punctuation\">.</span>bjpowernode<span class=\"token punctuation\">.</span>domain</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Student</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">//定义属性，要求是属性名和列名一致</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Integer</span> id<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> name<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> email<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Integer</span> age<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Integer</span> <span class=\"token function\">getId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> id<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setId</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Integer</span> id<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>id <span class=\"token operator\">=</span> id<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> name<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setName</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> name<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">getEmail</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> email<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setEmail</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> email<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>email <span class=\"token operator\">=</span> email<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Integer</span> <span class=\"token function\">getAge</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> age<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setAge</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Integer</span> age<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>age <span class=\"token operator\">=</span> age<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">\"Student&#123;\"</span> <span class=\"token operator\">+</span>\n                <span class=\"token string\">\"id=\"</span> <span class=\"token operator\">+</span> id <span class=\"token operator\">+</span>\n                <span class=\"token string\">\", name='\"</span> <span class=\"token operator\">+</span> name <span class=\"token operator\">+</span> <span class=\"token string\">'\\''</span> <span class=\"token operator\">+</span>\n                <span class=\"token string\">\", email='\"</span> <span class=\"token operator\">+</span> email <span class=\"token operator\">+</span> <span class=\"token string\">'\\''</span> <span class=\"token operator\">+</span>\n                <span class=\"token string\">\", age=\"</span> <span class=\"token operator\">+</span> age <span class=\"token operator\">+</span>\n                <span class=\"token string\">'&#125;'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><em><strong><u>Studentdao</u></strong></em></p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">import</span> <span class=\"token namespace\">io<span class=\"token punctuation\">.</span>gaojian<span class=\"token punctuation\">.</span>bjpowernode<span class=\"token punctuation\">.</span>domain<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Student</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">List</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">StudentDao</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Student</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">selectStudent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><em><strong><u>StudentDao.xml</u></strong></em></p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token operator\">&lt;</span><span class=\"token operator\">?</span>xml version<span class=\"token operator\">=</span><span class=\"token string\">\"1.0\"</span> encoding<span class=\"token operator\">=</span><span class=\"token string\">\"UTF-8\"</span> <span class=\"token operator\">?</span><span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span>DOCTYPE mapper\n        PUBLIC <span class=\"token string\">\"-//mybatis.org//DTD Mapper 3.0//EN\"</span>\n        <span class=\"token string\">\"http://mybatis.org/dtd/mybatis-3-mapper.dtd\"</span><span class=\"token operator\">></span>\n\n<span class=\"token operator\">&lt;</span>mapper namespace<span class=\"token operator\">=</span><span class=\"token string\">\"io.gaojian.bjpowernode.dao.StudentDao\"</span><span class=\"token operator\">></span>\n\n    <span class=\"token operator\">&lt;</span>select id<span class=\"token operator\">=</span><span class=\"token string\">\"selectStudent\"</span> resultType<span class=\"token operator\">=</span><span class=\"token string\">\"io.gaojian.bjpowernode.domain.Student\"</span><span class=\"token operator\">></span>\n        select id<span class=\"token punctuation\">,</span>name<span class=\"token punctuation\">,</span>email<span class=\"token punctuation\">,</span>age from student order by id<span class=\"token punctuation\">;</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>select<span class=\"token operator\">></span>\n\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>mapper<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><strong><u><em>Mybatis.xml</em></u></strong></p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token operator\">&lt;</span><span class=\"token operator\">?</span>xml version<span class=\"token operator\">=</span><span class=\"token string\">\"1.0\"</span> encoding<span class=\"token operator\">=</span><span class=\"token string\">\"UTF-8\"</span> <span class=\"token operator\">?</span><span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span>DOCTYPE configuration\n        PUBLIC <span class=\"token string\">\"-//mybatis.org//DTD Config 3.0//EN\"</span>\n        <span class=\"token string\">\"http://mybatis.org/dtd/mybatis-3-config.dtd\"</span><span class=\"token operator\">></span>\n<span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>configuration<span class=\"token punctuation\">></span></span>\n    \n    <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>settings<span class=\"token punctuation\">></span></span>\n        <span class=\"token operator\">&lt;</span>setting name<span class=\"token operator\">=</span><span class=\"token string\">\"logImpl\"</span> value<span class=\"token operator\">=</span><span class=\"token string\">\"STDOUT_LOGGING\"</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>settings<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>environments <span class=\"token keyword\">default</span><span class=\"token operator\">=</span><span class=\"token string\">\"bank\"</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>environment id<span class=\"token operator\">=</span><span class=\"token string\">\"bank\"</span><span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span>transactionManager type<span class=\"token operator\">=</span><span class=\"token string\">\"JDBC\"</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span>dataSource type<span class=\"token operator\">=</span><span class=\"token string\">\"POOLED\"</span><span class=\"token operator\">></span>\n                <span class=\"token operator\">&lt;</span>property name<span class=\"token operator\">=</span><span class=\"token string\">\"driver\"</span> value<span class=\"token operator\">=</span><span class=\"token string\">\"com.mysql.cj.jdbc.Driver\"</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\n                <span class=\"token operator\">&lt;</span>property name<span class=\"token operator\">=</span><span class=\"token string\">\"url\"</span> value<span class=\"token operator\">=</span><span class=\"token string\">\"jdbc:mysql://localhost:3306/bank\"</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\n                <span class=\"token operator\">&lt;</span>property name<span class=\"token operator\">=</span><span class=\"token string\">\"username\"</span> value<span class=\"token operator\">=</span><span class=\"token string\">\"root\"</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\n                <span class=\"token operator\">&lt;</span>property name<span class=\"token operator\">=</span><span class=\"token string\">\"password\"</span> value<span class=\"token operator\">=</span><span class=\"token string\">\"12345678\"</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>dataSource<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>environment<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>environments<span class=\"token operator\">></span>\n\n    <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>mappers<span class=\"token punctuation\">></span></span>\n        <span class=\"token operator\">&lt;</span>mapper resource<span class=\"token operator\">=</span><span class=\"token string\">\"io/gaojian/bjpowernode/dao/StudentsceDao.xml\"</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>mappers<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>configuration<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><strong><u><em>Pom.xml</em></u></strong></p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token operator\">&lt;</span><span class=\"token operator\">?</span>xml version<span class=\"token operator\">=</span><span class=\"token string\">\"1.0\"</span> encoding<span class=\"token operator\">=</span><span class=\"token string\">\"UTF-8\"</span><span class=\"token operator\">?</span><span class=\"token operator\">></span>\n\n<span class=\"token operator\">&lt;</span>project xmlns<span class=\"token operator\">=</span><span class=\"token string\">\"http://maven.apache.org/POM/4.0.0\"</span> xmlns<span class=\"token operator\">:</span>xsi<span class=\"token operator\">=</span><span class=\"token string\">\"http://www.w3.org/2001/XMLSchema-instance\"</span>\n         xsi<span class=\"token operator\">:</span>schemaLocation<span class=\"token operator\">=</span><span class=\"token string\">\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\"</span><span class=\"token operator\">></span>\n    <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>modelVersion<span class=\"token punctuation\">></span></span><span class=\"token number\">4.0</span><span class=\"token number\">.0</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>modelVersion<span class=\"token operator\">></span>\n\n    <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>groupId<span class=\"token punctuation\">></span></span>io<span class=\"token punctuation\">.</span>gaojian<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>groupId<span class=\"token operator\">></span>\n    <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>artifactId<span class=\"token punctuation\">></span></span>mybatis<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>artifactId<span class=\"token operator\">></span>\n    <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>version<span class=\"token punctuation\">></span></span><span class=\"token number\">1.0</span><span class=\"token operator\">-</span>SNAPSHOT<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>version<span class=\"token operator\">></span>\n\n    <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>name<span class=\"token punctuation\">></span></span>mybatis<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>name<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span> FIXME change it <span class=\"token keyword\">to</span> <span class=\"token namespace\">the</span> project's website <span class=\"token operator\">--</span><span class=\"token operator\">></span>\n    <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>url<span class=\"token punctuation\">></span></span>http<span class=\"token operator\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>www<span class=\"token punctuation\">.</span>example<span class=\"token punctuation\">.</span>com<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>url<span class=\"token operator\">></span>\n\n    <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>properties<span class=\"token punctuation\">></span></span>\n        <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>project<span class=\"token punctuation\">.</span>build<span class=\"token punctuation\">.</span>sourceEncoding<span class=\"token punctuation\">></span></span>UTF<span class=\"token operator\">-</span><span class=\"token number\">8</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>project<span class=\"token punctuation\">.</span>build<span class=\"token punctuation\">.</span>sourceEncoding<span class=\"token operator\">></span>\n        <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>maven<span class=\"token punctuation\">.</span>compiler<span class=\"token punctuation\">.</span>source<span class=\"token punctuation\">></span></span><span class=\"token number\">1.8</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>maven<span class=\"token punctuation\">.</span>compiler<span class=\"token punctuation\">.</span>source<span class=\"token operator\">></span>\n        <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>maven<span class=\"token punctuation\">.</span>compiler<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">></span></span><span class=\"token number\">1.8</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>maven<span class=\"token punctuation\">.</span>compiler<span class=\"token punctuation\">.</span>target<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>properties<span class=\"token operator\">></span>\n\n    <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>dependencies<span class=\"token punctuation\">></span></span>\n        <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>dependency<span class=\"token punctuation\">></span></span>\n            <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>groupId<span class=\"token punctuation\">></span></span>org<span class=\"token punctuation\">.</span>mybatis<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>groupId<span class=\"token operator\">></span>\n            <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>artifactId<span class=\"token punctuation\">></span></span>mybatis<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>artifactId<span class=\"token operator\">></span>\n            <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>version<span class=\"token punctuation\">></span></span><span class=\"token number\">3.5</span><span class=\"token number\">.7</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>version<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>dependency<span class=\"token operator\">></span>\n\n        <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>dependency<span class=\"token punctuation\">></span></span>\n            <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>groupId<span class=\"token punctuation\">></span></span>junit<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>groupId<span class=\"token operator\">></span>\n            <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>artifactId<span class=\"token punctuation\">></span></span>junit<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>artifactId<span class=\"token operator\">></span>\n            <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>version<span class=\"token punctuation\">></span></span><span class=\"token number\">4.11</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>version<span class=\"token operator\">></span>\n            <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>scope<span class=\"token punctuation\">></span></span>test<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>scope<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>dependency<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span>mysql驱动<span class=\"token operator\">--</span><span class=\"token operator\">></span>\n        <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>dependency<span class=\"token punctuation\">></span></span>\n            <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>groupId<span class=\"token punctuation\">></span></span>mysql<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>groupId<span class=\"token operator\">></span>\n            <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>artifactId<span class=\"token punctuation\">></span></span>mysql<span class=\"token operator\">-</span>connector<span class=\"token operator\">-</span>java<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>artifactId<span class=\"token operator\">></span>\n            <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>version<span class=\"token punctuation\">></span></span><span class=\"token number\">8.0</span><span class=\"token number\">.25</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>version<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>dependency<span class=\"token operator\">></span>\n\n\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>dependencies<span class=\"token operator\">></span>\n\n    <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>build<span class=\"token punctuation\">></span></span>\n        <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>resources<span class=\"token punctuation\">></span></span>\n            <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>resource<span class=\"token punctuation\">></span></span>\n                <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>directory<span class=\"token punctuation\">></span></span>src<span class=\"token operator\">/</span>main<span class=\"token operator\">/</span>java<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>directory<span class=\"token operator\">></span>\n                <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>includes<span class=\"token punctuation\">></span></span>\n                    <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>include<span class=\"token punctuation\">></span></span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token comment\">/*.properties&lt;/include>\n                    &lt;include>**/</span><span class=\"token operator\">*</span><span class=\"token punctuation\">.</span>xml<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>include<span class=\"token operator\">></span>\n                <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>includes<span class=\"token operator\">></span>\n                <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>filtering<span class=\"token punctuation\">></span></span><span class=\"token boolean\">false</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>filtering<span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>resource<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>resources<span class=\"token operator\">></span>\n\n        <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>pluginManagement<span class=\"token punctuation\">></span></span>\n            <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>plugins<span class=\"token punctuation\">></span></span>\n\n                <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>plugin<span class=\"token punctuation\">></span></span>\n                    <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>artifactId<span class=\"token punctuation\">></span></span>maven<span class=\"token operator\">-</span>clean<span class=\"token operator\">-</span>plugin<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>artifactId<span class=\"token operator\">></span>\n                    <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>version<span class=\"token punctuation\">></span></span><span class=\"token number\">3.1</span><span class=\"token number\">.0</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>version<span class=\"token operator\">></span>\n                <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>plugin<span class=\"token operator\">></span>\n\n                <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>plugin<span class=\"token punctuation\">></span></span>\n                    <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>artifactId<span class=\"token punctuation\">></span></span>maven<span class=\"token operator\">-</span>resources<span class=\"token operator\">-</span>plugin<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>artifactId<span class=\"token operator\">></span>\n                    <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>version<span class=\"token punctuation\">></span></span><span class=\"token number\">3.0</span><span class=\"token number\">.2</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>version<span class=\"token operator\">></span>\n                <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>plugin<span class=\"token operator\">></span>\n                <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>plugin<span class=\"token punctuation\">></span></span>\n                    <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>artifactId<span class=\"token punctuation\">></span></span>maven<span class=\"token operator\">-</span>compiler<span class=\"token operator\">-</span>plugin<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>artifactId<span class=\"token operator\">></span>\n                    <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>version<span class=\"token punctuation\">></span></span><span class=\"token number\">3.8</span><span class=\"token number\">.0</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>version<span class=\"token operator\">></span>\n                <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>plugin<span class=\"token operator\">></span>\n                <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>plugin<span class=\"token punctuation\">></span></span>\n                    <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>artifactId<span class=\"token punctuation\">></span></span>maven<span class=\"token operator\">-</span>surefire<span class=\"token operator\">-</span>plugin<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>artifactId<span class=\"token operator\">></span>\n                    <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>version<span class=\"token punctuation\">></span></span><span class=\"token number\">2.22</span><span class=\"token number\">.1</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>version<span class=\"token operator\">></span>\n                <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>plugin<span class=\"token operator\">></span>\n                <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>plugin<span class=\"token punctuation\">></span></span>\n                    <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>artifactId<span class=\"token punctuation\">></span></span>maven<span class=\"token operator\">-</span>jar<span class=\"token operator\">-</span>plugin<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>artifactId<span class=\"token operator\">></span>\n                    <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>version<span class=\"token punctuation\">></span></span><span class=\"token number\">3.0</span><span class=\"token number\">.2</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>version<span class=\"token operator\">></span>\n                <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>plugin<span class=\"token operator\">></span>\n                <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>plugin<span class=\"token punctuation\">></span></span>\n                    <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>artifactId<span class=\"token punctuation\">></span></span>maven<span class=\"token operator\">-</span>install<span class=\"token operator\">-</span>plugin<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>artifactId<span class=\"token operator\">></span>\n                    <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>version<span class=\"token punctuation\">></span></span><span class=\"token number\">2.5</span><span class=\"token number\">.2</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>version<span class=\"token operator\">></span>\n                <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>plugin<span class=\"token operator\">></span>\n                <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>plugin<span class=\"token punctuation\">></span></span>\n                    <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>artifactId<span class=\"token punctuation\">></span></span>maven<span class=\"token operator\">-</span>deploy<span class=\"token operator\">-</span>plugin<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>artifactId<span class=\"token operator\">></span>\n                    <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>version<span class=\"token punctuation\">></span></span><span class=\"token number\">2.8</span><span class=\"token number\">.2</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>version<span class=\"token operator\">></span>\n                <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>plugin<span class=\"token operator\">></span>\n                <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>plugin<span class=\"token punctuation\">></span></span>\n                    <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>artifactId<span class=\"token punctuation\">></span></span>maven<span class=\"token operator\">-</span>site<span class=\"token operator\">-</span>plugin<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>artifactId<span class=\"token operator\">></span>\n                    <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>version<span class=\"token punctuation\">></span></span><span class=\"token number\">3.7</span><span class=\"token number\">.1</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>version<span class=\"token operator\">></span>\n                <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>plugin<span class=\"token operator\">></span>\n                <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>plugin<span class=\"token punctuation\">></span></span>\n                    <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>artifactId<span class=\"token punctuation\">></span></span>maven<span class=\"token operator\">-</span>project<span class=\"token operator\">-</span>info<span class=\"token operator\">-</span>reports<span class=\"token operator\">-</span>plugin<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>artifactId<span class=\"token operator\">></span>\n                    <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>version<span class=\"token punctuation\">></span></span><span class=\"token number\">3.0</span><span class=\"token number\">.0</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>version<span class=\"token operator\">></span>\n                <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>plugin<span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>plugins<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>pluginManagement<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>build<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>project<span class=\"token operator\">></span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><strong><u><em>MyApp</em></u></strong></p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">import</span> <span class=\"token namespace\">io<span class=\"token punctuation\">.</span>gaojian<span class=\"token punctuation\">.</span>bjpowernode<span class=\"token punctuation\">.</span>domain<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Student</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>ibatis<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Resources</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>ibatis<span class=\"token punctuation\">.</span>session<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SqlSession</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>ibatis<span class=\"token punctuation\">.</span>session<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SqlSessionFactory</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>ibatis<span class=\"token punctuation\">.</span>session<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SqlSessionFactoryBuilder</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">IOException</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">InputStream</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">List</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MyApp</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">IOException</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">String</span> config <span class=\"token operator\">=</span> <span class=\"token string\">\"mybatis.xml\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">InputStream</span> in <span class=\"token operator\">=</span> <span class=\"token class-name\">Resources</span><span class=\"token punctuation\">.</span><span class=\"token function\">getResourceAsStream</span><span class=\"token punctuation\">(</span>config<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">SqlSessionFactoryBuilder</span> builder <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SqlSessionFactoryBuilder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">SqlSessionFactory</span> factory <span class=\"token operator\">=</span> builder<span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">SqlSession</span> sqlSession <span class=\"token operator\">=</span>factory<span class=\"token punctuation\">.</span><span class=\"token function\">openSession</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">String</span> sqlId <span class=\"token operator\">=</span> <span class=\"token string\">\"selectStudent\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Student</span><span class=\"token punctuation\">></span></span> studentList <span class=\"token operator\">=</span> sqlSession<span class=\"token punctuation\">.</span><span class=\"token function\">selectList</span><span class=\"token punctuation\">(</span>sqlId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        studentList<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span>student <span class=\"token operator\">-></span> <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>student<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        sqlSession<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n"},{"title":"redis下载与安装","top":false,"cover":false,"toc":true,"mathjax":true,"date":"2021-08-06T12:34:40.000Z","password":null,"summary":null,"_content":"\n# Redis安装使用流程\n\n百度搜索install redis\n\n![](1.png)\n\n在终端新建文件夹执行以下命令\n\n```java\nwget http://download.redis.io/redis-stable.tar.gz\ntar xvzf redis-stable.tar.gz\ncd redis-stable\nmake\n```\n\n然后cd 到bin的前一个目录复制路径配置环境变量\n\n![](2.png)\n\n进入~/.zshrc中将根目录复制到最后。环境变量配置完成\n\n百度进入mvnrepository搜索jedis下载redis依赖jar包\n\n加入新建工程pom.xml中\n\n![](3.png)\n\n\n\n配置环境变量： vim ~/.zshrc\n\n配置完运行文件：source ~/.zshrc\n\n查看文件程序在哪里：which redis-server\n\nLsof -i:端口号  ===查看端口运行程序\n\nifconfig    查看本机IP地址在en0下\n\n\n\n\n\n","source":"_posts/redis下载与安装.md","raw":"---\ntitle: redis下载与安装\ntop: false\ncover: false\ntoc: true\nmathjax: true\ndate: 2021-08-06 20:34:40\npassword:\nsummary:\ntags: \ncategories: redis\n---\n\n# Redis安装使用流程\n\n百度搜索install redis\n\n![](1.png)\n\n在终端新建文件夹执行以下命令\n\n```java\nwget http://download.redis.io/redis-stable.tar.gz\ntar xvzf redis-stable.tar.gz\ncd redis-stable\nmake\n```\n\n然后cd 到bin的前一个目录复制路径配置环境变量\n\n![](2.png)\n\n进入~/.zshrc中将根目录复制到最后。环境变量配置完成\n\n百度进入mvnrepository搜索jedis下载redis依赖jar包\n\n加入新建工程pom.xml中\n\n![](3.png)\n\n\n\n配置环境变量： vim ~/.zshrc\n\n配置完运行文件：source ~/.zshrc\n\n查看文件程序在哪里：which redis-server\n\nLsof -i:端口号  ===查看端口运行程序\n\nifconfig    查看本机IP地址在en0下\n\n\n\n\n\n","slug":"redis下载与安装","published":1,"updated":"2022-11-21T11:55:43.675Z","comments":1,"layout":"post","photos":[],"link":"","_id":"claqy94km0017bklgbv3ke7zm","content":"<h1 id=\"Redis安装使用流程\"><a href=\"#Redis安装使用流程\" class=\"headerlink\" title=\"Redis安装使用流程\"></a>Redis安装使用流程</h1><p>百度搜索install redis</p>\n<p><img src=\"/2021/08/06/redis-xia-zai-yu-an-zhuang/1.png\"></p>\n<p>在终端新建文件夹执行以下命令</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">wget http<span class=\"token operator\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>download<span class=\"token punctuation\">.</span>redis<span class=\"token punctuation\">.</span>io<span class=\"token operator\">/</span>redis<span class=\"token operator\">-</span>stable<span class=\"token punctuation\">.</span>tar<span class=\"token punctuation\">.</span>gz\ntar xvzf redis<span class=\"token operator\">-</span>stable<span class=\"token punctuation\">.</span>tar<span class=\"token punctuation\">.</span>gz\ncd redis<span class=\"token operator\">-</span>stable\nmake<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>然后cd 到bin的前一个目录复制路径配置环境变量</p>\n<p><img src=\"/2021/08/06/redis-xia-zai-yu-an-zhuang/2.png\"></p>\n<p>进入~/.zshrc中将根目录复制到最后。环境变量配置完成</p>\n<p>百度进入mvnrepository搜索jedis下载redis依赖jar包</p>\n<p>加入新建工程pom.xml中</p>\n<p><img src=\"/2021/08/06/redis-xia-zai-yu-an-zhuang/3.png\"></p>\n<p>配置环境变量： vim ~/.zshrc</p>\n<p>配置完运行文件：source ~/.zshrc</p>\n<p>查看文件程序在哪里：which redis-server</p>\n<p>Lsof -i:端口号  ===查看端口运行程序</p>\n<p>ifconfig    查看本机IP地址在en0下</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Redis安装使用流程\"><a href=\"#Redis安装使用流程\" class=\"headerlink\" title=\"Redis安装使用流程\"></a>Redis安装使用流程</h1><p>百度搜索install redis</p>\n<p><img src=\"/2021/08/06/redis-xia-zai-yu-an-zhuang/1.png\"></p>\n<p>在终端新建文件夹执行以下命令</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">wget http<span class=\"token operator\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>download<span class=\"token punctuation\">.</span>redis<span class=\"token punctuation\">.</span>io<span class=\"token operator\">/</span>redis<span class=\"token operator\">-</span>stable<span class=\"token punctuation\">.</span>tar<span class=\"token punctuation\">.</span>gz\ntar xvzf redis<span class=\"token operator\">-</span>stable<span class=\"token punctuation\">.</span>tar<span class=\"token punctuation\">.</span>gz\ncd redis<span class=\"token operator\">-</span>stable\nmake<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>然后cd 到bin的前一个目录复制路径配置环境变量</p>\n<p><img src=\"/2021/08/06/redis-xia-zai-yu-an-zhuang/2.png\"></p>\n<p>进入~/.zshrc中将根目录复制到最后。环境变量配置完成</p>\n<p>百度进入mvnrepository搜索jedis下载redis依赖jar包</p>\n<p>加入新建工程pom.xml中</p>\n<p><img src=\"/2021/08/06/redis-xia-zai-yu-an-zhuang/3.png\"></p>\n<p>配置环境变量： vim ~/.zshrc</p>\n<p>配置完运行文件：source ~/.zshrc</p>\n<p>查看文件程序在哪里：which redis-server</p>\n<p>Lsof -i:端口号  ===查看端口运行程序</p>\n<p>ifconfig    查看本机IP地址在en0下</p>\n"},{"title":"个人页面云服务","top":false,"cover":false,"toc":true,"mathjax":true,"date":"2021-08-21T15:22:36.000Z","password":null,"summary":null,"_content":"\n# 任务名称：个人主页项目\n\n## 项目部署与云服务搭建\n\n### 1.购买阿里云宝塔服务器\n\nhttps://www.aliyun.com/minisite/goods?userCode=k6ji3ksd\n\n2.https://account.aliyun.com/login/login.htm?oauth_callback=https%3A%2F%2Fswas.console.aliyun.com%2F&lang=zh#/servers\n\n### 登陆阿里云\n\n在服务器列表，点击对应服务器详情\n\n![1](1.png)\n\n会来到如图所示的服务器详情页\n\n![2](2.png)\n\n然后建立连接\n\n![3](3.png)\n\n输入网址然后输入上图得到的账号密码\n\n![4](4.png)\n\n进入后点击软件商店搜索下载应用\n\n![5](5.png)\n\n进入tomcat设置界面修改端口号\n\n![6](6.png)\n\n之后点击服务重启tomcat即可\n\n### 点击文件找到tomcat文件夹点击进入\n\n![7](7.png)\n\n点击进入ROOT中删除所有文件\n\n![7](8.png)\n\n进入https://github.com/gaojiancoder/-/tree/main将相关文件下载下来\n\n![9](9.png)\n\n除了不要的文件夹其余全部加入ROOT文件夹中\n\n![10](10.png)\n\n进入db.properties中修改内容\n\n![11](11.png)\n\n将数据名和用户名密码写入db.properties中\n\n![12](12.png)\n\n输入网址成功操作\n\n![13](13.png)\n\n创建成功\n\n","source":"_posts/个人页面云服务.md","raw":"---\ntitle: 个人页面云服务\ntop: false\ncover: false\ntoc: true\nmathjax: true\ndate: 2021-08-21 23:22:36\npassword:\nsummary:\ntags: notes\ncategories:\n---\n\n# 任务名称：个人主页项目\n\n## 项目部署与云服务搭建\n\n### 1.购买阿里云宝塔服务器\n\nhttps://www.aliyun.com/minisite/goods?userCode=k6ji3ksd\n\n2.https://account.aliyun.com/login/login.htm?oauth_callback=https%3A%2F%2Fswas.console.aliyun.com%2F&lang=zh#/servers\n\n### 登陆阿里云\n\n在服务器列表，点击对应服务器详情\n\n![1](1.png)\n\n会来到如图所示的服务器详情页\n\n![2](2.png)\n\n然后建立连接\n\n![3](3.png)\n\n输入网址然后输入上图得到的账号密码\n\n![4](4.png)\n\n进入后点击软件商店搜索下载应用\n\n![5](5.png)\n\n进入tomcat设置界面修改端口号\n\n![6](6.png)\n\n之后点击服务重启tomcat即可\n\n### 点击文件找到tomcat文件夹点击进入\n\n![7](7.png)\n\n点击进入ROOT中删除所有文件\n\n![7](8.png)\n\n进入https://github.com/gaojiancoder/-/tree/main将相关文件下载下来\n\n![9](9.png)\n\n除了不要的文件夹其余全部加入ROOT文件夹中\n\n![10](10.png)\n\n进入db.properties中修改内容\n\n![11](11.png)\n\n将数据名和用户名密码写入db.properties中\n\n![12](12.png)\n\n输入网址成功操作\n\n![13](13.png)\n\n创建成功\n\n","slug":"个人页面云服务","published":1,"updated":"2022-11-21T11:55:43.695Z","comments":1,"layout":"post","photos":[],"link":"","_id":"claqy94kn001bbklgd15dh12w","content":"<h1 id=\"任务名称：个人主页项目\"><a href=\"#任务名称：个人主页项目\" class=\"headerlink\" title=\"任务名称：个人主页项目\"></a>任务名称：个人主页项目</h1><h2 id=\"项目部署与云服务搭建\"><a href=\"#项目部署与云服务搭建\" class=\"headerlink\" title=\"项目部署与云服务搭建\"></a>项目部署与云服务搭建</h2><h3 id=\"1-购买阿里云宝塔服务器\"><a href=\"#1-购买阿里云宝塔服务器\" class=\"headerlink\" title=\"1.购买阿里云宝塔服务器\"></a>1.购买阿里云宝塔服务器</h3><p><a href=\"https://www.aliyun.com/minisite/goods?userCode=k6ji3ksd\">https://www.aliyun.com/minisite/goods?userCode=k6ji3ksd</a></p>\n<p>2.<a href=\"https://account.aliyun.com/login/login.htm?oauth_callback=https://swas.console.aliyun.com/&amp;lang=zh#/servers\">https://account.aliyun.com/login/login.htm?oauth_callback=https%3A%2F%2Fswas.console.aliyun.com%2F&amp;lang=zh#/servers</a></p>\n<h3 id=\"登陆阿里云\"><a href=\"#登陆阿里云\" class=\"headerlink\" title=\"登陆阿里云\"></a>登陆阿里云</h3><p>在服务器列表，点击对应服务器详情</p>\n<p><img src=\"/2021/08/21/ge-ren-ye-mian-yun-fu-wu/1.png\" alt=\"1\"></p>\n<p>会来到如图所示的服务器详情页</p>\n<p><img src=\"/2021/08/21/ge-ren-ye-mian-yun-fu-wu/2.png\" alt=\"2\"></p>\n<p>然后建立连接</p>\n<p><img src=\"/2021/08/21/ge-ren-ye-mian-yun-fu-wu/3.png\" alt=\"3\"></p>\n<p>输入网址然后输入上图得到的账号密码</p>\n<p><img src=\"/2021/08/21/ge-ren-ye-mian-yun-fu-wu/4.png\" alt=\"4\"></p>\n<p>进入后点击软件商店搜索下载应用</p>\n<p><img src=\"/2021/08/21/ge-ren-ye-mian-yun-fu-wu/5.png\" alt=\"5\"></p>\n<p>进入tomcat设置界面修改端口号</p>\n<p><img src=\"/2021/08/21/ge-ren-ye-mian-yun-fu-wu/6.png\" alt=\"6\"></p>\n<p>之后点击服务重启tomcat即可</p>\n<h3 id=\"点击文件找到tomcat文件夹点击进入\"><a href=\"#点击文件找到tomcat文件夹点击进入\" class=\"headerlink\" title=\"点击文件找到tomcat文件夹点击进入\"></a>点击文件找到tomcat文件夹点击进入</h3><p><img src=\"/2021/08/21/ge-ren-ye-mian-yun-fu-wu/7.png\" alt=\"7\"></p>\n<p>点击进入ROOT中删除所有文件</p>\n<p><img src=\"/2021/08/21/ge-ren-ye-mian-yun-fu-wu/8.png\" alt=\"7\"></p>\n<p>进入<a href=\"https://github.com/gaojiancoder/-/tree/main%E5%B0%86%E7%9B%B8%E5%85%B3%E6%96%87%E4%BB%B6%E4%B8%8B%E8%BD%BD%E4%B8%8B%E6%9D%A5\">https://github.com/gaojiancoder/-/tree/main将相关文件下载下来</a></p>\n<p><img src=\"/2021/08/21/ge-ren-ye-mian-yun-fu-wu/9.png\" alt=\"9\"></p>\n<p>除了不要的文件夹其余全部加入ROOT文件夹中</p>\n<p><img src=\"/2021/08/21/ge-ren-ye-mian-yun-fu-wu/10.png\" alt=\"10\"></p>\n<p>进入db.properties中修改内容</p>\n<p><img src=\"/2021/08/21/ge-ren-ye-mian-yun-fu-wu/11.png\" alt=\"11\"></p>\n<p>将数据名和用户名密码写入db.properties中</p>\n<p><img src=\"/2021/08/21/ge-ren-ye-mian-yun-fu-wu/12.png\" alt=\"12\"></p>\n<p>输入网址成功操作</p>\n<p><img src=\"/2021/08/21/ge-ren-ye-mian-yun-fu-wu/13.png\" alt=\"13\"></p>\n<p>创建成功</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"任务名称：个人主页项目\"><a href=\"#任务名称：个人主页项目\" class=\"headerlink\" title=\"任务名称：个人主页项目\"></a>任务名称：个人主页项目</h1><h2 id=\"项目部署与云服务搭建\"><a href=\"#项目部署与云服务搭建\" class=\"headerlink\" title=\"项目部署与云服务搭建\"></a>项目部署与云服务搭建</h2><h3 id=\"1-购买阿里云宝塔服务器\"><a href=\"#1-购买阿里云宝塔服务器\" class=\"headerlink\" title=\"1.购买阿里云宝塔服务器\"></a>1.购买阿里云宝塔服务器</h3><p><a href=\"https://www.aliyun.com/minisite/goods?userCode=k6ji3ksd\">https://www.aliyun.com/minisite/goods?userCode=k6ji3ksd</a></p>\n<p>2.<a href=\"https://account.aliyun.com/login/login.htm?oauth_callback=https://swas.console.aliyun.com/&amp;lang=zh#/servers\">https://account.aliyun.com/login/login.htm?oauth_callback=https%3A%2F%2Fswas.console.aliyun.com%2F&amp;lang=zh#/servers</a></p>\n<h3 id=\"登陆阿里云\"><a href=\"#登陆阿里云\" class=\"headerlink\" title=\"登陆阿里云\"></a>登陆阿里云</h3><p>在服务器列表，点击对应服务器详情</p>\n<p><img src=\"/2021/08/21/ge-ren-ye-mian-yun-fu-wu/1.png\" alt=\"1\"></p>\n<p>会来到如图所示的服务器详情页</p>\n<p><img src=\"/2021/08/21/ge-ren-ye-mian-yun-fu-wu/2.png\" alt=\"2\"></p>\n<p>然后建立连接</p>\n<p><img src=\"/2021/08/21/ge-ren-ye-mian-yun-fu-wu/3.png\" alt=\"3\"></p>\n<p>输入网址然后输入上图得到的账号密码</p>\n<p><img src=\"/2021/08/21/ge-ren-ye-mian-yun-fu-wu/4.png\" alt=\"4\"></p>\n<p>进入后点击软件商店搜索下载应用</p>\n<p><img src=\"/2021/08/21/ge-ren-ye-mian-yun-fu-wu/5.png\" alt=\"5\"></p>\n<p>进入tomcat设置界面修改端口号</p>\n<p><img src=\"/2021/08/21/ge-ren-ye-mian-yun-fu-wu/6.png\" alt=\"6\"></p>\n<p>之后点击服务重启tomcat即可</p>\n<h3 id=\"点击文件找到tomcat文件夹点击进入\"><a href=\"#点击文件找到tomcat文件夹点击进入\" class=\"headerlink\" title=\"点击文件找到tomcat文件夹点击进入\"></a>点击文件找到tomcat文件夹点击进入</h3><p><img src=\"/2021/08/21/ge-ren-ye-mian-yun-fu-wu/7.png\" alt=\"7\"></p>\n<p>点击进入ROOT中删除所有文件</p>\n<p><img src=\"/2021/08/21/ge-ren-ye-mian-yun-fu-wu/8.png\" alt=\"7\"></p>\n<p>进入<a href=\"https://github.com/gaojiancoder/-/tree/main%E5%B0%86%E7%9B%B8%E5%85%B3%E6%96%87%E4%BB%B6%E4%B8%8B%E8%BD%BD%E4%B8%8B%E6%9D%A5\">https://github.com/gaojiancoder/-/tree/main将相关文件下载下来</a></p>\n<p><img src=\"/2021/08/21/ge-ren-ye-mian-yun-fu-wu/9.png\" alt=\"9\"></p>\n<p>除了不要的文件夹其余全部加入ROOT文件夹中</p>\n<p><img src=\"/2021/08/21/ge-ren-ye-mian-yun-fu-wu/10.png\" alt=\"10\"></p>\n<p>进入db.properties中修改内容</p>\n<p><img src=\"/2021/08/21/ge-ren-ye-mian-yun-fu-wu/11.png\" alt=\"11\"></p>\n<p>将数据名和用户名密码写入db.properties中</p>\n<p><img src=\"/2021/08/21/ge-ren-ye-mian-yun-fu-wu/12.png\" alt=\"12\"></p>\n<p>输入网址成功操作</p>\n<p><img src=\"/2021/08/21/ge-ren-ye-mian-yun-fu-wu/13.png\" alt=\"13\"></p>\n<p>创建成功</p>\n"},{"title":"web工程tomcat部署","top":false,"cover":false,"toc":true,"mathjax":true,"date":"2021-08-03T15:53:17.000Z","password":null,"summary":null,"_content":"\n# tomcat部署\n\n## 1.进入Tomcat官网根据电脑版本号下载tomcat\n\nhttps://tomcat.apache.org/download-80.cgi\n\n\n\n下载好后终端到一个自己指定的文件夹将其移动到其中\n\n$ mv ~/Downloads/apache-tomcat-8.5.69.tar.gz .   \n\n在终端中进行解压\n\n$ tar zxvf apache-tomcat-8.5.69.tar.gz\n\n解压完拿到文件路径后面IDE中会用到\n\n![image-2](image-2.png)\n\n## 2.在IDE中创建web模板\n\nIDE中new 一个project\n\n![image-3](image-3.png)\n\n进入之后选中maven 勾选和选项\n\n![image-4](image-4.png)\n\n![image-5](image-5.png)\n\n选完后创建标题 之后一路下一步\n\n### 3运行Tomcat\n\n1首先进行打包不打包无法运行 mvn clean install \n\n2进行配置，点击Edit![image-6](image-6.png)\n\n点击+号 输入tom搜索 选择本地的Local\n\n![image-7](image-7.png)\n\n选择完local 点击FIX 出现两个选项选择第二个\n\n![image-9](image-9.png)\n","source":"_posts/web工程tomcat部署.md","raw":"---\ntitle: web工程tomcat部署\ntop: false\ncover: false\ntoc: true\nmathjax: true\ndate: 2021-08-03 23:53:17\npassword:\nsummary:\ntags: notes\ncategories: Tomcat\n---\n\n# tomcat部署\n\n## 1.进入Tomcat官网根据电脑版本号下载tomcat\n\nhttps://tomcat.apache.org/download-80.cgi\n\n\n\n下载好后终端到一个自己指定的文件夹将其移动到其中\n\n$ mv ~/Downloads/apache-tomcat-8.5.69.tar.gz .   \n\n在终端中进行解压\n\n$ tar zxvf apache-tomcat-8.5.69.tar.gz\n\n解压完拿到文件路径后面IDE中会用到\n\n![image-2](image-2.png)\n\n## 2.在IDE中创建web模板\n\nIDE中new 一个project\n\n![image-3](image-3.png)\n\n进入之后选中maven 勾选和选项\n\n![image-4](image-4.png)\n\n![image-5](image-5.png)\n\n选完后创建标题 之后一路下一步\n\n### 3运行Tomcat\n\n1首先进行打包不打包无法运行 mvn clean install \n\n2进行配置，点击Edit![image-6](image-6.png)\n\n点击+号 输入tom搜索 选择本地的Local\n\n![image-7](image-7.png)\n\n选择完local 点击FIX 出现两个选项选择第二个\n\n![image-9](image-9.png)\n","slug":"web工程tomcat部署","published":1,"updated":"2022-11-21T11:55:43.680Z","comments":1,"layout":"post","photos":[],"link":"","_id":"claqy94ko001dbklg6kc2g24o","content":"<h1 id=\"tomcat部署\"><a href=\"#tomcat部署\" class=\"headerlink\" title=\"tomcat部署\"></a>tomcat部署</h1><h2 id=\"1-进入Tomcat官网根据电脑版本号下载tomcat\"><a href=\"#1-进入Tomcat官网根据电脑版本号下载tomcat\" class=\"headerlink\" title=\"1.进入Tomcat官网根据电脑版本号下载tomcat\"></a>1.进入Tomcat官网根据电脑版本号下载tomcat</h2><p><a href=\"https://tomcat.apache.org/download-80.cgi\">https://tomcat.apache.org/download-80.cgi</a></p>\n<p>下载好后终端到一个自己指定的文件夹将其移动到其中</p>\n<p>$ mv ~/Downloads/apache-tomcat-8.5.69.tar.gz .   </p>\n<p>在终端中进行解压</p>\n<p>$ tar zxvf apache-tomcat-8.5.69.tar.gz</p>\n<p>解压完拿到文件路径后面IDE中会用到</p>\n<p><img src=\"/2021/08/03/web-gong-cheng-tomcat-bu-shu/image-2.png\" alt=\"image-2\"></p>\n<h2 id=\"2-在IDE中创建web模板\"><a href=\"#2-在IDE中创建web模板\" class=\"headerlink\" title=\"2.在IDE中创建web模板\"></a>2.在IDE中创建web模板</h2><p>IDE中new 一个project</p>\n<p><img src=\"/2021/08/03/web-gong-cheng-tomcat-bu-shu/image-3.png\" alt=\"image-3\"></p>\n<p>进入之后选中maven 勾选和选项</p>\n<p><img src=\"/2021/08/03/web-gong-cheng-tomcat-bu-shu/image-4.png\" alt=\"image-4\"></p>\n<p><img src=\"/2021/08/03/web-gong-cheng-tomcat-bu-shu/image-5.png\" alt=\"image-5\"></p>\n<p>选完后创建标题 之后一路下一步</p>\n<h3 id=\"3运行Tomcat\"><a href=\"#3运行Tomcat\" class=\"headerlink\" title=\"3运行Tomcat\"></a>3运行Tomcat</h3><p>1首先进行打包不打包无法运行 mvn clean install </p>\n<p>2进行配置，点击Edit<img src=\"/2021/08/03/web-gong-cheng-tomcat-bu-shu/image-6.png\" alt=\"image-6\"></p>\n<p>点击+号 输入tom搜索 选择本地的Local</p>\n<p><img src=\"/2021/08/03/web-gong-cheng-tomcat-bu-shu/image-7.png\" alt=\"image-7\"></p>\n<p>选择完local 点击FIX 出现两个选项选择第二个</p>\n<p><img src=\"/2021/08/03/web-gong-cheng-tomcat-bu-shu/image-9.png\" alt=\"image-9\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"tomcat部署\"><a href=\"#tomcat部署\" class=\"headerlink\" title=\"tomcat部署\"></a>tomcat部署</h1><h2 id=\"1-进入Tomcat官网根据电脑版本号下载tomcat\"><a href=\"#1-进入Tomcat官网根据电脑版本号下载tomcat\" class=\"headerlink\" title=\"1.进入Tomcat官网根据电脑版本号下载tomcat\"></a>1.进入Tomcat官网根据电脑版本号下载tomcat</h2><p><a href=\"https://tomcat.apache.org/download-80.cgi\">https://tomcat.apache.org/download-80.cgi</a></p>\n<p>下载好后终端到一个自己指定的文件夹将其移动到其中</p>\n<p>$ mv ~/Downloads/apache-tomcat-8.5.69.tar.gz .   </p>\n<p>在终端中进行解压</p>\n<p>$ tar zxvf apache-tomcat-8.5.69.tar.gz</p>\n<p>解压完拿到文件路径后面IDE中会用到</p>\n<p><img src=\"/2021/08/03/web-gong-cheng-tomcat-bu-shu/image-2.png\" alt=\"image-2\"></p>\n<h2 id=\"2-在IDE中创建web模板\"><a href=\"#2-在IDE中创建web模板\" class=\"headerlink\" title=\"2.在IDE中创建web模板\"></a>2.在IDE中创建web模板</h2><p>IDE中new 一个project</p>\n<p><img src=\"/2021/08/03/web-gong-cheng-tomcat-bu-shu/image-3.png\" alt=\"image-3\"></p>\n<p>进入之后选中maven 勾选和选项</p>\n<p><img src=\"/2021/08/03/web-gong-cheng-tomcat-bu-shu/image-4.png\" alt=\"image-4\"></p>\n<p><img src=\"/2021/08/03/web-gong-cheng-tomcat-bu-shu/image-5.png\" alt=\"image-5\"></p>\n<p>选完后创建标题 之后一路下一步</p>\n<h3 id=\"3运行Tomcat\"><a href=\"#3运行Tomcat\" class=\"headerlink\" title=\"3运行Tomcat\"></a>3运行Tomcat</h3><p>1首先进行打包不打包无法运行 mvn clean install </p>\n<p>2进行配置，点击Edit<img src=\"/2021/08/03/web-gong-cheng-tomcat-bu-shu/image-6.png\" alt=\"image-6\"></p>\n<p>点击+号 输入tom搜索 选择本地的Local</p>\n<p><img src=\"/2021/08/03/web-gong-cheng-tomcat-bu-shu/image-7.png\" alt=\"image-7\"></p>\n<p>选择完local 点击FIX 出现两个选项选择第二个</p>\n<p><img src=\"/2021/08/03/web-gong-cheng-tomcat-bu-shu/image-9.png\" alt=\"image-9\"></p>\n"},{"title":"“MySQL如何在终端操作1”","top":false,"cover":false,"toc":true,"mathjax":true,"date":"2021-07-25T13:22:41.000Z","password":null,"summary":null,"_content":"# mysql关系型数据库\n\n## 如何使用终端操作数据库?\n\n### 1.如何登陆数据库\n\n首先进入终端，p后面为登陆MySQL的密码 首次进入会提示设置，如果没有则不需用输入。\ngaojian at gaojian in ~\n$ mysql -uroot -p12345678\n\n### 2.如何查询数据库服务器中所有的数据库？ show databases;\n\nmysql> show databases;\n+--------------------+\n| Database           |\n+--------------------+\n| demo               |\n| information_schema |\n| mysql              |\n| performance_schema |\n| sys                |\n+--------------------+\n5 rows in set (0.00 sec)\n\n### 3.如何选中某一个数据库进行操作\n\n如果没有选中数据库直接进行操作\n\nmysql> select*from admin；\nERROR 1046 (3D000): No database selected\n会报错\n\nSQL语句 use demo\nmysql> use demo\nReading table information for completion of table and column names\nYou can turn off this feature to get a quicker startup with -A\n\nDatabase changed\nmysql> select*from admin；\nEmpty set (0.00 sec)\n使用use进入指定数据库\n\n### 如何退出数据库服务器 exit;\n\nmysql> exit;\nBye\n\n### 如何在数据库服务器中创建我们的数据库？ Create database <name>;\n\nCreate database <name>;\n\nmysql> create database test;\nQuery OK, 1 row affected (0.00 sec)\n\n### 如何查看某个数据库中所有的数据表   show tables;\n\nmysql> show tables;\n+----------------+\n| Tables_in_test |\n+----------------+\n| pet            |\n+----------------+\n1 row in set (0.00 sec)\n\n### 如何创建一个数据表 create table pet\n\nmysql> create table pet(\n    -> name varchar(20),\n    -> owner varchar(20),\n    -> sex char(1),\n    -> birth date,\n    -> death date);\nQuery OK, 0 rows affected (0.01 sec)\n\n### 查看创建好的数据表的结构 describe pet;\n\nmysql> describe pet;\n+-------+-------------+------+-----+---------+-------+\n| Field    | Type     | Null | Key    | Default | Extra |\n+-------+-------------+------+-----+---------+-------+\n| name  | varchar(20) | YES  |        | NULL    |       |\n| owner | varchar(20) | YES  |        | NULL    |       |\n| sex   | char(1)     | YES  |        | NULL    |       |\n| birth | date        | YES  |        | NULL    |       |\n| death | date        | YES  |        | NULL    |       |\n+-------+-------------+------+-----+---------+-------+\n5 rows in set (0.00 sec)\n\n### 查看数据表中的记录 select*from pet;\n\nmysql> select*from pet;\nEmpty set (0.01 sec)\n\n### 如何往数据表中添加数据记录 insert into pet\n\nmysql> insert into pet\n    -> values('bob','gao','n','1999-3-2',null);\nQuery OK, 1 row affected (0.00 sec)\n\nvalues输入的值要与表中的位置相对应\n\n#### 再一次查询\n\nmysql> select *from pet;\n+------+-------+------+------------+-------+\n| name | owner | sex  | birth            | death |\n+------+-------+------+------------+-------+\n| bob  | gao   | n      | 1999-03-02 | NULL  |\n+------+-------+------+------------+-------+\n1 row in set (0.00 sec)\n\n#### 插入新数据和添加数据一样的操作\n\n","source":"_posts/“MySQL如何在终端操作1”.md","raw":"---\ntitle: “MySQL如何在终端操作1”\ntop: false\ncover: false\ntoc: true\nmathjax: true\ndate: 2021-07-25 21:22:41\npassword:\nsummary:\ntags: notes\ncategories: MySQL\n---\n# mysql关系型数据库\n\n## 如何使用终端操作数据库?\n\n### 1.如何登陆数据库\n\n首先进入终端，p后面为登陆MySQL的密码 首次进入会提示设置，如果没有则不需用输入。\ngaojian at gaojian in ~\n$ mysql -uroot -p12345678\n\n### 2.如何查询数据库服务器中所有的数据库？ show databases;\n\nmysql> show databases;\n+--------------------+\n| Database           |\n+--------------------+\n| demo               |\n| information_schema |\n| mysql              |\n| performance_schema |\n| sys                |\n+--------------------+\n5 rows in set (0.00 sec)\n\n### 3.如何选中某一个数据库进行操作\n\n如果没有选中数据库直接进行操作\n\nmysql> select*from admin；\nERROR 1046 (3D000): No database selected\n会报错\n\nSQL语句 use demo\nmysql> use demo\nReading table information for completion of table and column names\nYou can turn off this feature to get a quicker startup with -A\n\nDatabase changed\nmysql> select*from admin；\nEmpty set (0.00 sec)\n使用use进入指定数据库\n\n### 如何退出数据库服务器 exit;\n\nmysql> exit;\nBye\n\n### 如何在数据库服务器中创建我们的数据库？ Create database <name>;\n\nCreate database <name>;\n\nmysql> create database test;\nQuery OK, 1 row affected (0.00 sec)\n\n### 如何查看某个数据库中所有的数据表   show tables;\n\nmysql> show tables;\n+----------------+\n| Tables_in_test |\n+----------------+\n| pet            |\n+----------------+\n1 row in set (0.00 sec)\n\n### 如何创建一个数据表 create table pet\n\nmysql> create table pet(\n    -> name varchar(20),\n    -> owner varchar(20),\n    -> sex char(1),\n    -> birth date,\n    -> death date);\nQuery OK, 0 rows affected (0.01 sec)\n\n### 查看创建好的数据表的结构 describe pet;\n\nmysql> describe pet;\n+-------+-------------+------+-----+---------+-------+\n| Field    | Type     | Null | Key    | Default | Extra |\n+-------+-------------+------+-----+---------+-------+\n| name  | varchar(20) | YES  |        | NULL    |       |\n| owner | varchar(20) | YES  |        | NULL    |       |\n| sex   | char(1)     | YES  |        | NULL    |       |\n| birth | date        | YES  |        | NULL    |       |\n| death | date        | YES  |        | NULL    |       |\n+-------+-------------+------+-----+---------+-------+\n5 rows in set (0.00 sec)\n\n### 查看数据表中的记录 select*from pet;\n\nmysql> select*from pet;\nEmpty set (0.01 sec)\n\n### 如何往数据表中添加数据记录 insert into pet\n\nmysql> insert into pet\n    -> values('bob','gao','n','1999-3-2',null);\nQuery OK, 1 row affected (0.00 sec)\n\nvalues输入的值要与表中的位置相对应\n\n#### 再一次查询\n\nmysql> select *from pet;\n+------+-------+------+------------+-------+\n| name | owner | sex  | birth            | death |\n+------+-------+------+------------+-------+\n| bob  | gao   | n      | 1999-03-02 | NULL  |\n+------+-------+------+------------+-------+\n1 row in set (0.00 sec)\n\n#### 插入新数据和添加数据一样的操作\n\n","slug":"“MySQL如何在终端操作1”","published":1,"updated":"2022-11-21T11:55:43.695Z","comments":1,"layout":"post","photos":[],"link":"","_id":"claqy94kp001hbklg23w26tjp","content":"<h1 id=\"mysql关系型数据库\"><a href=\"#mysql关系型数据库\" class=\"headerlink\" title=\"mysql关系型数据库\"></a>mysql关系型数据库</h1><h2 id=\"如何使用终端操作数据库\"><a href=\"#如何使用终端操作数据库\" class=\"headerlink\" title=\"如何使用终端操作数据库?\"></a>如何使用终端操作数据库?</h2><h3 id=\"1-如何登陆数据库\"><a href=\"#1-如何登陆数据库\" class=\"headerlink\" title=\"1.如何登陆数据库\"></a>1.如何登陆数据库</h3><p>首先进入终端，p后面为登陆MySQL的密码 首次进入会提示设置，如果没有则不需用输入。<br>gaojian at gaojian in ~<br>$ mysql -uroot -p12345678</p>\n<h3 id=\"2-如何查询数据库服务器中所有的数据库？-show-databases\"><a href=\"#2-如何查询数据库服务器中所有的数据库？-show-databases\" class=\"headerlink\" title=\"2.如何查询数据库服务器中所有的数据库？ show databases;\"></a>2.如何查询数据库服务器中所有的数据库？ show databases;</h3><p>mysql&gt; show databases;<br>+——————–+<br>| Database           |<br>+——————–+<br>| demo               |<br>| information_schema |<br>| mysql              |<br>| performance_schema |<br>| sys                |<br>+——————–+<br>5 rows in set (0.00 sec)</p>\n<h3 id=\"3-如何选中某一个数据库进行操作\"><a href=\"#3-如何选中某一个数据库进行操作\" class=\"headerlink\" title=\"3.如何选中某一个数据库进行操作\"></a>3.如何选中某一个数据库进行操作</h3><p>如果没有选中数据库直接进行操作</p>\n<p>mysql&gt; select*from admin；<br>ERROR 1046 (3D000): No database selected<br>会报错</p>\n<p>SQL语句 use demo<br>mysql&gt; use demo<br>Reading table information for completion of table and column names<br>You can turn off this feature to get a quicker startup with -A</p>\n<p>Database changed<br>mysql&gt; select*from admin；<br>Empty set (0.00 sec)<br>使用use进入指定数据库</p>\n<h3 id=\"如何退出数据库服务器-exit\"><a href=\"#如何退出数据库服务器-exit\" class=\"headerlink\" title=\"如何退出数据库服务器 exit;\"></a>如何退出数据库服务器 exit;</h3><p>mysql&gt; exit;<br>Bye</p>\n<h3 id=\"如何在数据库服务器中创建我们的数据库？-Create-database\"><a href=\"#如何在数据库服务器中创建我们的数据库？-Create-database\" class=\"headerlink\" title=\"如何在数据库服务器中创建我们的数据库？ Create database ;\"></a>如何在数据库服务器中创建我们的数据库？ Create database <name>;</h3><p>Create database <name>;</p>\n<p>mysql&gt; create database test;<br>Query OK, 1 row affected (0.00 sec)</p>\n<h3 id=\"如何查看某个数据库中所有的数据表-show-tables\"><a href=\"#如何查看某个数据库中所有的数据表-show-tables\" class=\"headerlink\" title=\"如何查看某个数据库中所有的数据表   show tables;\"></a>如何查看某个数据库中所有的数据表   show tables;</h3><p>mysql&gt; show tables;<br>+—————-+<br>| Tables_in_test |<br>+—————-+<br>| pet            |<br>+—————-+<br>1 row in set (0.00 sec)</p>\n<h3 id=\"如何创建一个数据表-create-table-pet\"><a href=\"#如何创建一个数据表-create-table-pet\" class=\"headerlink\" title=\"如何创建一个数据表 create table pet\"></a>如何创建一个数据表 create table pet</h3><p>mysql&gt; create table pet(<br>    -&gt; name varchar(20),<br>    -&gt; owner varchar(20),<br>    -&gt; sex char(1),<br>    -&gt; birth date,<br>    -&gt; death date);<br>Query OK, 0 rows affected (0.01 sec)</p>\n<h3 id=\"查看创建好的数据表的结构-describe-pet\"><a href=\"#查看创建好的数据表的结构-describe-pet\" class=\"headerlink\" title=\"查看创建好的数据表的结构 describe pet;\"></a>查看创建好的数据表的结构 describe pet;</h3><p>mysql&gt; describe pet;<br>+——-+————-+——+—–+———+——-+<br>| Field    | Type     | Null | Key    | Default | Extra |<br>+——-+————-+——+—–+———+——-+<br>| name  | varchar(20) | YES  |        | NULL    |       |<br>| owner | varchar(20) | YES  |        | NULL    |       |<br>| sex   | char(1)     | YES  |        | NULL    |       |<br>| birth | date        | YES  |        | NULL    |       |<br>| death | date        | YES  |        | NULL    |       |<br>+——-+————-+——+—–+———+——-+<br>5 rows in set (0.00 sec)</p>\n<h3 id=\"查看数据表中的记录-select-from-pet\"><a href=\"#查看数据表中的记录-select-from-pet\" class=\"headerlink\" title=\"查看数据表中的记录 select*from pet;\"></a>查看数据表中的记录 select*from pet;</h3><p>mysql&gt; select*from pet;<br>Empty set (0.01 sec)</p>\n<h3 id=\"如何往数据表中添加数据记录-insert-into-pet\"><a href=\"#如何往数据表中添加数据记录-insert-into-pet\" class=\"headerlink\" title=\"如何往数据表中添加数据记录 insert into pet\"></a>如何往数据表中添加数据记录 insert into pet</h3><p>mysql&gt; insert into pet<br>    -&gt; values(‘bob’,’gao’,’n’,’1999-3-2’,null);<br>Query OK, 1 row affected (0.00 sec)</p>\n<p>values输入的值要与表中的位置相对应</p>\n<h4 id=\"再一次查询\"><a href=\"#再一次查询\" class=\"headerlink\" title=\"再一次查询\"></a>再一次查询</h4><p>mysql&gt; select *from pet;<br>+——+——-+——+————+——-+<br>| name | owner | sex  | birth            | death |<br>+——+——-+——+————+——-+<br>| bob  | gao   | n      | 1999-03-02 | NULL  |<br>+——+——-+——+————+——-+<br>1 row in set (0.00 sec)</p>\n<h4 id=\"插入新数据和添加数据一样的操作\"><a href=\"#插入新数据和添加数据一样的操作\" class=\"headerlink\" title=\"插入新数据和添加数据一样的操作\"></a>插入新数据和添加数据一样的操作</h4>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"mysql关系型数据库\"><a href=\"#mysql关系型数据库\" class=\"headerlink\" title=\"mysql关系型数据库\"></a>mysql关系型数据库</h1><h2 id=\"如何使用终端操作数据库\"><a href=\"#如何使用终端操作数据库\" class=\"headerlink\" title=\"如何使用终端操作数据库?\"></a>如何使用终端操作数据库?</h2><h3 id=\"1-如何登陆数据库\"><a href=\"#1-如何登陆数据库\" class=\"headerlink\" title=\"1.如何登陆数据库\"></a>1.如何登陆数据库</h3><p>首先进入终端，p后面为登陆MySQL的密码 首次进入会提示设置，如果没有则不需用输入。<br>gaojian at gaojian in ~<br>$ mysql -uroot -p12345678</p>\n<h3 id=\"2-如何查询数据库服务器中所有的数据库？-show-databases\"><a href=\"#2-如何查询数据库服务器中所有的数据库？-show-databases\" class=\"headerlink\" title=\"2.如何查询数据库服务器中所有的数据库？ show databases;\"></a>2.如何查询数据库服务器中所有的数据库？ show databases;</h3><p>mysql&gt; show databases;<br>+——————–+<br>| Database           |<br>+——————–+<br>| demo               |<br>| information_schema |<br>| mysql              |<br>| performance_schema |<br>| sys                |<br>+——————–+<br>5 rows in set (0.00 sec)</p>\n<h3 id=\"3-如何选中某一个数据库进行操作\"><a href=\"#3-如何选中某一个数据库进行操作\" class=\"headerlink\" title=\"3.如何选中某一个数据库进行操作\"></a>3.如何选中某一个数据库进行操作</h3><p>如果没有选中数据库直接进行操作</p>\n<p>mysql&gt; select*from admin；<br>ERROR 1046 (3D000): No database selected<br>会报错</p>\n<p>SQL语句 use demo<br>mysql&gt; use demo<br>Reading table information for completion of table and column names<br>You can turn off this feature to get a quicker startup with -A</p>\n<p>Database changed<br>mysql&gt; select*from admin；<br>Empty set (0.00 sec)<br>使用use进入指定数据库</p>\n<h3 id=\"如何退出数据库服务器-exit\"><a href=\"#如何退出数据库服务器-exit\" class=\"headerlink\" title=\"如何退出数据库服务器 exit;\"></a>如何退出数据库服务器 exit;</h3><p>mysql&gt; exit;<br>Bye</p>\n<h3 id=\"如何在数据库服务器中创建我们的数据库？-Create-database\"><a href=\"#如何在数据库服务器中创建我们的数据库？-Create-database\" class=\"headerlink\" title=\"如何在数据库服务器中创建我们的数据库？ Create database ;\"></a>如何在数据库服务器中创建我们的数据库？ Create database <name>;</h3><p>Create database <name>;</p>\n<p>mysql&gt; create database test;<br>Query OK, 1 row affected (0.00 sec)</p>\n<h3 id=\"如何查看某个数据库中所有的数据表-show-tables\"><a href=\"#如何查看某个数据库中所有的数据表-show-tables\" class=\"headerlink\" title=\"如何查看某个数据库中所有的数据表   show tables;\"></a>如何查看某个数据库中所有的数据表   show tables;</h3><p>mysql&gt; show tables;<br>+—————-+<br>| Tables_in_test |<br>+—————-+<br>| pet            |<br>+—————-+<br>1 row in set (0.00 sec)</p>\n<h3 id=\"如何创建一个数据表-create-table-pet\"><a href=\"#如何创建一个数据表-create-table-pet\" class=\"headerlink\" title=\"如何创建一个数据表 create table pet\"></a>如何创建一个数据表 create table pet</h3><p>mysql&gt; create table pet(<br>    -&gt; name varchar(20),<br>    -&gt; owner varchar(20),<br>    -&gt; sex char(1),<br>    -&gt; birth date,<br>    -&gt; death date);<br>Query OK, 0 rows affected (0.01 sec)</p>\n<h3 id=\"查看创建好的数据表的结构-describe-pet\"><a href=\"#查看创建好的数据表的结构-describe-pet\" class=\"headerlink\" title=\"查看创建好的数据表的结构 describe pet;\"></a>查看创建好的数据表的结构 describe pet;</h3><p>mysql&gt; describe pet;<br>+——-+————-+——+—–+———+——-+<br>| Field    | Type     | Null | Key    | Default | Extra |<br>+——-+————-+——+—–+———+——-+<br>| name  | varchar(20) | YES  |        | NULL    |       |<br>| owner | varchar(20) | YES  |        | NULL    |       |<br>| sex   | char(1)     | YES  |        | NULL    |       |<br>| birth | date        | YES  |        | NULL    |       |<br>| death | date        | YES  |        | NULL    |       |<br>+——-+————-+——+—–+———+——-+<br>5 rows in set (0.00 sec)</p>\n<h3 id=\"查看数据表中的记录-select-from-pet\"><a href=\"#查看数据表中的记录-select-from-pet\" class=\"headerlink\" title=\"查看数据表中的记录 select*from pet;\"></a>查看数据表中的记录 select*from pet;</h3><p>mysql&gt; select*from pet;<br>Empty set (0.01 sec)</p>\n<h3 id=\"如何往数据表中添加数据记录-insert-into-pet\"><a href=\"#如何往数据表中添加数据记录-insert-into-pet\" class=\"headerlink\" title=\"如何往数据表中添加数据记录 insert into pet\"></a>如何往数据表中添加数据记录 insert into pet</h3><p>mysql&gt; insert into pet<br>    -&gt; values(‘bob’,’gao’,’n’,’1999-3-2’,null);<br>Query OK, 1 row affected (0.00 sec)</p>\n<p>values输入的值要与表中的位置相对应</p>\n<h4 id=\"再一次查询\"><a href=\"#再一次查询\" class=\"headerlink\" title=\"再一次查询\"></a>再一次查询</h4><p>mysql&gt; select *from pet;<br>+——+——-+——+————+——-+<br>| name | owner | sex  | birth            | death |<br>+——+——-+——+————+——-+<br>| bob  | gao   | n      | 1999-03-02 | NULL  |<br>+——+——-+——+————+——-+<br>1 row in set (0.00 sec)</p>\n<h4 id=\"插入新数据和添加数据一样的操作\"><a href=\"#插入新数据和添加数据一样的操作\" class=\"headerlink\" title=\"插入新数据和添加数据一样的操作\"></a>插入新数据和添加数据一样的操作</h4>"},{"title":"多线程","top":false,"cover":false,"toc":true,"mathjax":true,"date":"2021-08-15T09:11:18.000Z","password":null,"summary":null,"_content":"\n## 多线程\n\n### 创建多线程方法\n\n1.继承Thread类\n\n2.实现Runnable接口\n\n3.实现Callable接口\n\n### 一.继承Thread类\n\n```java\n//创建线程方式yi：继承Thread类，重写run()方法，调用start开启线程\npublic class TestThread01 extends Thread{\n    @Override\n    public void run() {\n        super.run();\n        //run方法线程体\n        for (int i = 0; i < 20; i++) {\n            System.out.println(\"我在看代码---\"+i);\n        }\n    }\n    public static void main(String[] args) {\n        //main线程，主线程\n        //创建一个线程对象\n        TestThread01 thread01 = new TestThread01();\n        //调用start（）方法开启线程\n        thread01.start();\n        for (int i = 0; i < 20; i++) {\n            System.out.println(\"我在学习---\"+i);\n        }\n    }\n}\n```\n\n总结：线程开启不一定立即执行，由cpu调度实行\n\n#### 下载图片案例\n\n```java\nimport org.apache.commons.io.FileUtils;\n\nimport java.io.File;\nimport java.io.IOException;\nimport java.net.URL;\npublic class Download extends Thread{\n    private String url;\n    private String name;\n    public Download(String url,String name){\n        this.url =url;\n        this.name=name;\n    }\n    @Override\n    public void run() {\n        WebDownload download = new WebDownload();\n        download.download(url,name);\n        System.out.println(\"下载了文件：\"+name);\n    }\n    public static void main(String[] args) {\n        Download download=new Download(\"https://images3.alphacoders.com/911/911582.jpg\",\"1.png\");\n        download.start();\n    }\n    //下载器\n    class WebDownload{\n        public void download(String url,String name){\n            try {\n                FileUtils.copyURLToFile(new URL(url),new File(name));\n            } catch (IOException e) {\n                e.printStackTrace();\n                System.out.println(\"io异常\");\n            }\n        }\n    }\n\n}\n```\n\n### 二.实现Runnable接口\n\n```java\n//方式二：实现runnable接口，重写run，执行线程需要丢入runnable接口实现类，调用start()\npublic class TestThread implements Runnable {\n    @Override\n    public void run() {\n        for (int i = 0; i < 20; i++) {\n            System.out.println(\"看我：\" + i);\n        }\n    }\n\n    public static void main(String[] args) {\n        TestThread thread = new TestThread();//创建接口的实现类\n        Thread thread1 = new Thread(thread);//创建线程对象\n        thread1.start();\n\n        for (int i = 0; i < 20; i++) {\n            System.out.println(\"看你：\" + i);\n        }\n    }\n}\n```\n\n![1](1.png)\n\n买票案例测试\n\n```java\npublic class TestThread implements Runnable{\n    //定义票\n    private int ticketNums =10;\n    @Override\n    public void run() {\n        while (true){\n            if (ticketNums<=0){\n                break;\n            }\n            System.out.println(Thread.currentThread().getName()+\"-->拿到了第\"+ticketNums--+\"张票\");\n        }\n    }\n    public static void main(String[] args) {\n        TestThread testThread = new TestThread();\n        new Thread(testThread,\"小明\").start();\n        new Thread(testThread,\"小高\").start();\n        new Thread(testThread,\"我\").start();\n    }\n}\n```\n\n#### 龟兔赛跑案例\n\n```java\npublic class Race implements Runnable{\n    //胜利者\n    private String winner;\n    @Override\n    public void run() {\n        for (int i = 0; i <= 100; i++) {\n\n            if (Thread.currentThread().getName().equals(\"2\")&&i%10==0){\n                try {\n                    Thread.sleep(1);\n                } catch (InterruptedException e) {\n                    e.printStackTrace();\n                }\n            }\n            boolean flag = gameOver(i);\n            if (flag){\n                break;\n            }\n            System.out.println(Thread.currentThread().getName()+\"跑了\"+i+\"步\");\n\n        }\n    }\n\n    private boolean gameOver(int steps){\n        if (winner!=null){\n            return true;\n        }{\n            if (steps >=100){\n                winner = Thread.currentThread().getName();\n                System.out.println(winner+\"赢了\");\n                return true;\n            }\n        }\n        return false;\n    }\n\n\n    public static void main(String[] args) {\n        Race race = new Race();\n        new Thread(race,\"1\").start();\n        new Thread(race,\"2\").start();\n    }\n\n}\n```\n\n总结：多线程操作同一个资源的情况下，线程不安全，数据紊乱\n\n### 三实现Callable接口\n\n```java\nimport org.apache.commons.io.FileUtils;\nimport java.io.File;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.util.concurrent.*;\n\n//方式三：实现Callable方法\npublic class TestCallable implements Callable<Boolean> {\n    private String url;\n    private String name;\n    public TestCallable(String url, String name) {\n        this.url = url;\n        this.name = name;\n    }\n    \n    @Override\n    public Boolean call() {\n        WebDownload webDownload = new WebDownload();\n        webDownload.download(url,name);\n        System.out.println(\"下载了文件：\" + name);\n        return true;\n    }\n    \n    public static void main(String[] args) throws ExecutionException, InterruptedException {\n        TestCallable download = new TestCallable(\"https://images3.alphacoders.com/911/911582.jpg\", \"1.png\");\n        ExecutorService pool = Executors.newFixedThreadPool(1);\n        Future<Boolean> r1 =pool.submit(download);\n        boolean rs1 = r1.get();\n        pool.shutdown();\n    }\n    \n    class WebDownload {\n        public void download(String url, String name) {\n            try {\n                FileUtils.copyURLToFile(new URL(url), new File(name));\n            } catch (IOException e) {\n                e.printStackTrace();\n                System.out.println(\"io异常\");\n            }\n        }\n    }\n\n}\n```\n\n### 四.Lamda表达式\n\n#### 函数式接口\n\n- 理解FUnctional Interface（函数式接口）是学习的关键\n\n- 任何接口，如果只包含唯一一个抽象方法，那么他就是一个函数式接口\n- 我们可以通过lambda表达式来创建改接口的对象\n\n![2](2.png)\n\n#### 代码实现\n\n```java\npublic class TestLambda02 {\n    public static void main(String[] args) {\n ILove love =s->System.out.println(\"I louve\"+s );\n        love.love(\"小明\");\n    }\n}\n\ninterface ILove{\n    void love(String s);\n}\n```\n\n### 五.线程\n\n#### 线程状态\n\n- 创建状态\n- 就绪状态\n- 运行状态\n- 阻塞状态\n- 死亡状态\n\n#### 线程方法\n\nsetPriority ：更改线程的优先级\n\nsleep(long):指定毫秒内沉睡\n\njoin：插队\n\nyield：暂停当前线程对象，执行其他线程\n\nisAlive：测试线程是否处于活动状态\n\n#### 停止方法测试代码实现\n\n```java\npublic class TestStop implements Runnable {\n    //设置标志位\n    private boolean flag = true;\n\n    @Override\n    public void run() {\n        int i = 120;\n        while (flag) {\n            System.out.println(\"run Thread ----------------\" + (i++));\n        }\n    }\n    public void stop() {\n        this.flag = false;\n    }\n\n    public static void main(String[] args) throws InterruptedException {\n        TestStop testStop = new TestStop();\n        new Thread(testStop).start();\n//        Thread.sleep(100);\n        for (int i = 0; i < 100; i++) {\n            System.out.println(\"main\" + i);\n            if (i == 90) {\n                testStop.stop();\n                System.out.println(\"停止\");\n            }\n        }\n    }\n}\n```\n\n#### 线程睡眠代码实现\n\n模拟网络延迟：放大问题的发生性，多线程操作不安全。\n\n```java\npublic class TestSleep implements Runnable{\n    private int ticketNums =10;\n    @Override\n    public void run() {\n        while (true){\n            if (ticketNums<=0){\n                break;\n            }\n            try {\n                Thread.sleep(100);\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n            System.out.println(Thread.currentThread().getName()+\"-->拿到了第\"+ticketNums--+\"张票\");\n        }\n\n    }\n    public static void main(String[] args) {\n        TestSleep testSleep = new TestSleep();\n        new Thread(testSleep,\"小明\").start();\n        new Thread(testSleep,\"小高\").start();\n        new Thread(testSleep,\"我\").start();\n\n\n    }\n}\n```\n\n#### 测试倒计时代码实现\n\n```java\npublic class TestSleep2 implements Runnable {\n    private int date = 10;\n\n    public static void main(String[] args) {\n        TestSleep2 testSleep2 = new TestSleep2();\n        new Thread(testSleep2).start();\n    }\n\n    @Override\n    public void run() {\n        while (true) {\n            try {\n                Thread.sleep(1000);\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n            System.out.println(date++);\n            if (date <= 0) {\n                break;\n            }\n        }\n    }\n}\n```\n\n#### 获取当前时间代码实现\n\n```java\npublic class TestSleep2 implements Runnable {\n    public static void main(String[] args) {\n        Date date = new Date(System.currentTimeMillis());//获取系统当前时间\n        while (true) {\n            try {\n                Thread.sleep(1000);\n                System.out.println(new SimpleDateFormat(\"HH:mm:ss\").format(date));\n                date = new Date(System.currentTimeMillis());//更新当前时间\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n\n        }\n    }\n\n    @Override\n    public void run() {\n    }\n}\n```\n\n### 六.线程同步\n\n#### 同步方法\n\nsynchronized：在方法中加入以实现给方法上锁\n\n```java\npublic class unSafeBuy {\n    public static void main(String[] args) {\n        BuyTicker buyTicker = new BuyTicker();\n        new Thread(buyTicker, \"a\").start();\n        new Thread(buyTicker, \"c\").start();\n        new Thread(buyTicker, \"b\").start();\n\n    }\n}\n\nclass BuyTicker implements Runnable {\n\n    private boolean flag = true;\n    private int ticket = 10;\n\n    @Override\n    public void run() {\n        while (flag) {\n            try {\n                buy();\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n        }\n    }\n\n\n    private synchronized void buy() throws InterruptedException {\n        if (ticket <= 0) {\n            flag = false;\n            return;\n        }\n        Thread.sleep(1);\n        System.out.println(Thread.currentThread().getName() + \"拿到\" + ticket--);\n    }\n\n}\n```\n\n#### lock锁\n\n使用方法在类中定义\n\n```java\nprivate final  ReentrantLock lock =new ReenTrantLock();\n```\n\n然后在void方法中使用lock.lock给线程上锁用try ，finally语句\n\nlock.unlock解锁写入finally中\n\n![](5.png)\n\n","source":"_posts/多线程.md","raw":"---\ntitle: 多线程\ntop: false\ncover: false\ntoc: true\nmathjax: true\ndate: 2021-08-15 17:11:18\npassword:\nsummary:\ntags: notes\ncategories: Thread\n---\n\n## 多线程\n\n### 创建多线程方法\n\n1.继承Thread类\n\n2.实现Runnable接口\n\n3.实现Callable接口\n\n### 一.继承Thread类\n\n```java\n//创建线程方式yi：继承Thread类，重写run()方法，调用start开启线程\npublic class TestThread01 extends Thread{\n    @Override\n    public void run() {\n        super.run();\n        //run方法线程体\n        for (int i = 0; i < 20; i++) {\n            System.out.println(\"我在看代码---\"+i);\n        }\n    }\n    public static void main(String[] args) {\n        //main线程，主线程\n        //创建一个线程对象\n        TestThread01 thread01 = new TestThread01();\n        //调用start（）方法开启线程\n        thread01.start();\n        for (int i = 0; i < 20; i++) {\n            System.out.println(\"我在学习---\"+i);\n        }\n    }\n}\n```\n\n总结：线程开启不一定立即执行，由cpu调度实行\n\n#### 下载图片案例\n\n```java\nimport org.apache.commons.io.FileUtils;\n\nimport java.io.File;\nimport java.io.IOException;\nimport java.net.URL;\npublic class Download extends Thread{\n    private String url;\n    private String name;\n    public Download(String url,String name){\n        this.url =url;\n        this.name=name;\n    }\n    @Override\n    public void run() {\n        WebDownload download = new WebDownload();\n        download.download(url,name);\n        System.out.println(\"下载了文件：\"+name);\n    }\n    public static void main(String[] args) {\n        Download download=new Download(\"https://images3.alphacoders.com/911/911582.jpg\",\"1.png\");\n        download.start();\n    }\n    //下载器\n    class WebDownload{\n        public void download(String url,String name){\n            try {\n                FileUtils.copyURLToFile(new URL(url),new File(name));\n            } catch (IOException e) {\n                e.printStackTrace();\n                System.out.println(\"io异常\");\n            }\n        }\n    }\n\n}\n```\n\n### 二.实现Runnable接口\n\n```java\n//方式二：实现runnable接口，重写run，执行线程需要丢入runnable接口实现类，调用start()\npublic class TestThread implements Runnable {\n    @Override\n    public void run() {\n        for (int i = 0; i < 20; i++) {\n            System.out.println(\"看我：\" + i);\n        }\n    }\n\n    public static void main(String[] args) {\n        TestThread thread = new TestThread();//创建接口的实现类\n        Thread thread1 = new Thread(thread);//创建线程对象\n        thread1.start();\n\n        for (int i = 0; i < 20; i++) {\n            System.out.println(\"看你：\" + i);\n        }\n    }\n}\n```\n\n![1](1.png)\n\n买票案例测试\n\n```java\npublic class TestThread implements Runnable{\n    //定义票\n    private int ticketNums =10;\n    @Override\n    public void run() {\n        while (true){\n            if (ticketNums<=0){\n                break;\n            }\n            System.out.println(Thread.currentThread().getName()+\"-->拿到了第\"+ticketNums--+\"张票\");\n        }\n    }\n    public static void main(String[] args) {\n        TestThread testThread = new TestThread();\n        new Thread(testThread,\"小明\").start();\n        new Thread(testThread,\"小高\").start();\n        new Thread(testThread,\"我\").start();\n    }\n}\n```\n\n#### 龟兔赛跑案例\n\n```java\npublic class Race implements Runnable{\n    //胜利者\n    private String winner;\n    @Override\n    public void run() {\n        for (int i = 0; i <= 100; i++) {\n\n            if (Thread.currentThread().getName().equals(\"2\")&&i%10==0){\n                try {\n                    Thread.sleep(1);\n                } catch (InterruptedException e) {\n                    e.printStackTrace();\n                }\n            }\n            boolean flag = gameOver(i);\n            if (flag){\n                break;\n            }\n            System.out.println(Thread.currentThread().getName()+\"跑了\"+i+\"步\");\n\n        }\n    }\n\n    private boolean gameOver(int steps){\n        if (winner!=null){\n            return true;\n        }{\n            if (steps >=100){\n                winner = Thread.currentThread().getName();\n                System.out.println(winner+\"赢了\");\n                return true;\n            }\n        }\n        return false;\n    }\n\n\n    public static void main(String[] args) {\n        Race race = new Race();\n        new Thread(race,\"1\").start();\n        new Thread(race,\"2\").start();\n    }\n\n}\n```\n\n总结：多线程操作同一个资源的情况下，线程不安全，数据紊乱\n\n### 三实现Callable接口\n\n```java\nimport org.apache.commons.io.FileUtils;\nimport java.io.File;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.util.concurrent.*;\n\n//方式三：实现Callable方法\npublic class TestCallable implements Callable<Boolean> {\n    private String url;\n    private String name;\n    public TestCallable(String url, String name) {\n        this.url = url;\n        this.name = name;\n    }\n    \n    @Override\n    public Boolean call() {\n        WebDownload webDownload = new WebDownload();\n        webDownload.download(url,name);\n        System.out.println(\"下载了文件：\" + name);\n        return true;\n    }\n    \n    public static void main(String[] args) throws ExecutionException, InterruptedException {\n        TestCallable download = new TestCallable(\"https://images3.alphacoders.com/911/911582.jpg\", \"1.png\");\n        ExecutorService pool = Executors.newFixedThreadPool(1);\n        Future<Boolean> r1 =pool.submit(download);\n        boolean rs1 = r1.get();\n        pool.shutdown();\n    }\n    \n    class WebDownload {\n        public void download(String url, String name) {\n            try {\n                FileUtils.copyURLToFile(new URL(url), new File(name));\n            } catch (IOException e) {\n                e.printStackTrace();\n                System.out.println(\"io异常\");\n            }\n        }\n    }\n\n}\n```\n\n### 四.Lamda表达式\n\n#### 函数式接口\n\n- 理解FUnctional Interface（函数式接口）是学习的关键\n\n- 任何接口，如果只包含唯一一个抽象方法，那么他就是一个函数式接口\n- 我们可以通过lambda表达式来创建改接口的对象\n\n![2](2.png)\n\n#### 代码实现\n\n```java\npublic class TestLambda02 {\n    public static void main(String[] args) {\n ILove love =s->System.out.println(\"I louve\"+s );\n        love.love(\"小明\");\n    }\n}\n\ninterface ILove{\n    void love(String s);\n}\n```\n\n### 五.线程\n\n#### 线程状态\n\n- 创建状态\n- 就绪状态\n- 运行状态\n- 阻塞状态\n- 死亡状态\n\n#### 线程方法\n\nsetPriority ：更改线程的优先级\n\nsleep(long):指定毫秒内沉睡\n\njoin：插队\n\nyield：暂停当前线程对象，执行其他线程\n\nisAlive：测试线程是否处于活动状态\n\n#### 停止方法测试代码实现\n\n```java\npublic class TestStop implements Runnable {\n    //设置标志位\n    private boolean flag = true;\n\n    @Override\n    public void run() {\n        int i = 120;\n        while (flag) {\n            System.out.println(\"run Thread ----------------\" + (i++));\n        }\n    }\n    public void stop() {\n        this.flag = false;\n    }\n\n    public static void main(String[] args) throws InterruptedException {\n        TestStop testStop = new TestStop();\n        new Thread(testStop).start();\n//        Thread.sleep(100);\n        for (int i = 0; i < 100; i++) {\n            System.out.println(\"main\" + i);\n            if (i == 90) {\n                testStop.stop();\n                System.out.println(\"停止\");\n            }\n        }\n    }\n}\n```\n\n#### 线程睡眠代码实现\n\n模拟网络延迟：放大问题的发生性，多线程操作不安全。\n\n```java\npublic class TestSleep implements Runnable{\n    private int ticketNums =10;\n    @Override\n    public void run() {\n        while (true){\n            if (ticketNums<=0){\n                break;\n            }\n            try {\n                Thread.sleep(100);\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n            System.out.println(Thread.currentThread().getName()+\"-->拿到了第\"+ticketNums--+\"张票\");\n        }\n\n    }\n    public static void main(String[] args) {\n        TestSleep testSleep = new TestSleep();\n        new Thread(testSleep,\"小明\").start();\n        new Thread(testSleep,\"小高\").start();\n        new Thread(testSleep,\"我\").start();\n\n\n    }\n}\n```\n\n#### 测试倒计时代码实现\n\n```java\npublic class TestSleep2 implements Runnable {\n    private int date = 10;\n\n    public static void main(String[] args) {\n        TestSleep2 testSleep2 = new TestSleep2();\n        new Thread(testSleep2).start();\n    }\n\n    @Override\n    public void run() {\n        while (true) {\n            try {\n                Thread.sleep(1000);\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n            System.out.println(date++);\n            if (date <= 0) {\n                break;\n            }\n        }\n    }\n}\n```\n\n#### 获取当前时间代码实现\n\n```java\npublic class TestSleep2 implements Runnable {\n    public static void main(String[] args) {\n        Date date = new Date(System.currentTimeMillis());//获取系统当前时间\n        while (true) {\n            try {\n                Thread.sleep(1000);\n                System.out.println(new SimpleDateFormat(\"HH:mm:ss\").format(date));\n                date = new Date(System.currentTimeMillis());//更新当前时间\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n\n        }\n    }\n\n    @Override\n    public void run() {\n    }\n}\n```\n\n### 六.线程同步\n\n#### 同步方法\n\nsynchronized：在方法中加入以实现给方法上锁\n\n```java\npublic class unSafeBuy {\n    public static void main(String[] args) {\n        BuyTicker buyTicker = new BuyTicker();\n        new Thread(buyTicker, \"a\").start();\n        new Thread(buyTicker, \"c\").start();\n        new Thread(buyTicker, \"b\").start();\n\n    }\n}\n\nclass BuyTicker implements Runnable {\n\n    private boolean flag = true;\n    private int ticket = 10;\n\n    @Override\n    public void run() {\n        while (flag) {\n            try {\n                buy();\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n        }\n    }\n\n\n    private synchronized void buy() throws InterruptedException {\n        if (ticket <= 0) {\n            flag = false;\n            return;\n        }\n        Thread.sleep(1);\n        System.out.println(Thread.currentThread().getName() + \"拿到\" + ticket--);\n    }\n\n}\n```\n\n#### lock锁\n\n使用方法在类中定义\n\n```java\nprivate final  ReentrantLock lock =new ReenTrantLock();\n```\n\n然后在void方法中使用lock.lock给线程上锁用try ，finally语句\n\nlock.unlock解锁写入finally中\n\n![](5.png)\n\n","slug":"多线程","published":1,"updated":"2022-11-21T11:55:43.716Z","comments":1,"layout":"post","photos":[],"link":"","_id":"claqy94l20025bklg7yny9z1m","content":"<h2 id=\"多线程\"><a href=\"#多线程\" class=\"headerlink\" title=\"多线程\"></a>多线程</h2><h3 id=\"创建多线程方法\"><a href=\"#创建多线程方法\" class=\"headerlink\" title=\"创建多线程方法\"></a>创建多线程方法</h3><p>1.继承Thread类</p>\n<p>2.实现Runnable接口</p>\n<p>3.实现Callable接口</p>\n<h3 id=\"一-继承Thread类\"><a href=\"#一-继承Thread类\" class=\"headerlink\" title=\"一.继承Thread类\"></a>一.继承Thread类</h3><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">//创建线程方式yi：继承Thread类，重写run()方法，调用start开启线程</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestThread01</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//run方法线程体</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"我在看代码---\"</span><span class=\"token operator\">+</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">//main线程，主线程</span>\n        <span class=\"token comment\">//创建一个线程对象</span>\n        <span class=\"token class-name\">TestThread01</span> thread01 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TestThread01</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//调用start（）方法开启线程</span>\n        thread01<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"我在学习---\"</span><span class=\"token operator\">+</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>总结：线程开启不一定立即执行，由cpu调度实行</p>\n<h4 id=\"下载图片案例\"><a href=\"#下载图片案例\" class=\"headerlink\" title=\"下载图片案例\"></a>下载图片案例</h4><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>commons<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">FileUtils</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">File</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">IOException</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>net<span class=\"token punctuation\">.</span></span>URL<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Download</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> url<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> name<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Download</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> url<span class=\"token punctuation\">,</span><span class=\"token class-name\">String</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>url <span class=\"token operator\">=</span>url<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token operator\">=</span>name<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">WebDownload</span> download <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebDownload</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        download<span class=\"token punctuation\">.</span><span class=\"token function\">download</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"下载了文件：\"</span><span class=\"token operator\">+</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">Download</span> download<span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Download</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"https://images3.alphacoders.com/911/911582.jpg\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"1.png\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        download<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token comment\">//下载器</span>\n    <span class=\"token keyword\">class</span> <span class=\"token class-name\">WebDownload</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">download</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> url<span class=\"token punctuation\">,</span><span class=\"token class-name\">String</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token class-name\">FileUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">copyURLToFile</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token function\">URL</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">File</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"io异常\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"二-实现Runnable接口\"><a href=\"#二-实现Runnable接口\" class=\"headerlink\" title=\"二.实现Runnable接口\"></a>二.实现Runnable接口</h3><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">//方式二：实现runnable接口，重写run，执行线程需要丢入runnable接口实现类，调用start()</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestThread</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Runnable</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"看我：\"</span> <span class=\"token operator\">+</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">TestThread</span> thread <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TestThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//创建接口的实现类</span>\n        <span class=\"token class-name\">Thread</span> thread1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">(</span>thread<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//创建线程对象</span>\n        thread1<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"看你：\"</span> <span class=\"token operator\">+</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><img src=\"/2021/08/15/duo-xian-cheng/1.png\" alt=\"1\"></p>\n<p>买票案例测试</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestThread</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Runnable</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">//定义票</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> ticketNums <span class=\"token operator\">=</span><span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>ticketNums<span class=\"token operator\">&lt;=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Thread</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">\"-->拿到了第\"</span><span class=\"token operator\">+</span>ticketNums<span class=\"token operator\">--</span><span class=\"token operator\">+</span><span class=\"token string\">\"张票\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">TestThread</span> testThread <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TestThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">new</span> <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">(</span>testThread<span class=\"token punctuation\">,</span><span class=\"token string\">\"小明\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">new</span> <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">(</span>testThread<span class=\"token punctuation\">,</span><span class=\"token string\">\"小高\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">new</span> <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">(</span>testThread<span class=\"token punctuation\">,</span><span class=\"token string\">\"我\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"龟兔赛跑案例\"><a href=\"#龟兔赛跑案例\" class=\"headerlink\" title=\"龟兔赛跑案例\"></a>龟兔赛跑案例</h4><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Race</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Runnable</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">//胜利者</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> winner<span class=\"token punctuation\">;</span>\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Thread</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"2\"</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;&amp;</span>i<span class=\"token operator\">%</span><span class=\"token number\">10</span><span class=\"token operator\">==</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n                <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span>\n                    <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">.</span><span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">InterruptedException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                    e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token keyword\">boolean</span> flag <span class=\"token operator\">=</span> <span class=\"token function\">gameOver</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Thread</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">\"跑了\"</span><span class=\"token operator\">+</span>i<span class=\"token operator\">+</span><span class=\"token string\">\"步\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">gameOver</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> steps<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>winner<span class=\"token operator\">!=</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>steps <span class=\"token operator\">>=</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n                winner <span class=\"token operator\">=</span> <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>winner<span class=\"token operator\">+</span><span class=\"token string\">\"赢了\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">Race</span> race <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Race</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">new</span> <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">(</span>race<span class=\"token punctuation\">,</span><span class=\"token string\">\"1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">new</span> <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">(</span>race<span class=\"token punctuation\">,</span><span class=\"token string\">\"2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>总结：多线程操作同一个资源的情况下，线程不安全，数据紊乱</p>\n<h3 id=\"三实现Callable接口\"><a href=\"#三实现Callable接口\" class=\"headerlink\" title=\"三实现Callable接口\"></a>三实现Callable接口</h3><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>commons<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">FileUtils</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">File</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">IOException</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>net<span class=\"token punctuation\">.</span></span>URL<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span>concurrent<span class=\"token punctuation\">.</span></span><span class=\"token operator\">*</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//方式三：实现Callable方法</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestCallable</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Callable</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Boolean</span><span class=\"token punctuation\">></span></span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> url<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> name<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">TestCallable</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> url<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> name<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>url <span class=\"token operator\">=</span> url<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    \n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Boolean</span> <span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">WebDownload</span> webDownload <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebDownload</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        webDownload<span class=\"token punctuation\">.</span><span class=\"token function\">download</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"下载了文件：\"</span> <span class=\"token operator\">+</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    \n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">ExecutionException</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">InterruptedException</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">TestCallable</span> download <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TestCallable</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"https://images3.alphacoders.com/911/911582.jpg\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"1.png\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">ExecutorService</span> pool <span class=\"token operator\">=</span> <span class=\"token class-name\">Executors</span><span class=\"token punctuation\">.</span><span class=\"token function\">newFixedThreadPool</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">Future</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Boolean</span><span class=\"token punctuation\">></span></span> r1 <span class=\"token operator\">=</span>pool<span class=\"token punctuation\">.</span><span class=\"token function\">submit</span><span class=\"token punctuation\">(</span>download<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">boolean</span> rs1 <span class=\"token operator\">=</span> r1<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        pool<span class=\"token punctuation\">.</span><span class=\"token function\">shutdown</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    \n    <span class=\"token keyword\">class</span> <span class=\"token class-name\">WebDownload</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">download</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> url<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> name<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token class-name\">FileUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">copyURLToFile</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token function\">URL</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">File</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"io异常\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"四-Lamda表达式\"><a href=\"#四-Lamda表达式\" class=\"headerlink\" title=\"四.Lamda表达式\"></a>四.Lamda表达式</h3><h4 id=\"函数式接口\"><a href=\"#函数式接口\" class=\"headerlink\" title=\"函数式接口\"></a>函数式接口</h4><ul>\n<li><p>理解FUnctional Interface（函数式接口）是学习的关键</p>\n</li>\n<li><p>任何接口，如果只包含唯一一个抽象方法，那么他就是一个函数式接口</p>\n</li>\n<li><p>我们可以通过lambda表达式来创建改接口的对象</p>\n</li>\n</ul>\n<p><img src=\"/2021/08/15/duo-xian-cheng/2.png\" alt=\"2\"></p>\n<h4 id=\"代码实现\"><a href=\"#代码实现\" class=\"headerlink\" title=\"代码实现\"></a>代码实现</h4><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestLambda02</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n <span class=\"token class-name\">ILove</span> love <span class=\"token operator\">=</span>s<span class=\"token operator\">-></span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"I louve\"</span><span class=\"token operator\">+</span>s <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        love<span class=\"token punctuation\">.</span><span class=\"token function\">love</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"小明\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">ILove</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">love</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"五-线程\"><a href=\"#五-线程\" class=\"headerlink\" title=\"五.线程\"></a>五.线程</h3><h4 id=\"线程状态\"><a href=\"#线程状态\" class=\"headerlink\" title=\"线程状态\"></a>线程状态</h4><ul>\n<li>创建状态</li>\n<li>就绪状态</li>\n<li>运行状态</li>\n<li>阻塞状态</li>\n<li>死亡状态</li>\n</ul>\n<h4 id=\"线程方法\"><a href=\"#线程方法\" class=\"headerlink\" title=\"线程方法\"></a>线程方法</h4><p>setPriority ：更改线程的优先级</p>\n<p>sleep(long):指定毫秒内沉睡</p>\n<p>join：插队</p>\n<p>yield：暂停当前线程对象，执行其他线程</p>\n<p>isAlive：测试线程是否处于活动状态</p>\n<h4 id=\"停止方法测试代码实现\"><a href=\"#停止方法测试代码实现\" class=\"headerlink\" title=\"停止方法测试代码实现\"></a>停止方法测试代码实现</h4><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestStop</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Runnable</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">//设置标志位</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">boolean</span> flag <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">120</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"run Thread ----------------\"</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">stop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>flag <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">InterruptedException</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">TestStop</span> testStop <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TestStop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">new</span> <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">(</span>testStop<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//        Thread.sleep(100);</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"main\"</span> <span class=\"token operator\">+</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">==</span> <span class=\"token number\">90</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                testStop<span class=\"token punctuation\">.</span><span class=\"token function\">stop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"停止\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"线程睡眠代码实现\"><a href=\"#线程睡眠代码实现\" class=\"headerlink\" title=\"线程睡眠代码实现\"></a>线程睡眠代码实现</h4><p>模拟网络延迟：放大问题的发生性，多线程操作不安全。</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestSleep</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Runnable</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> ticketNums <span class=\"token operator\">=</span><span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>ticketNums<span class=\"token operator\">&lt;=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">.</span><span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">InterruptedException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Thread</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">\"-->拿到了第\"</span><span class=\"token operator\">+</span>ticketNums<span class=\"token operator\">--</span><span class=\"token operator\">+</span><span class=\"token string\">\"张票\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">TestSleep</span> testSleep <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TestSleep</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">new</span> <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">(</span>testSleep<span class=\"token punctuation\">,</span><span class=\"token string\">\"小明\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">new</span> <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">(</span>testSleep<span class=\"token punctuation\">,</span><span class=\"token string\">\"小高\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">new</span> <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">(</span>testSleep<span class=\"token punctuation\">,</span><span class=\"token string\">\"我\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"测试倒计时代码实现\"><a href=\"#测试倒计时代码实现\" class=\"headerlink\" title=\"测试倒计时代码实现\"></a>测试倒计时代码实现</h4><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestSleep2</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Runnable</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> date <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">TestSleep2</span> testSleep2 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TestSleep2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">new</span> <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">(</span>testSleep2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">.</span><span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">InterruptedException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>date<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>date <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"获取当前时间代码实现\"><a href=\"#获取当前时间代码实现\" class=\"headerlink\" title=\"获取当前时间代码实现\"></a>获取当前时间代码实现</h4><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestSleep2</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Runnable</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">Date</span> date <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentTimeMillis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//获取系统当前时间</span>\n        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">.</span><span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">SimpleDateFormat</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"HH:mm:ss\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span>date<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                date <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentTimeMillis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//更新当前时间</span>\n            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">InterruptedException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"六-线程同步\"><a href=\"#六-线程同步\" class=\"headerlink\" title=\"六.线程同步\"></a>六.线程同步</h3><h4 id=\"同步方法\"><a href=\"#同步方法\" class=\"headerlink\" title=\"同步方法\"></a>同步方法</h4><p>synchronized：在方法中加入以实现给方法上锁</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> unSafeBuy <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">BuyTicker</span> buyTicker <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BuyTicker</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">new</span> <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">(</span>buyTicker<span class=\"token punctuation\">,</span> <span class=\"token string\">\"a\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">new</span> <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">(</span>buyTicker<span class=\"token punctuation\">,</span> <span class=\"token string\">\"c\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">new</span> <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">(</span>buyTicker<span class=\"token punctuation\">,</span> <span class=\"token string\">\"b\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">BuyTicker</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Runnable</span> <span class=\"token punctuation\">&#123;</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">boolean</span> flag <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> ticket <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token function\">buy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">InterruptedException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">synchronized</span> <span class=\"token keyword\">void</span> <span class=\"token function\">buy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">InterruptedException</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>ticket <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            flag <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">.</span><span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Thread</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"拿到\"</span> <span class=\"token operator\">+</span> ticket<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"lock锁\"><a href=\"#lock锁\" class=\"headerlink\" title=\"lock锁\"></a>lock锁</h4><p>使用方法在类中定义</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">private</span> <span class=\"token keyword\">final</span>  <span class=\"token class-name\">ReentrantLock</span> lock <span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">ReenTrantLock</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>然后在void方法中使用lock.lock给线程上锁用try ，finally语句</p>\n<p>lock.unlock解锁写入finally中</p>\n<p><img src=\"/2021/08/15/duo-xian-cheng/5.png\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"多线程\"><a href=\"#多线程\" class=\"headerlink\" title=\"多线程\"></a>多线程</h2><h3 id=\"创建多线程方法\"><a href=\"#创建多线程方法\" class=\"headerlink\" title=\"创建多线程方法\"></a>创建多线程方法</h3><p>1.继承Thread类</p>\n<p>2.实现Runnable接口</p>\n<p>3.实现Callable接口</p>\n<h3 id=\"一-继承Thread类\"><a href=\"#一-继承Thread类\" class=\"headerlink\" title=\"一.继承Thread类\"></a>一.继承Thread类</h3><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">//创建线程方式yi：继承Thread类，重写run()方法，调用start开启线程</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestThread01</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//run方法线程体</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"我在看代码---\"</span><span class=\"token operator\">+</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">//main线程，主线程</span>\n        <span class=\"token comment\">//创建一个线程对象</span>\n        <span class=\"token class-name\">TestThread01</span> thread01 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TestThread01</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//调用start（）方法开启线程</span>\n        thread01<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"我在学习---\"</span><span class=\"token operator\">+</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>总结：线程开启不一定立即执行，由cpu调度实行</p>\n<h4 id=\"下载图片案例\"><a href=\"#下载图片案例\" class=\"headerlink\" title=\"下载图片案例\"></a>下载图片案例</h4><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>commons<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">FileUtils</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">File</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">IOException</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>net<span class=\"token punctuation\">.</span></span>URL<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Download</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> url<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> name<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Download</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> url<span class=\"token punctuation\">,</span><span class=\"token class-name\">String</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>url <span class=\"token operator\">=</span>url<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token operator\">=</span>name<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">WebDownload</span> download <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebDownload</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        download<span class=\"token punctuation\">.</span><span class=\"token function\">download</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"下载了文件：\"</span><span class=\"token operator\">+</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">Download</span> download<span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Download</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"https://images3.alphacoders.com/911/911582.jpg\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"1.png\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        download<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token comment\">//下载器</span>\n    <span class=\"token keyword\">class</span> <span class=\"token class-name\">WebDownload</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">download</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> url<span class=\"token punctuation\">,</span><span class=\"token class-name\">String</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token class-name\">FileUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">copyURLToFile</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token function\">URL</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">File</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"io异常\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"二-实现Runnable接口\"><a href=\"#二-实现Runnable接口\" class=\"headerlink\" title=\"二.实现Runnable接口\"></a>二.实现Runnable接口</h3><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">//方式二：实现runnable接口，重写run，执行线程需要丢入runnable接口实现类，调用start()</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestThread</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Runnable</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"看我：\"</span> <span class=\"token operator\">+</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">TestThread</span> thread <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TestThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//创建接口的实现类</span>\n        <span class=\"token class-name\">Thread</span> thread1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">(</span>thread<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//创建线程对象</span>\n        thread1<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"看你：\"</span> <span class=\"token operator\">+</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><img src=\"/2021/08/15/duo-xian-cheng/1.png\" alt=\"1\"></p>\n<p>买票案例测试</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestThread</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Runnable</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">//定义票</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> ticketNums <span class=\"token operator\">=</span><span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>ticketNums<span class=\"token operator\">&lt;=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Thread</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">\"-->拿到了第\"</span><span class=\"token operator\">+</span>ticketNums<span class=\"token operator\">--</span><span class=\"token operator\">+</span><span class=\"token string\">\"张票\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">TestThread</span> testThread <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TestThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">new</span> <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">(</span>testThread<span class=\"token punctuation\">,</span><span class=\"token string\">\"小明\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">new</span> <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">(</span>testThread<span class=\"token punctuation\">,</span><span class=\"token string\">\"小高\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">new</span> <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">(</span>testThread<span class=\"token punctuation\">,</span><span class=\"token string\">\"我\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"龟兔赛跑案例\"><a href=\"#龟兔赛跑案例\" class=\"headerlink\" title=\"龟兔赛跑案例\"></a>龟兔赛跑案例</h4><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Race</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Runnable</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">//胜利者</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> winner<span class=\"token punctuation\">;</span>\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Thread</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"2\"</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;&amp;</span>i<span class=\"token operator\">%</span><span class=\"token number\">10</span><span class=\"token operator\">==</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n                <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span>\n                    <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">.</span><span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">InterruptedException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                    e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token keyword\">boolean</span> flag <span class=\"token operator\">=</span> <span class=\"token function\">gameOver</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Thread</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">\"跑了\"</span><span class=\"token operator\">+</span>i<span class=\"token operator\">+</span><span class=\"token string\">\"步\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">gameOver</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> steps<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>winner<span class=\"token operator\">!=</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>steps <span class=\"token operator\">>=</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n                winner <span class=\"token operator\">=</span> <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>winner<span class=\"token operator\">+</span><span class=\"token string\">\"赢了\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">Race</span> race <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Race</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">new</span> <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">(</span>race<span class=\"token punctuation\">,</span><span class=\"token string\">\"1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">new</span> <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">(</span>race<span class=\"token punctuation\">,</span><span class=\"token string\">\"2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>总结：多线程操作同一个资源的情况下，线程不安全，数据紊乱</p>\n<h3 id=\"三实现Callable接口\"><a href=\"#三实现Callable接口\" class=\"headerlink\" title=\"三实现Callable接口\"></a>三实现Callable接口</h3><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>commons<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">FileUtils</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">File</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">IOException</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>net<span class=\"token punctuation\">.</span></span>URL<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span>concurrent<span class=\"token punctuation\">.</span></span><span class=\"token operator\">*</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//方式三：实现Callable方法</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestCallable</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Callable</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Boolean</span><span class=\"token punctuation\">></span></span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> url<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> name<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">TestCallable</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> url<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> name<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>url <span class=\"token operator\">=</span> url<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    \n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Boolean</span> <span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">WebDownload</span> webDownload <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebDownload</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        webDownload<span class=\"token punctuation\">.</span><span class=\"token function\">download</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"下载了文件：\"</span> <span class=\"token operator\">+</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    \n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">ExecutionException</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">InterruptedException</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">TestCallable</span> download <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TestCallable</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"https://images3.alphacoders.com/911/911582.jpg\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"1.png\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">ExecutorService</span> pool <span class=\"token operator\">=</span> <span class=\"token class-name\">Executors</span><span class=\"token punctuation\">.</span><span class=\"token function\">newFixedThreadPool</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">Future</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Boolean</span><span class=\"token punctuation\">></span></span> r1 <span class=\"token operator\">=</span>pool<span class=\"token punctuation\">.</span><span class=\"token function\">submit</span><span class=\"token punctuation\">(</span>download<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">boolean</span> rs1 <span class=\"token operator\">=</span> r1<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        pool<span class=\"token punctuation\">.</span><span class=\"token function\">shutdown</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    \n    <span class=\"token keyword\">class</span> <span class=\"token class-name\">WebDownload</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">download</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> url<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> name<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token class-name\">FileUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">copyURLToFile</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token function\">URL</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">File</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"io异常\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"四-Lamda表达式\"><a href=\"#四-Lamda表达式\" class=\"headerlink\" title=\"四.Lamda表达式\"></a>四.Lamda表达式</h3><h4 id=\"函数式接口\"><a href=\"#函数式接口\" class=\"headerlink\" title=\"函数式接口\"></a>函数式接口</h4><ul>\n<li><p>理解FUnctional Interface（函数式接口）是学习的关键</p>\n</li>\n<li><p>任何接口，如果只包含唯一一个抽象方法，那么他就是一个函数式接口</p>\n</li>\n<li><p>我们可以通过lambda表达式来创建改接口的对象</p>\n</li>\n</ul>\n<p><img src=\"/2021/08/15/duo-xian-cheng/2.png\" alt=\"2\"></p>\n<h4 id=\"代码实现\"><a href=\"#代码实现\" class=\"headerlink\" title=\"代码实现\"></a>代码实现</h4><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestLambda02</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n <span class=\"token class-name\">ILove</span> love <span class=\"token operator\">=</span>s<span class=\"token operator\">-></span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"I louve\"</span><span class=\"token operator\">+</span>s <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        love<span class=\"token punctuation\">.</span><span class=\"token function\">love</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"小明\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">ILove</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">love</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"五-线程\"><a href=\"#五-线程\" class=\"headerlink\" title=\"五.线程\"></a>五.线程</h3><h4 id=\"线程状态\"><a href=\"#线程状态\" class=\"headerlink\" title=\"线程状态\"></a>线程状态</h4><ul>\n<li>创建状态</li>\n<li>就绪状态</li>\n<li>运行状态</li>\n<li>阻塞状态</li>\n<li>死亡状态</li>\n</ul>\n<h4 id=\"线程方法\"><a href=\"#线程方法\" class=\"headerlink\" title=\"线程方法\"></a>线程方法</h4><p>setPriority ：更改线程的优先级</p>\n<p>sleep(long):指定毫秒内沉睡</p>\n<p>join：插队</p>\n<p>yield：暂停当前线程对象，执行其他线程</p>\n<p>isAlive：测试线程是否处于活动状态</p>\n<h4 id=\"停止方法测试代码实现\"><a href=\"#停止方法测试代码实现\" class=\"headerlink\" title=\"停止方法测试代码实现\"></a>停止方法测试代码实现</h4><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestStop</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Runnable</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">//设置标志位</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">boolean</span> flag <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">120</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"run Thread ----------------\"</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">stop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>flag <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">InterruptedException</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">TestStop</span> testStop <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TestStop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">new</span> <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">(</span>testStop<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//        Thread.sleep(100);</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"main\"</span> <span class=\"token operator\">+</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">==</span> <span class=\"token number\">90</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                testStop<span class=\"token punctuation\">.</span><span class=\"token function\">stop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"停止\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"线程睡眠代码实现\"><a href=\"#线程睡眠代码实现\" class=\"headerlink\" title=\"线程睡眠代码实现\"></a>线程睡眠代码实现</h4><p>模拟网络延迟：放大问题的发生性，多线程操作不安全。</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestSleep</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Runnable</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> ticketNums <span class=\"token operator\">=</span><span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>ticketNums<span class=\"token operator\">&lt;=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">.</span><span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">InterruptedException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Thread</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">\"-->拿到了第\"</span><span class=\"token operator\">+</span>ticketNums<span class=\"token operator\">--</span><span class=\"token operator\">+</span><span class=\"token string\">\"张票\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">TestSleep</span> testSleep <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TestSleep</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">new</span> <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">(</span>testSleep<span class=\"token punctuation\">,</span><span class=\"token string\">\"小明\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">new</span> <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">(</span>testSleep<span class=\"token punctuation\">,</span><span class=\"token string\">\"小高\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">new</span> <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">(</span>testSleep<span class=\"token punctuation\">,</span><span class=\"token string\">\"我\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"测试倒计时代码实现\"><a href=\"#测试倒计时代码实现\" class=\"headerlink\" title=\"测试倒计时代码实现\"></a>测试倒计时代码实现</h4><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestSleep2</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Runnable</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> date <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">TestSleep2</span> testSleep2 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TestSleep2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">new</span> <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">(</span>testSleep2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">.</span><span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">InterruptedException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>date<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>date <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"获取当前时间代码实现\"><a href=\"#获取当前时间代码实现\" class=\"headerlink\" title=\"获取当前时间代码实现\"></a>获取当前时间代码实现</h4><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestSleep2</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Runnable</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">Date</span> date <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentTimeMillis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//获取系统当前时间</span>\n        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">.</span><span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">SimpleDateFormat</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"HH:mm:ss\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span>date<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                date <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentTimeMillis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//更新当前时间</span>\n            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">InterruptedException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"六-线程同步\"><a href=\"#六-线程同步\" class=\"headerlink\" title=\"六.线程同步\"></a>六.线程同步</h3><h4 id=\"同步方法\"><a href=\"#同步方法\" class=\"headerlink\" title=\"同步方法\"></a>同步方法</h4><p>synchronized：在方法中加入以实现给方法上锁</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> unSafeBuy <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">BuyTicker</span> buyTicker <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BuyTicker</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">new</span> <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">(</span>buyTicker<span class=\"token punctuation\">,</span> <span class=\"token string\">\"a\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">new</span> <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">(</span>buyTicker<span class=\"token punctuation\">,</span> <span class=\"token string\">\"c\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">new</span> <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">(</span>buyTicker<span class=\"token punctuation\">,</span> <span class=\"token string\">\"b\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">BuyTicker</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Runnable</span> <span class=\"token punctuation\">&#123;</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">boolean</span> flag <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> ticket <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token function\">buy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">InterruptedException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">synchronized</span> <span class=\"token keyword\">void</span> <span class=\"token function\">buy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">InterruptedException</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>ticket <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            flag <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">.</span><span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Thread</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"拿到\"</span> <span class=\"token operator\">+</span> ticket<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"lock锁\"><a href=\"#lock锁\" class=\"headerlink\" title=\"lock锁\"></a>lock锁</h4><p>使用方法在类中定义</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">private</span> <span class=\"token keyword\">final</span>  <span class=\"token class-name\">ReentrantLock</span> lock <span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">ReenTrantLock</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>然后在void方法中使用lock.lock给线程上锁用try ，finally语句</p>\n<p>lock.unlock解锁写入finally中</p>\n<p><img src=\"/2021/08/15/duo-xian-cheng/5.png\"></p>\n"},{"title":"枚举","top":false,"cover":false,"toc":true,"mathjax":true,"date":"2021-08-16T15:21:28.000Z","password":null,"summary":null,"_content":"\n## 枚举\n\n### 1书写格式\n\n变量不可重复，用大写字母定义\n\n```java\npublic enum Season {\n    SPRING,SUMMER,AUTUMN,WINTER;\n}\n```\n\n### 2枚举创建 \n\n```java\npublic void test1(){\n    //枚举创建\n    Season season=Season.SPRING;\n}\n```\n\n### 3常用方法\n\nvalues：方法返回在枚举中按照声明顺序产生的常量值组成的数组\n\n```java\npublic void test2(){\n    Season[] values = Season.values();\n    for (Season season:values) {\n        System.out.println(season);\n    }\n}\n/**SPRING\n*SUMMER\n*AUTUMN\n*WINTER\n*/\n```\n\nordinal：某个枚举常量的索引\n\n### 构造方法\n\n只能由private修饰\n\n常量必须在最前面定义\n\n```java\npublic enum light {\n    RED,YELLOW,GREEN;\n}\n```\n\n#### 红绿灯案例\n\n```java\npublic static void main(String[] args) {\n        test1 test1 = new test1();\n        test1.test3();\n    }\n    private light light1 = light.RED;\n    public void change(){\n        switch (this.light1){\n            case RED:\n                this.light1=light.YELLOW;\n                break;\n            case GREEN:\n                this.light1=light.RED;\n                break;\n            case YELLOW:\n                this.light1=light.GREEN;\n        }\n    }\npublic void test3(){\n    for (int i = 0; i < 10; i++) {\n        this.change();\n        System.out.println(this.light1);\n\n    }\n}\n\n}\n```\n\n","source":"_posts/枚举.md","raw":"---\ntitle: 枚举\ntop: false\ncover: false\ntoc: true\nmathjax: true\ndate: 2021-08-16 23:21:28\npassword:\nsummary:\ntags: notes\ncategories: Enum\n---\n\n## 枚举\n\n### 1书写格式\n\n变量不可重复，用大写字母定义\n\n```java\npublic enum Season {\n    SPRING,SUMMER,AUTUMN,WINTER;\n}\n```\n\n### 2枚举创建 \n\n```java\npublic void test1(){\n    //枚举创建\n    Season season=Season.SPRING;\n}\n```\n\n### 3常用方法\n\nvalues：方法返回在枚举中按照声明顺序产生的常量值组成的数组\n\n```java\npublic void test2(){\n    Season[] values = Season.values();\n    for (Season season:values) {\n        System.out.println(season);\n    }\n}\n/**SPRING\n*SUMMER\n*AUTUMN\n*WINTER\n*/\n```\n\nordinal：某个枚举常量的索引\n\n### 构造方法\n\n只能由private修饰\n\n常量必须在最前面定义\n\n```java\npublic enum light {\n    RED,YELLOW,GREEN;\n}\n```\n\n#### 红绿灯案例\n\n```java\npublic static void main(String[] args) {\n        test1 test1 = new test1();\n        test1.test3();\n    }\n    private light light1 = light.RED;\n    public void change(){\n        switch (this.light1){\n            case RED:\n                this.light1=light.YELLOW;\n                break;\n            case GREEN:\n                this.light1=light.RED;\n                break;\n            case YELLOW:\n                this.light1=light.GREEN;\n        }\n    }\npublic void test3(){\n    for (int i = 0; i < 10; i++) {\n        this.change();\n        System.out.println(this.light1);\n\n    }\n}\n\n}\n```\n\n","slug":"枚举","published":1,"updated":"2022-11-21T11:55:43.725Z","comments":1,"layout":"post","photos":[],"link":"","_id":"claqy94l30026bklgcv1j58ot","content":"<h2 id=\"枚举\"><a href=\"#枚举\" class=\"headerlink\" title=\"枚举\"></a>枚举</h2><h3 id=\"1书写格式\"><a href=\"#1书写格式\" class=\"headerlink\" title=\"1书写格式\"></a>1书写格式</h3><p>变量不可重复，用大写字母定义</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">enum</span> <span class=\"token class-name\">Season</span> <span class=\"token punctuation\">&#123;</span>\n    SPRING<span class=\"token punctuation\">,</span>SUMMER<span class=\"token punctuation\">,</span>AUTUMN<span class=\"token punctuation\">,</span>WINTER<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"2枚举创建\"><a href=\"#2枚举创建\" class=\"headerlink\" title=\"2枚举创建\"></a>2枚举创建</h3><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">test1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">//枚举创建</span>\n    <span class=\"token class-name\">Season</span> season<span class=\"token operator\">=</span><span class=\"token class-name\">Season</span><span class=\"token punctuation\">.</span>SPRING<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"3常用方法\"><a href=\"#3常用方法\" class=\"headerlink\" title=\"3常用方法\"></a>3常用方法</h3><p>values：方法返回在枚举中按照声明顺序产生的常量值组成的数组</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">test2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token class-name\">Season</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> values <span class=\"token operator\">=</span> <span class=\"token class-name\">Season</span><span class=\"token punctuation\">.</span><span class=\"token function\">values</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Season</span> season<span class=\"token operator\">:</span>values<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>season<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token comment\">/**SPRING\n*SUMMER\n*AUTUMN\n*WINTER\n*/</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>ordinal：某个枚举常量的索引</p>\n<h3 id=\"构造方法\"><a href=\"#构造方法\" class=\"headerlink\" title=\"构造方法\"></a>构造方法</h3><p>只能由private修饰</p>\n<p>常量必须在最前面定义</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">enum</span> light <span class=\"token punctuation\">&#123;</span>\n    RED<span class=\"token punctuation\">,</span>YELLOW<span class=\"token punctuation\">,</span>GREEN<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"红绿灯案例\"><a href=\"#红绿灯案例\" class=\"headerlink\" title=\"红绿灯案例\"></a>红绿灯案例</h4><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        test1 test1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token function\">test1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        test1<span class=\"token punctuation\">.</span><span class=\"token function\">test3</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">private</span> light light1 <span class=\"token operator\">=</span> light<span class=\"token punctuation\">.</span>RED<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">change</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>light1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">case</span> RED<span class=\"token operator\">:</span>\n                <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>light1<span class=\"token operator\">=</span>light<span class=\"token punctuation\">.</span>YELLOW<span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">case</span> GREEN<span class=\"token operator\">:</span>\n                <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>light1<span class=\"token operator\">=</span>light<span class=\"token punctuation\">.</span>RED<span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">case</span> YELLOW<span class=\"token operator\">:</span>\n                <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>light1<span class=\"token operator\">=</span>light<span class=\"token punctuation\">.</span>GREEN<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">test3</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">change</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>light1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"枚举\"><a href=\"#枚举\" class=\"headerlink\" title=\"枚举\"></a>枚举</h2><h3 id=\"1书写格式\"><a href=\"#1书写格式\" class=\"headerlink\" title=\"1书写格式\"></a>1书写格式</h3><p>变量不可重复，用大写字母定义</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">enum</span> <span class=\"token class-name\">Season</span> <span class=\"token punctuation\">&#123;</span>\n    SPRING<span class=\"token punctuation\">,</span>SUMMER<span class=\"token punctuation\">,</span>AUTUMN<span class=\"token punctuation\">,</span>WINTER<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"2枚举创建\"><a href=\"#2枚举创建\" class=\"headerlink\" title=\"2枚举创建\"></a>2枚举创建</h3><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">test1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">//枚举创建</span>\n    <span class=\"token class-name\">Season</span> season<span class=\"token operator\">=</span><span class=\"token class-name\">Season</span><span class=\"token punctuation\">.</span>SPRING<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"3常用方法\"><a href=\"#3常用方法\" class=\"headerlink\" title=\"3常用方法\"></a>3常用方法</h3><p>values：方法返回在枚举中按照声明顺序产生的常量值组成的数组</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">test2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token class-name\">Season</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> values <span class=\"token operator\">=</span> <span class=\"token class-name\">Season</span><span class=\"token punctuation\">.</span><span class=\"token function\">values</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Season</span> season<span class=\"token operator\">:</span>values<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>season<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token comment\">/**SPRING\n*SUMMER\n*AUTUMN\n*WINTER\n*/</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>ordinal：某个枚举常量的索引</p>\n<h3 id=\"构造方法\"><a href=\"#构造方法\" class=\"headerlink\" title=\"构造方法\"></a>构造方法</h3><p>只能由private修饰</p>\n<p>常量必须在最前面定义</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">enum</span> light <span class=\"token punctuation\">&#123;</span>\n    RED<span class=\"token punctuation\">,</span>YELLOW<span class=\"token punctuation\">,</span>GREEN<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"红绿灯案例\"><a href=\"#红绿灯案例\" class=\"headerlink\" title=\"红绿灯案例\"></a>红绿灯案例</h4><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        test1 test1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token function\">test1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        test1<span class=\"token punctuation\">.</span><span class=\"token function\">test3</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">private</span> light light1 <span class=\"token operator\">=</span> light<span class=\"token punctuation\">.</span>RED<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">change</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>light1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">case</span> RED<span class=\"token operator\">:</span>\n                <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>light1<span class=\"token operator\">=</span>light<span class=\"token punctuation\">.</span>YELLOW<span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">case</span> GREEN<span class=\"token operator\">:</span>\n                <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>light1<span class=\"token operator\">=</span>light<span class=\"token punctuation\">.</span>RED<span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">case</span> YELLOW<span class=\"token operator\">:</span>\n                <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>light1<span class=\"token operator\">=</span>light<span class=\"token punctuation\">.</span>GREEN<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">test3</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">change</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>light1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n"},{"title":"面向对象","top":false,"cover":false,"toc":true,"mathjax":true,"date":"2021-08-21T15:05:14.000Z","password":null,"summary":null,"_content":"\n# 面向对象概述\n\n## 本章重点\n\n- 类与方法\n- 构造方法\n- 访问权限\n- 继承\n- 多态\n- 抽象和接口\n- 内存分析\n\n##    面向对象和面向过程\n\n面向对象：侧重的是对象，自己是上帝视角，你创建大象，告诉大象，进冰箱，不用管它怎么进\n\n优点：可扩展性强，维护成本低\n\n缺点：新手上手难\n\n面向过程：侧重的是过程，如何大象装冰箱，第一步打开门，第二步装大象，第三步关门。\n\n优点：简单\n\n缺点：代码量大了维护性非常差\n\n## 构造放法\n\n在创建对象的时候自动调用的方法\n\n语法：\n\n```java\npublic 类名(传参){\n  \n}\n```\n\n注意：\n\n- 没有返回值\n- 在我们new的时候，自动调用构造方法\n\n作用：在创建对象的时候，给对象设置属性信息\n\n![image-20210821122825731](1.png)\n\n## 构造方法的重载\n\n构造方法也是方法，也可以重载\n\n作用：可以用更多的方式去创建对象\n\n使用this可以访问其他构造方法  this()\n\n![image-20210821123534551](2.png)\n\n## 练习\n\n1.面向对象的思维来模拟LOL里的盖伦上阵杀敌\n\n![image-20210821124826776](3.png)\n\n2.用面向对象的思维完成植物大战僵尸\n\n植物\n\n![image-20210821124846522](4.png)\n\n僵尸\n\n![image-20210821124901131](5.png)\n\n场景\n\n![image-20210821124913078](6.png)\n\n## static\n\n静态的内容在内存中是保留一份，并且各个对象之间进行共享\n\n![image-20210821125957988](7.png)\n\n推荐使用类名去访问\n\n特点：\n\n- 数据共享\n- 属于类的，不属于对象\n- 优先于对象产生\n\n通用构造器，静态构造器\n\n创建对象的过程：\n\n1静态构造器\n\n2通用构造器\n\n构造方法—>创建对象\n\n## 包和导包\n\n包：本质上是文件夹\n\n导包：import包+类\n\n不需要导包：\n\n- 在自己包里\n- java.lang包下的所有内容不用导包\n  - String\n  - System.out.print\n\n## 访问权限\n\npublic：公共的  哪里都可以使用\n\nprivate：私有的  只有自己的类里可以使用\n\ndefault：包访问权限   在自己的包里可以使用\n\n## 继承\n\n继承：子类可以自动拥有父类中除了私有内容外的其他所有内容\n\n```java\npublic class 类 extends 父类{\n  \n}\n```\n\n作用：简化代码   \t\t重复操作的行为可写为父类\n\n子类对父类进行了扩展\n\n## super关键字\n\nsuper：表示父类中的内容\n\nThis：表示自己类中的内容\n\n用super和this来区分父类和子类中重要的内容\n\n创建对象的过程：先创建父类的对象然后创建子类的对象\n\n![image-20210821135635313](8.png)\n\n小总结：\n\n- super可以获取父类中的内容\n- 可以调用父类中的构造方法，必须卸载子类构造方法的第一行，如果父类的构造是无参的可以不写，如果有参数必须要写\n\n## 练习2\n\n![image-20210821135729924](9.png)\n\n### 代码实现\n\n```java\npublic class Game {\n    public void start(){\n        System.out.println(\"开机，准备就绪\");\n    }\n\n    public void play(){\n        System.out.println(\"我要打游戏\");\n    }\n    public void end(){\n        System.out.println(\"关机，睡觉\");\n    }\n}\n```\n\n```java\npublic class DNF extends Game{\n    public void play(){\n        System.out.println(\"玩DNF\");\n    }\n}\n```\n\n```java\npublic class LOL extends Game{\n    public void play(){\n        System.out.println(\"玩LOL\");\n    }\n}\n```\n\n```java\npublic class CS extends Game{\n    public void play(){\n        System.out.println(\"玩CS\");\n    }\n}\n```\n\n```java\npublic class Palyer{\n    public void happy(Game game){\n        game.start();\n        game.play();\n        game.end();\n        System.out.println(\"开心\");\n\n    }\n}\n```\n\n```java\npublic class Client {\n    public static void main(String[] args) {\n        Game game1 =new DNF();\n        Game game2 =new LOL();\n        Game game3 =new CS();\n        Palyer palyer =new Palyer();\n        palyer.happy(game1);\n        palyer.happy(game3);\n        palyer.happy(game2);\n    }\n}\n```\n\n## final\n\n- 被final修饰的变量不可以被改变\n\n- 被final修饰的方法不可以重写\n\n- 被final修饰的类不可以被继承\n\n  final是不可变的\n\n## 抽象\n\n抽象类：如果一个类中有抽象方法，这个类必须是抽象类\n\n抽象方法：使用abstract来修饰，不可以有方法体，直接用分好结束\n\n特点：\n\n- 抽象类不可以创建对象\n- 抽象类的子类，必须重写父类中的抽像方法，否则子类必须是抽象类\n- 通过抽象类可以强制的要求子类中必须有的方法‘\n- 抽象类中可以有正常的方法\n\n## 成员变量初始值\n\njava中所有的变量必须先声明后赋值才能使用\n\nJava中成员变量，在创建对象的时候，都会执行一次初始化操作，都会给一个默认自\n\n基本数据类型默认值都是0，包括boolean->false\n\n引用数据类型：null\n\n## equals和==\n\n==判断左右两端的 数据类型是否一致\n\nequals：判断两个对象是否相等\n\n字符串要用equals来判断\n\n==判断的是内存地址\n\nequals判断的是值\n\n![image-20210821213308999](10.png)\n\n## 异常\n\n### 程序错误分三种\n\n1.编译错误\n\n2.运行时错误\n\n3逻辑错误\n\n![1](21.png)\n\n### 错误与异常的区别\n\n错误：是无法被处理的，程序在运行中出现的比较严重的问题\n\n异常：能够被程序本身处理的\n\n父类不声明异常继承的子类也不可以声明异常\n\n父类声明异常，子类声明的异常不能超过父类异常的范围\n\n### 为什么要自定义异常\n\n- 1.封装\n\n- 2.快速定位\n\n自定义异常步骤\n\n- 创建类\n- 继承Exception类或者Exception子类\n- 重写构造方法\n\n![2](22.png)\n\n","source":"_posts/面向对象.md","raw":"---\ntitle: 面向对象\ntop: false\ncover: false\ntoc: true\nmathjax: true\ndate: 2021-08-21 23:05:14\npassword:\nsummary:\ntags: notes\ncategories: object\n---\n\n# 面向对象概述\n\n## 本章重点\n\n- 类与方法\n- 构造方法\n- 访问权限\n- 继承\n- 多态\n- 抽象和接口\n- 内存分析\n\n##    面向对象和面向过程\n\n面向对象：侧重的是对象，自己是上帝视角，你创建大象，告诉大象，进冰箱，不用管它怎么进\n\n优点：可扩展性强，维护成本低\n\n缺点：新手上手难\n\n面向过程：侧重的是过程，如何大象装冰箱，第一步打开门，第二步装大象，第三步关门。\n\n优点：简单\n\n缺点：代码量大了维护性非常差\n\n## 构造放法\n\n在创建对象的时候自动调用的方法\n\n语法：\n\n```java\npublic 类名(传参){\n  \n}\n```\n\n注意：\n\n- 没有返回值\n- 在我们new的时候，自动调用构造方法\n\n作用：在创建对象的时候，给对象设置属性信息\n\n![image-20210821122825731](1.png)\n\n## 构造方法的重载\n\n构造方法也是方法，也可以重载\n\n作用：可以用更多的方式去创建对象\n\n使用this可以访问其他构造方法  this()\n\n![image-20210821123534551](2.png)\n\n## 练习\n\n1.面向对象的思维来模拟LOL里的盖伦上阵杀敌\n\n![image-20210821124826776](3.png)\n\n2.用面向对象的思维完成植物大战僵尸\n\n植物\n\n![image-20210821124846522](4.png)\n\n僵尸\n\n![image-20210821124901131](5.png)\n\n场景\n\n![image-20210821124913078](6.png)\n\n## static\n\n静态的内容在内存中是保留一份，并且各个对象之间进行共享\n\n![image-20210821125957988](7.png)\n\n推荐使用类名去访问\n\n特点：\n\n- 数据共享\n- 属于类的，不属于对象\n- 优先于对象产生\n\n通用构造器，静态构造器\n\n创建对象的过程：\n\n1静态构造器\n\n2通用构造器\n\n构造方法—>创建对象\n\n## 包和导包\n\n包：本质上是文件夹\n\n导包：import包+类\n\n不需要导包：\n\n- 在自己包里\n- java.lang包下的所有内容不用导包\n  - String\n  - System.out.print\n\n## 访问权限\n\npublic：公共的  哪里都可以使用\n\nprivate：私有的  只有自己的类里可以使用\n\ndefault：包访问权限   在自己的包里可以使用\n\n## 继承\n\n继承：子类可以自动拥有父类中除了私有内容外的其他所有内容\n\n```java\npublic class 类 extends 父类{\n  \n}\n```\n\n作用：简化代码   \t\t重复操作的行为可写为父类\n\n子类对父类进行了扩展\n\n## super关键字\n\nsuper：表示父类中的内容\n\nThis：表示自己类中的内容\n\n用super和this来区分父类和子类中重要的内容\n\n创建对象的过程：先创建父类的对象然后创建子类的对象\n\n![image-20210821135635313](8.png)\n\n小总结：\n\n- super可以获取父类中的内容\n- 可以调用父类中的构造方法，必须卸载子类构造方法的第一行，如果父类的构造是无参的可以不写，如果有参数必须要写\n\n## 练习2\n\n![image-20210821135729924](9.png)\n\n### 代码实现\n\n```java\npublic class Game {\n    public void start(){\n        System.out.println(\"开机，准备就绪\");\n    }\n\n    public void play(){\n        System.out.println(\"我要打游戏\");\n    }\n    public void end(){\n        System.out.println(\"关机，睡觉\");\n    }\n}\n```\n\n```java\npublic class DNF extends Game{\n    public void play(){\n        System.out.println(\"玩DNF\");\n    }\n}\n```\n\n```java\npublic class LOL extends Game{\n    public void play(){\n        System.out.println(\"玩LOL\");\n    }\n}\n```\n\n```java\npublic class CS extends Game{\n    public void play(){\n        System.out.println(\"玩CS\");\n    }\n}\n```\n\n```java\npublic class Palyer{\n    public void happy(Game game){\n        game.start();\n        game.play();\n        game.end();\n        System.out.println(\"开心\");\n\n    }\n}\n```\n\n```java\npublic class Client {\n    public static void main(String[] args) {\n        Game game1 =new DNF();\n        Game game2 =new LOL();\n        Game game3 =new CS();\n        Palyer palyer =new Palyer();\n        palyer.happy(game1);\n        palyer.happy(game3);\n        palyer.happy(game2);\n    }\n}\n```\n\n## final\n\n- 被final修饰的变量不可以被改变\n\n- 被final修饰的方法不可以重写\n\n- 被final修饰的类不可以被继承\n\n  final是不可变的\n\n## 抽象\n\n抽象类：如果一个类中有抽象方法，这个类必须是抽象类\n\n抽象方法：使用abstract来修饰，不可以有方法体，直接用分好结束\n\n特点：\n\n- 抽象类不可以创建对象\n- 抽象类的子类，必须重写父类中的抽像方法，否则子类必须是抽象类\n- 通过抽象类可以强制的要求子类中必须有的方法‘\n- 抽象类中可以有正常的方法\n\n## 成员变量初始值\n\njava中所有的变量必须先声明后赋值才能使用\n\nJava中成员变量，在创建对象的时候，都会执行一次初始化操作，都会给一个默认自\n\n基本数据类型默认值都是0，包括boolean->false\n\n引用数据类型：null\n\n## equals和==\n\n==判断左右两端的 数据类型是否一致\n\nequals：判断两个对象是否相等\n\n字符串要用equals来判断\n\n==判断的是内存地址\n\nequals判断的是值\n\n![image-20210821213308999](10.png)\n\n## 异常\n\n### 程序错误分三种\n\n1.编译错误\n\n2.运行时错误\n\n3逻辑错误\n\n![1](21.png)\n\n### 错误与异常的区别\n\n错误：是无法被处理的，程序在运行中出现的比较严重的问题\n\n异常：能够被程序本身处理的\n\n父类不声明异常继承的子类也不可以声明异常\n\n父类声明异常，子类声明的异常不能超过父类异常的范围\n\n### 为什么要自定义异常\n\n- 1.封装\n\n- 2.快速定位\n\n自定义异常步骤\n\n- 创建类\n- 继承Exception类或者Exception子类\n- 重写构造方法\n\n![2](22.png)\n\n","slug":"面向对象","published":1,"updated":"2022-11-21T11:55:43.725Z","comments":1,"layout":"post","photos":[],"link":"","_id":"claqy94l40029bklgccoz97w1","content":"<h1 id=\"面向对象概述\"><a href=\"#面向对象概述\" class=\"headerlink\" title=\"面向对象概述\"></a>面向对象概述</h1><h2 id=\"本章重点\"><a href=\"#本章重点\" class=\"headerlink\" title=\"本章重点\"></a>本章重点</h2><ul>\n<li>类与方法</li>\n<li>构造方法</li>\n<li>访问权限</li>\n<li>继承</li>\n<li>多态</li>\n<li>抽象和接口</li>\n<li>内存分析</li>\n</ul>\n<h2 id=\"面向对象和面向过程\"><a href=\"#面向对象和面向过程\" class=\"headerlink\" title=\"面向对象和面向过程\"></a>面向对象和面向过程</h2><p>面向对象：侧重的是对象，自己是上帝视角，你创建大象，告诉大象，进冰箱，不用管它怎么进</p>\n<p>优点：可扩展性强，维护成本低</p>\n<p>缺点：新手上手难</p>\n<p>面向过程：侧重的是过程，如何大象装冰箱，第一步打开门，第二步装大象，第三步关门。</p>\n<p>优点：简单</p>\n<p>缺点：代码量大了维护性非常差</p>\n<h2 id=\"构造放法\"><a href=\"#构造放法\" class=\"headerlink\" title=\"构造放法\"></a>构造放法</h2><p>在创建对象的时候自动调用的方法</p>\n<p>语法：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> 类名<span class=\"token punctuation\">(</span>传参<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n  \n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<p>注意：</p>\n<ul>\n<li>没有返回值</li>\n<li>在我们new的时候，自动调用构造方法</li>\n</ul>\n<p>作用：在创建对象的时候，给对象设置属性信息</p>\n<p><img src=\"/2021/08/21/mian-xiang-dui-xiang/1.png\" alt=\"image-20210821122825731\"></p>\n<h2 id=\"构造方法的重载\"><a href=\"#构造方法的重载\" class=\"headerlink\" title=\"构造方法的重载\"></a>构造方法的重载</h2><p>构造方法也是方法，也可以重载</p>\n<p>作用：可以用更多的方式去创建对象</p>\n<p>使用this可以访问其他构造方法  this()</p>\n<p><img src=\"/2021/08/21/mian-xiang-dui-xiang/2.png\" alt=\"image-20210821123534551\"></p>\n<h2 id=\"练习\"><a href=\"#练习\" class=\"headerlink\" title=\"练习\"></a>练习</h2><p>1.面向对象的思维来模拟LOL里的盖伦上阵杀敌</p>\n<p><img src=\"/2021/08/21/mian-xiang-dui-xiang/3.png\" alt=\"image-20210821124826776\"></p>\n<p>2.用面向对象的思维完成植物大战僵尸</p>\n<p>植物</p>\n<p><img src=\"/2021/08/21/mian-xiang-dui-xiang/4.png\" alt=\"image-20210821124846522\"></p>\n<p>僵尸</p>\n<p><img src=\"/2021/08/21/mian-xiang-dui-xiang/5.png\" alt=\"image-20210821124901131\"></p>\n<p>场景</p>\n<p><img src=\"/2021/08/21/mian-xiang-dui-xiang/6.png\" alt=\"image-20210821124913078\"></p>\n<h2 id=\"static\"><a href=\"#static\" class=\"headerlink\" title=\"static\"></a>static</h2><p>静态的内容在内存中是保留一份，并且各个对象之间进行共享</p>\n<p><img src=\"/2021/08/21/mian-xiang-dui-xiang/7.png\" alt=\"image-20210821125957988\"></p>\n<p>推荐使用类名去访问</p>\n<p>特点：</p>\n<ul>\n<li>数据共享</li>\n<li>属于类的，不属于对象</li>\n<li>优先于对象产生</li>\n</ul>\n<p>通用构造器，静态构造器</p>\n<p>创建对象的过程：</p>\n<p>1静态构造器</p>\n<p>2通用构造器</p>\n<p>构造方法—&gt;创建对象</p>\n<h2 id=\"包和导包\"><a href=\"#包和导包\" class=\"headerlink\" title=\"包和导包\"></a>包和导包</h2><p>包：本质上是文件夹</p>\n<p>导包：import包+类</p>\n<p>不需要导包：</p>\n<ul>\n<li>在自己包里</li>\n<li>java.lang包下的所有内容不用导包<ul>\n<li>String</li>\n<li>System.out.print</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"访问权限\"><a href=\"#访问权限\" class=\"headerlink\" title=\"访问权限\"></a>访问权限</h2><p>public：公共的  哪里都可以使用</p>\n<p>private：私有的  只有自己的类里可以使用</p>\n<p>default：包访问权限   在自己的包里可以使用</p>\n<h2 id=\"继承\"><a href=\"#继承\" class=\"headerlink\" title=\"继承\"></a>继承</h2><p>继承：子类可以自动拥有父类中除了私有内容外的其他所有内容</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> 类 <span class=\"token keyword\">extends</span> 父类<span class=\"token punctuation\">&#123;</span>\n  \n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<p>作用：简化代码           重复操作的行为可写为父类</p>\n<p>子类对父类进行了扩展</p>\n<h2 id=\"super关键字\"><a href=\"#super关键字\" class=\"headerlink\" title=\"super关键字\"></a>super关键字</h2><p>super：表示父类中的内容</p>\n<p>This：表示自己类中的内容</p>\n<p>用super和this来区分父类和子类中重要的内容</p>\n<p>创建对象的过程：先创建父类的对象然后创建子类的对象</p>\n<p><img src=\"/2021/08/21/mian-xiang-dui-xiang/8.png\" alt=\"image-20210821135635313\"></p>\n<p>小总结：</p>\n<ul>\n<li>super可以获取父类中的内容</li>\n<li>可以调用父类中的构造方法，必须卸载子类构造方法的第一行，如果父类的构造是无参的可以不写，如果有参数必须要写</li>\n</ul>\n<h2 id=\"练习2\"><a href=\"#练习2\" class=\"headerlink\" title=\"练习2\"></a>练习2</h2><p><img src=\"/2021/08/21/mian-xiang-dui-xiang/9.png\" alt=\"image-20210821135729924\"></p>\n<h3 id=\"代码实现\"><a href=\"#代码实现\" class=\"headerlink\" title=\"代码实现\"></a>代码实现</h3><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Game</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"开机，准备就绪\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">play</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"我要打游戏\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"关机，睡觉\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> DNF <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Game</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">play</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"玩DNF\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> LOL <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Game</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">play</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"玩LOL\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> CS <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Game</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">play</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"玩CS\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Palyer</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">happy</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Game</span> game<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        game<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        game<span class=\"token punctuation\">.</span><span class=\"token function\">play</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        game<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"开心\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Client</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">Game</span> game1 <span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token function\">DNF</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">Game</span> game2 <span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token function\">LOL</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">Game</span> game3 <span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token function\">CS</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">Palyer</span> palyer <span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Palyer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        palyer<span class=\"token punctuation\">.</span><span class=\"token function\">happy</span><span class=\"token punctuation\">(</span>game1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        palyer<span class=\"token punctuation\">.</span><span class=\"token function\">happy</span><span class=\"token punctuation\">(</span>game3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        palyer<span class=\"token punctuation\">.</span><span class=\"token function\">happy</span><span class=\"token punctuation\">(</span>game2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"final\"><a href=\"#final\" class=\"headerlink\" title=\"final\"></a>final</h2><ul>\n<li><p>被final修饰的变量不可以被改变</p>\n</li>\n<li><p>被final修饰的方法不可以重写</p>\n</li>\n<li><p>被final修饰的类不可以被继承</p>\n<p>final是不可变的</p>\n</li>\n</ul>\n<h2 id=\"抽象\"><a href=\"#抽象\" class=\"headerlink\" title=\"抽象\"></a>抽象</h2><p>抽象类：如果一个类中有抽象方法，这个类必须是抽象类</p>\n<p>抽象方法：使用abstract来修饰，不可以有方法体，直接用分好结束</p>\n<p>特点：</p>\n<ul>\n<li>抽象类不可以创建对象</li>\n<li>抽象类的子类，必须重写父类中的抽像方法，否则子类必须是抽象类</li>\n<li>通过抽象类可以强制的要求子类中必须有的方法‘</li>\n<li>抽象类中可以有正常的方法</li>\n</ul>\n<h2 id=\"成员变量初始值\"><a href=\"#成员变量初始值\" class=\"headerlink\" title=\"成员变量初始值\"></a>成员变量初始值</h2><p>java中所有的变量必须先声明后赋值才能使用</p>\n<p>Java中成员变量，在创建对象的时候，都会执行一次初始化操作，都会给一个默认自</p>\n<p>基本数据类型默认值都是0，包括boolean-&gt;false</p>\n<p>引用数据类型：null</p>\n<h2 id=\"equals和\"><a href=\"#equals和\" class=\"headerlink\" title=\"equals和==\"></a>equals和==</h2><p>==判断左右两端的 数据类型是否一致</p>\n<p>equals：判断两个对象是否相等</p>\n<p>字符串要用equals来判断</p>\n<p>==判断的是内存地址</p>\n<p>equals判断的是值</p>\n<p><img src=\"/2021/08/21/mian-xiang-dui-xiang/10.png\" alt=\"image-20210821213308999\"></p>\n<h2 id=\"异常\"><a href=\"#异常\" class=\"headerlink\" title=\"异常\"></a>异常</h2><h3 id=\"程序错误分三种\"><a href=\"#程序错误分三种\" class=\"headerlink\" title=\"程序错误分三种\"></a>程序错误分三种</h3><p>1.编译错误</p>\n<p>2.运行时错误</p>\n<p>3逻辑错误</p>\n<p><img src=\"/2021/08/21/mian-xiang-dui-xiang/21.png\" alt=\"1\"></p>\n<h3 id=\"错误与异常的区别\"><a href=\"#错误与异常的区别\" class=\"headerlink\" title=\"错误与异常的区别\"></a>错误与异常的区别</h3><p>错误：是无法被处理的，程序在运行中出现的比较严重的问题</p>\n<p>异常：能够被程序本身处理的</p>\n<p>父类不声明异常继承的子类也不可以声明异常</p>\n<p>父类声明异常，子类声明的异常不能超过父类异常的范围</p>\n<h3 id=\"为什么要自定义异常\"><a href=\"#为什么要自定义异常\" class=\"headerlink\" title=\"为什么要自定义异常\"></a>为什么要自定义异常</h3><ul>\n<li><p>1.封装</p>\n</li>\n<li><p>2.快速定位</p>\n</li>\n</ul>\n<p>自定义异常步骤</p>\n<ul>\n<li>创建类</li>\n<li>继承Exception类或者Exception子类</li>\n<li>重写构造方法</li>\n</ul>\n<p><img src=\"/2021/08/21/mian-xiang-dui-xiang/22.png\" alt=\"2\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"面向对象概述\"><a href=\"#面向对象概述\" class=\"headerlink\" title=\"面向对象概述\"></a>面向对象概述</h1><h2 id=\"本章重点\"><a href=\"#本章重点\" class=\"headerlink\" title=\"本章重点\"></a>本章重点</h2><ul>\n<li>类与方法</li>\n<li>构造方法</li>\n<li>访问权限</li>\n<li>继承</li>\n<li>多态</li>\n<li>抽象和接口</li>\n<li>内存分析</li>\n</ul>\n<h2 id=\"面向对象和面向过程\"><a href=\"#面向对象和面向过程\" class=\"headerlink\" title=\"面向对象和面向过程\"></a>面向对象和面向过程</h2><p>面向对象：侧重的是对象，自己是上帝视角，你创建大象，告诉大象，进冰箱，不用管它怎么进</p>\n<p>优点：可扩展性强，维护成本低</p>\n<p>缺点：新手上手难</p>\n<p>面向过程：侧重的是过程，如何大象装冰箱，第一步打开门，第二步装大象，第三步关门。</p>\n<p>优点：简单</p>\n<p>缺点：代码量大了维护性非常差</p>\n<h2 id=\"构造放法\"><a href=\"#构造放法\" class=\"headerlink\" title=\"构造放法\"></a>构造放法</h2><p>在创建对象的时候自动调用的方法</p>\n<p>语法：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> 类名<span class=\"token punctuation\">(</span>传参<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n  \n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<p>注意：</p>\n<ul>\n<li>没有返回值</li>\n<li>在我们new的时候，自动调用构造方法</li>\n</ul>\n<p>作用：在创建对象的时候，给对象设置属性信息</p>\n<p><img src=\"/2021/08/21/mian-xiang-dui-xiang/1.png\" alt=\"image-20210821122825731\"></p>\n<h2 id=\"构造方法的重载\"><a href=\"#构造方法的重载\" class=\"headerlink\" title=\"构造方法的重载\"></a>构造方法的重载</h2><p>构造方法也是方法，也可以重载</p>\n<p>作用：可以用更多的方式去创建对象</p>\n<p>使用this可以访问其他构造方法  this()</p>\n<p><img src=\"/2021/08/21/mian-xiang-dui-xiang/2.png\" alt=\"image-20210821123534551\"></p>\n<h2 id=\"练习\"><a href=\"#练习\" class=\"headerlink\" title=\"练习\"></a>练习</h2><p>1.面向对象的思维来模拟LOL里的盖伦上阵杀敌</p>\n<p><img src=\"/2021/08/21/mian-xiang-dui-xiang/3.png\" alt=\"image-20210821124826776\"></p>\n<p>2.用面向对象的思维完成植物大战僵尸</p>\n<p>植物</p>\n<p><img src=\"/2021/08/21/mian-xiang-dui-xiang/4.png\" alt=\"image-20210821124846522\"></p>\n<p>僵尸</p>\n<p><img src=\"/2021/08/21/mian-xiang-dui-xiang/5.png\" alt=\"image-20210821124901131\"></p>\n<p>场景</p>\n<p><img src=\"/2021/08/21/mian-xiang-dui-xiang/6.png\" alt=\"image-20210821124913078\"></p>\n<h2 id=\"static\"><a href=\"#static\" class=\"headerlink\" title=\"static\"></a>static</h2><p>静态的内容在内存中是保留一份，并且各个对象之间进行共享</p>\n<p><img src=\"/2021/08/21/mian-xiang-dui-xiang/7.png\" alt=\"image-20210821125957988\"></p>\n<p>推荐使用类名去访问</p>\n<p>特点：</p>\n<ul>\n<li>数据共享</li>\n<li>属于类的，不属于对象</li>\n<li>优先于对象产生</li>\n</ul>\n<p>通用构造器，静态构造器</p>\n<p>创建对象的过程：</p>\n<p>1静态构造器</p>\n<p>2通用构造器</p>\n<p>构造方法—&gt;创建对象</p>\n<h2 id=\"包和导包\"><a href=\"#包和导包\" class=\"headerlink\" title=\"包和导包\"></a>包和导包</h2><p>包：本质上是文件夹</p>\n<p>导包：import包+类</p>\n<p>不需要导包：</p>\n<ul>\n<li>在自己包里</li>\n<li>java.lang包下的所有内容不用导包<ul>\n<li>String</li>\n<li>System.out.print</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"访问权限\"><a href=\"#访问权限\" class=\"headerlink\" title=\"访问权限\"></a>访问权限</h2><p>public：公共的  哪里都可以使用</p>\n<p>private：私有的  只有自己的类里可以使用</p>\n<p>default：包访问权限   在自己的包里可以使用</p>\n<h2 id=\"继承\"><a href=\"#继承\" class=\"headerlink\" title=\"继承\"></a>继承</h2><p>继承：子类可以自动拥有父类中除了私有内容外的其他所有内容</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> 类 <span class=\"token keyword\">extends</span> 父类<span class=\"token punctuation\">&#123;</span>\n  \n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<p>作用：简化代码           重复操作的行为可写为父类</p>\n<p>子类对父类进行了扩展</p>\n<h2 id=\"super关键字\"><a href=\"#super关键字\" class=\"headerlink\" title=\"super关键字\"></a>super关键字</h2><p>super：表示父类中的内容</p>\n<p>This：表示自己类中的内容</p>\n<p>用super和this来区分父类和子类中重要的内容</p>\n<p>创建对象的过程：先创建父类的对象然后创建子类的对象</p>\n<p><img src=\"/2021/08/21/mian-xiang-dui-xiang/8.png\" alt=\"image-20210821135635313\"></p>\n<p>小总结：</p>\n<ul>\n<li>super可以获取父类中的内容</li>\n<li>可以调用父类中的构造方法，必须卸载子类构造方法的第一行，如果父类的构造是无参的可以不写，如果有参数必须要写</li>\n</ul>\n<h2 id=\"练习2\"><a href=\"#练习2\" class=\"headerlink\" title=\"练习2\"></a>练习2</h2><p><img src=\"/2021/08/21/mian-xiang-dui-xiang/9.png\" alt=\"image-20210821135729924\"></p>\n<h3 id=\"代码实现\"><a href=\"#代码实现\" class=\"headerlink\" title=\"代码实现\"></a>代码实现</h3><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Game</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"开机，准备就绪\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">play</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"我要打游戏\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"关机，睡觉\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> DNF <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Game</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">play</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"玩DNF\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> LOL <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Game</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">play</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"玩LOL\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> CS <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Game</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">play</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"玩CS\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Palyer</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">happy</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Game</span> game<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        game<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        game<span class=\"token punctuation\">.</span><span class=\"token function\">play</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        game<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"开心\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Client</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">Game</span> game1 <span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token function\">DNF</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">Game</span> game2 <span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token function\">LOL</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">Game</span> game3 <span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token function\">CS</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">Palyer</span> palyer <span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Palyer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        palyer<span class=\"token punctuation\">.</span><span class=\"token function\">happy</span><span class=\"token punctuation\">(</span>game1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        palyer<span class=\"token punctuation\">.</span><span class=\"token function\">happy</span><span class=\"token punctuation\">(</span>game3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        palyer<span class=\"token punctuation\">.</span><span class=\"token function\">happy</span><span class=\"token punctuation\">(</span>game2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"final\"><a href=\"#final\" class=\"headerlink\" title=\"final\"></a>final</h2><ul>\n<li><p>被final修饰的变量不可以被改变</p>\n</li>\n<li><p>被final修饰的方法不可以重写</p>\n</li>\n<li><p>被final修饰的类不可以被继承</p>\n<p>final是不可变的</p>\n</li>\n</ul>\n<h2 id=\"抽象\"><a href=\"#抽象\" class=\"headerlink\" title=\"抽象\"></a>抽象</h2><p>抽象类：如果一个类中有抽象方法，这个类必须是抽象类</p>\n<p>抽象方法：使用abstract来修饰，不可以有方法体，直接用分好结束</p>\n<p>特点：</p>\n<ul>\n<li>抽象类不可以创建对象</li>\n<li>抽象类的子类，必须重写父类中的抽像方法，否则子类必须是抽象类</li>\n<li>通过抽象类可以强制的要求子类中必须有的方法‘</li>\n<li>抽象类中可以有正常的方法</li>\n</ul>\n<h2 id=\"成员变量初始值\"><a href=\"#成员变量初始值\" class=\"headerlink\" title=\"成员变量初始值\"></a>成员变量初始值</h2><p>java中所有的变量必须先声明后赋值才能使用</p>\n<p>Java中成员变量，在创建对象的时候，都会执行一次初始化操作，都会给一个默认自</p>\n<p>基本数据类型默认值都是0，包括boolean-&gt;false</p>\n<p>引用数据类型：null</p>\n<h2 id=\"equals和\"><a href=\"#equals和\" class=\"headerlink\" title=\"equals和==\"></a>equals和==</h2><p>==判断左右两端的 数据类型是否一致</p>\n<p>equals：判断两个对象是否相等</p>\n<p>字符串要用equals来判断</p>\n<p>==判断的是内存地址</p>\n<p>equals判断的是值</p>\n<p><img src=\"/2021/08/21/mian-xiang-dui-xiang/10.png\" alt=\"image-20210821213308999\"></p>\n<h2 id=\"异常\"><a href=\"#异常\" class=\"headerlink\" title=\"异常\"></a>异常</h2><h3 id=\"程序错误分三种\"><a href=\"#程序错误分三种\" class=\"headerlink\" title=\"程序错误分三种\"></a>程序错误分三种</h3><p>1.编译错误</p>\n<p>2.运行时错误</p>\n<p>3逻辑错误</p>\n<p><img src=\"/2021/08/21/mian-xiang-dui-xiang/21.png\" alt=\"1\"></p>\n<h3 id=\"错误与异常的区别\"><a href=\"#错误与异常的区别\" class=\"headerlink\" title=\"错误与异常的区别\"></a>错误与异常的区别</h3><p>错误：是无法被处理的，程序在运行中出现的比较严重的问题</p>\n<p>异常：能够被程序本身处理的</p>\n<p>父类不声明异常继承的子类也不可以声明异常</p>\n<p>父类声明异常，子类声明的异常不能超过父类异常的范围</p>\n<h3 id=\"为什么要自定义异常\"><a href=\"#为什么要自定义异常\" class=\"headerlink\" title=\"为什么要自定义异常\"></a>为什么要自定义异常</h3><ul>\n<li><p>1.封装</p>\n</li>\n<li><p>2.快速定位</p>\n</li>\n</ul>\n<p>自定义异常步骤</p>\n<ul>\n<li>创建类</li>\n<li>继承Exception类或者Exception子类</li>\n<li>重写构造方法</li>\n</ul>\n<p><img src=\"/2021/08/21/mian-xiang-dui-xiang/22.png\" alt=\"2\"></p>\n"}],"PostAsset":[{"_id":"source/_posts/Docker/1.png","post":"claqy94jm0001bklg73sd5omv","slug":"1.png","modified":1,"renderable":1},{"_id":"source/_posts/Docker/2.png","post":"claqy94jm0001bklg73sd5omv","slug":"2.png","modified":1,"renderable":1},{"_id":"source/_posts/JDBC初阶/1.png","post":"claqy94jv0007bklg6zep0oig","slug":"1.png","modified":1,"renderable":1},{"_id":"source/_posts/JDBC初阶/2.png","post":"claqy94jv0007bklg6zep0oig","slug":"2.png","modified":1,"renderable":1},{"_id":"source/_posts/Tomcat细小问题解决/1.png","post":"claqy94kf000pbklg9rceade1","slug":"1.png","modified":1,"renderable":1},{"_id":"source/_posts/Tomcat细小问题解决/2.png","post":"claqy94kf000pbklg9rceade1","slug":"2.png","modified":1,"renderable":1},{"_id":"source/_posts/Tomcat细小问题解决/3.png","post":"claqy94kf000pbklg9rceade1","slug":"3.png","modified":1,"renderable":1},{"_id":"source/_posts/Tomcat细小问题解决/小问题.png","post":"claqy94kf000pbklg9rceade1","slug":"小问题.png","modified":1,"renderable":1},{"_id":"source/_posts/Redis初阶/1.png","post":"claqy94kh000tbklg8jn40f8r","slug":"1.png","modified":1,"renderable":1},{"_id":"source/_posts/Redis初阶/10.png","post":"claqy94kh000tbklg8jn40f8r","slug":"10.png","modified":1,"renderable":1},{"_id":"source/_posts/Redis初阶/11.png","post":"claqy94kh000tbklg8jn40f8r","slug":"11.png","modified":1,"renderable":1},{"_id":"source/_posts/Redis初阶/13.png","post":"claqy94kh000tbklg8jn40f8r","slug":"13.png","modified":1,"renderable":1},{"_id":"source/_posts/Redis初阶/14.png","post":"claqy94kh000tbklg8jn40f8r","slug":"14.png","modified":1,"renderable":1},{"_id":"source/_posts/Redis初阶/2.png","post":"claqy94kh000tbklg8jn40f8r","slug":"2.png","modified":1,"renderable":1},{"_id":"source/_posts/Redis初阶/3.png","post":"claqy94kh000tbklg8jn40f8r","slug":"3.png","modified":1,"renderable":1},{"_id":"source/_posts/Redis初阶/4.png","post":"claqy94kh000tbklg8jn40f8r","slug":"4.png","modified":1,"renderable":1},{"_id":"source/_posts/Redis初阶/5.png","post":"claqy94kh000tbklg8jn40f8r","slug":"5.png","modified":1,"renderable":1},{"_id":"source/_posts/Redis初阶/6.png","post":"claqy94kh000tbklg8jn40f8r","slug":"6.png","modified":1,"renderable":1},{"_id":"source/_posts/Redis初阶/7.png","post":"claqy94kh000tbklg8jn40f8r","slug":"7.png","modified":1,"renderable":1},{"_id":"source/_posts/Redis初阶/8.png","post":"claqy94kh000tbklg8jn40f8r","slug":"8.png","modified":1,"renderable":1},{"_id":"source/_posts/Redis初阶/9.png","post":"claqy94kh000tbklg8jn40f8r","slug":"9.png","modified":1,"renderable":1},{"_id":"source/_posts/maven创建与使用/1.png","post":"claqy94kk0011bklgd0r93h5d","slug":"1.png","modified":1,"renderable":1},{"_id":"source/_posts/maven创建与使用/10.png","post":"claqy94kk0011bklgd0r93h5d","slug":"10.png","modified":1,"renderable":1},{"_id":"source/_posts/maven创建与使用/11.png","post":"claqy94kk0011bklgd0r93h5d","slug":"11.png","modified":1,"renderable":1},{"_id":"source/_posts/maven创建与使用/12.png","post":"claqy94kk0011bklgd0r93h5d","slug":"12.png","modified":1,"renderable":1},{"_id":"source/_posts/maven创建与使用/13.png","post":"claqy94kk0011bklgd0r93h5d","slug":"13.png","modified":1,"renderable":1},{"_id":"source/_posts/maven创建与使用/2.png","post":"claqy94kk0011bklgd0r93h5d","slug":"2.png","modified":1,"renderable":1},{"_id":"source/_posts/maven创建与使用/3.png","post":"claqy94kk0011bklgd0r93h5d","slug":"3.png","modified":1,"renderable":1},{"_id":"source/_posts/maven创建与使用/4.png","post":"claqy94kk0011bklgd0r93h5d","slug":"4.png","modified":1,"renderable":1},{"_id":"source/_posts/maven创建与使用/5.png","post":"claqy94kk0011bklgd0r93h5d","slug":"5.png","modified":1,"renderable":1},{"_id":"source/_posts/maven创建与使用/6.png","post":"claqy94kk0011bklgd0r93h5d","slug":"6.png","modified":1,"renderable":1},{"_id":"source/_posts/maven创建与使用/7.png","post":"claqy94kk0011bklgd0r93h5d","slug":"7.png","modified":1,"renderable":1},{"_id":"source/_posts/maven创建与使用/8.png","post":"claqy94kk0011bklgd0r93h5d","slug":"8.png","modified":1,"renderable":1},{"_id":"source/_posts/maven创建与使用/9.png","post":"claqy94kk0011bklgd0r93h5d","slug":"9.png","modified":1,"renderable":1},{"_id":"source/_posts/Sevelet2/1.png","post":"claqy94kj000zbklg7vtc7oql","slug":"1.png","modified":1,"renderable":1},{"_id":"source/_posts/Sevelet2/10.png","post":"claqy94kj000zbklg7vtc7oql","slug":"10.png","modified":1,"renderable":1},{"_id":"source/_posts/Sevelet2/11.png","post":"claqy94kj000zbklg7vtc7oql","slug":"11.png","modified":1,"renderable":1},{"_id":"source/_posts/Sevelet2/12.png","post":"claqy94kj000zbklg7vtc7oql","slug":"12.png","modified":1,"renderable":1},{"_id":"source/_posts/Sevelet2/13.png","post":"claqy94kj000zbklg7vtc7oql","slug":"13.png","modified":1,"renderable":1},{"_id":"source/_posts/Sevelet2/14.png","post":"claqy94kj000zbklg7vtc7oql","slug":"14.png","modified":1,"renderable":1},{"_id":"source/_posts/Sevelet2/15.png","post":"claqy94kj000zbklg7vtc7oql","slug":"15.png","modified":1,"renderable":1},{"_id":"source/_posts/Sevelet2/16.png","post":"claqy94kj000zbklg7vtc7oql","slug":"16.png","modified":1,"renderable":1},{"_id":"source/_posts/Sevelet2/2.png","post":"claqy94kj000zbklg7vtc7oql","slug":"2.png","modified":1,"renderable":1},{"_id":"source/_posts/Sevelet2/3.png","post":"claqy94kj000zbklg7vtc7oql","slug":"3.png","modified":1,"renderable":1},{"_id":"source/_posts/Sevelet2/4.png","post":"claqy94kj000zbklg7vtc7oql","slug":"4.png","modified":1,"renderable":1},{"_id":"source/_posts/Sevelet2/5.png","post":"claqy94kj000zbklg7vtc7oql","slug":"5.png","modified":1,"renderable":1},{"_id":"source/_posts/Sevelet2/6.png","post":"claqy94kj000zbklg7vtc7oql","slug":"6.png","modified":1,"renderable":1},{"_id":"source/_posts/Sevelet2/7.png","post":"claqy94kj000zbklg7vtc7oql","slug":"7.png","modified":1,"renderable":1},{"_id":"source/_posts/Sevelet2/8.png","post":"claqy94kj000zbklg7vtc7oql","slug":"8.png","modified":1,"renderable":1},{"_id":"source/_posts/Sevelet2/9.png","post":"claqy94kj000zbklg7vtc7oql","slug":"9.png","modified":1,"renderable":1},{"_id":"source/_posts/redis下载与安装/1.png","post":"claqy94km0017bklgbv3ke7zm","slug":"1.png","modified":1,"renderable":1},{"_id":"source/_posts/redis下载与安装/2.png","post":"claqy94km0017bklgbv3ke7zm","slug":"2.png","modified":1,"renderable":1},{"_id":"source/_posts/redis下载与安装/3.png","post":"claqy94km0017bklgbv3ke7zm","slug":"3.png","modified":1,"renderable":1},{"_id":"source/_posts/mybatis第一次框架操作/1.png","post":"claqy94km0015bklg3s2n54q7","slug":"1.png","modified":1,"renderable":1},{"_id":"source/_posts/mybatis第一次框架操作/10.png","post":"claqy94km0015bklg3s2n54q7","slug":"10.png","modified":1,"renderable":1},{"_id":"source/_posts/mybatis第一次框架操作/11.png","post":"claqy94km0015bklg3s2n54q7","slug":"11.png","modified":1,"renderable":1},{"_id":"source/_posts/mybatis第一次框架操作/12.png","post":"claqy94km0015bklg3s2n54q7","slug":"12.png","modified":1,"renderable":1},{"_id":"source/_posts/mybatis第一次框架操作/13.png","post":"claqy94km0015bklg3s2n54q7","slug":"13.png","modified":1,"renderable":1},{"_id":"source/_posts/mybatis第一次框架操作/14.png","post":"claqy94km0015bklg3s2n54q7","slug":"14.png","modified":1,"renderable":1},{"_id":"source/_posts/mybatis第一次框架操作/15.png","post":"claqy94km0015bklg3s2n54q7","slug":"15.png","modified":1,"renderable":1},{"_id":"source/_posts/mybatis第一次框架操作/16.png","post":"claqy94km0015bklg3s2n54q7","slug":"16.png","modified":1,"renderable":1},{"_id":"source/_posts/mybatis第一次框架操作/17.png","post":"claqy94km0015bklg3s2n54q7","slug":"17.png","modified":1,"renderable":1},{"_id":"source/_posts/mybatis第一次框架操作/2.png","post":"claqy94km0015bklg3s2n54q7","slug":"2.png","modified":1,"renderable":1},{"_id":"source/_posts/mybatis第一次框架操作/3.png","post":"claqy94km0015bklg3s2n54q7","slug":"3.png","modified":1,"renderable":1},{"_id":"source/_posts/mybatis第一次框架操作/4.png","post":"claqy94km0015bklg3s2n54q7","slug":"4.png","modified":1,"renderable":1},{"_id":"source/_posts/mybatis第一次框架操作/5.png","post":"claqy94km0015bklg3s2n54q7","slug":"5.png","modified":1,"renderable":1},{"_id":"source/_posts/mybatis第一次框架操作/6.png","post":"claqy94km0015bklg3s2n54q7","slug":"6.png","modified":1,"renderable":1},{"_id":"source/_posts/mybatis第一次框架操作/7.png","post":"claqy94km0015bklg3s2n54q7","slug":"7.png","modified":1,"renderable":1},{"_id":"source/_posts/mybatis第一次框架操作/8.png","post":"claqy94km0015bklg3s2n54q7","slug":"8.png","modified":1,"renderable":1},{"_id":"source/_posts/mybatis第一次框架操作/9.png","post":"claqy94km0015bklg3s2n54q7","slug":"9.png","modified":1,"renderable":1},{"_id":"source/_posts/个人页面云服务/1.png","post":"claqy94kn001bbklgd15dh12w","slug":"1.png","modified":1,"renderable":1},{"_id":"source/_posts/个人页面云服务/10.png","post":"claqy94kn001bbklgd15dh12w","slug":"10.png","modified":1,"renderable":1},{"_id":"source/_posts/个人页面云服务/11.png","post":"claqy94kn001bbklgd15dh12w","slug":"11.png","modified":1,"renderable":1},{"_id":"source/_posts/个人页面云服务/12.png","post":"claqy94kn001bbklgd15dh12w","slug":"12.png","modified":1,"renderable":1},{"_id":"source/_posts/个人页面云服务/13.png","post":"claqy94kn001bbklgd15dh12w","slug":"13.png","modified":1,"renderable":1},{"_id":"source/_posts/个人页面云服务/2.png","post":"claqy94kn001bbklgd15dh12w","slug":"2.png","modified":1,"renderable":1},{"_id":"source/_posts/个人页面云服务/3.png","post":"claqy94kn001bbklgd15dh12w","slug":"3.png","modified":1,"renderable":1},{"_id":"source/_posts/个人页面云服务/4.png","post":"claqy94kn001bbklgd15dh12w","slug":"4.png","modified":1,"renderable":1},{"_id":"source/_posts/个人页面云服务/5.png","post":"claqy94kn001bbklgd15dh12w","slug":"5.png","modified":1,"renderable":1},{"_id":"source/_posts/个人页面云服务/6.png","post":"claqy94kn001bbklgd15dh12w","slug":"6.png","modified":1,"renderable":1},{"_id":"source/_posts/个人页面云服务/7.png","post":"claqy94kn001bbklgd15dh12w","slug":"7.png","modified":1,"renderable":1},{"_id":"source/_posts/个人页面云服务/8.png","post":"claqy94kn001bbklgd15dh12w","slug":"8.png","modified":1,"renderable":1},{"_id":"source/_posts/个人页面云服务/9.png","post":"claqy94kn001bbklgd15dh12w","slug":"9.png","modified":1,"renderable":1},{"_id":"source/_posts/web工程tomcat部署/image-1.png","post":"claqy94ko001dbklg6kc2g24o","slug":"image-1.png","modified":1,"renderable":1},{"_id":"source/_posts/web工程tomcat部署/image-2.png","post":"claqy94ko001dbklg6kc2g24o","slug":"image-2.png","modified":1,"renderable":1},{"_id":"source/_posts/web工程tomcat部署/image-3.png","post":"claqy94ko001dbklg6kc2g24o","slug":"image-3.png","modified":1,"renderable":1},{"_id":"source/_posts/web工程tomcat部署/image-4.png","post":"claqy94ko001dbklg6kc2g24o","slug":"image-4.png","modified":1,"renderable":1},{"_id":"source/_posts/web工程tomcat部署/image-5.png","post":"claqy94ko001dbklg6kc2g24o","slug":"image-5.png","modified":1,"renderable":1},{"_id":"source/_posts/web工程tomcat部署/image-6.png","post":"claqy94ko001dbklg6kc2g24o","slug":"image-6.png","modified":1,"renderable":1},{"_id":"source/_posts/web工程tomcat部署/image-7.png","post":"claqy94ko001dbklg6kc2g24o","slug":"image-7.png","modified":1,"renderable":1},{"_id":"source/_posts/web工程tomcat部署/image-8.png","post":"claqy94ko001dbklg6kc2g24o","slug":"image-8.png","modified":1,"renderable":1},{"_id":"source/_posts/web工程tomcat部署/image-9.png","post":"claqy94ko001dbklg6kc2g24o","slug":"image-9.png","modified":1,"renderable":1},{"_id":"source/_posts/多线程/1.png","post":"claqy94l20025bklg7yny9z1m","slug":"1.png","modified":1,"renderable":1},{"_id":"source/_posts/多线程/2.png","post":"claqy94l20025bklg7yny9z1m","slug":"2.png","modified":1,"renderable":1},{"_id":"source/_posts/多线程/5.png","post":"claqy94l20025bklg7yny9z1m","slug":"5.png","modified":1,"renderable":1},{"_id":"source/_posts/面向对象/1.png","post":"claqy94l40029bklgccoz97w1","slug":"1.png","modified":1,"renderable":1},{"_id":"source/_posts/面向对象/10.png","post":"claqy94l40029bklgccoz97w1","slug":"10.png","modified":1,"renderable":1},{"_id":"source/_posts/面向对象/2.png","post":"claqy94l40029bklgccoz97w1","slug":"2.png","modified":1,"renderable":1},{"_id":"source/_posts/面向对象/21.png","post":"claqy94l40029bklgccoz97w1","slug":"21.png","modified":1,"renderable":1},{"_id":"source/_posts/面向对象/22.png","post":"claqy94l40029bklgccoz97w1","slug":"22.png","modified":1,"renderable":1},{"_id":"source/_posts/面向对象/3.png","post":"claqy94l40029bklgccoz97w1","slug":"3.png","modified":1,"renderable":1},{"_id":"source/_posts/面向对象/4.png","post":"claqy94l40029bklgccoz97w1","slug":"4.png","modified":1,"renderable":1},{"_id":"source/_posts/面向对象/5.png","post":"claqy94l40029bklgccoz97w1","slug":"5.png","modified":1,"renderable":1},{"_id":"source/_posts/面向对象/6.png","post":"claqy94l40029bklgccoz97w1","slug":"6.png","modified":1,"renderable":1},{"_id":"source/_posts/面向对象/7.png","post":"claqy94l40029bklgccoz97w1","slug":"7.png","modified":1,"renderable":1},{"_id":"source/_posts/面向对象/8.png","post":"claqy94l40029bklgccoz97w1","slug":"8.png","modified":1,"renderable":1},{"_id":"source/_posts/面向对象/9.png","post":"claqy94l40029bklgccoz97w1","slug":"9.png","modified":1,"renderable":1}],"PostCategory":[{"post_id":"claqy94jm0001bklg73sd5omv","category_id":"claqy94jt0004bklg0nv87f6o","_id":"claqy94kc000jbklg83g76a7i"},{"post_id":"claqy94jr0003bklg2bw90cx4","category_id":"claqy94k8000cbklg0i5m3e6x","_id":"claqy94kh000qbklgddv3763p"},{"post_id":"claqy94jv0007bklg6zep0oig","category_id":"claqy94kc000kbklgfafi4clw","_id":"claqy94kj000wbklg9hwo29g8"},{"post_id":"claqy94k10009bklga0ia6ovv","category_id":"claqy94kh000rbklg3os9enz1","_id":"claqy94kl0014bklgheg53qon"},{"post_id":"claqy94k7000bbklg1iyne6xk","category_id":"claqy94kh000rbklg3os9enz1","_id":"claqy94kn001abklgc07zfpo6"},{"post_id":"claqy94ka000gbklg8knmelr8","category_id":"claqy94kh000rbklg3os9enz1","_id":"claqy94kp001gbklgbg4o6tmq"},{"post_id":"claqy94kb000ibklgh8bm7e3p","category_id":"claqy94kh000rbklg3os9enz1","_id":"claqy94kq001lbklgcqdddzc0"},{"post_id":"claqy94kp001hbklg23w26tjp","category_id":"claqy94kh000rbklg3os9enz1","_id":"claqy94kr001nbklg0yr2gv34"},{"post_id":"claqy94ke000nbklg4i0s6gpu","category_id":"claqy94kh000rbklg3os9enz1","_id":"claqy94kr001pbklg5yr3a8x3"},{"post_id":"claqy94kf000pbklg9rceade1","category_id":"claqy94kq001kbklgfbmv6d98","_id":"claqy94ks001rbklg81m3dgvv"},{"post_id":"claqy94kh000tbklg8jn40f8r","category_id":"claqy94kr001qbklgapg9ct52","_id":"claqy94ks001tbklgbshb3j7h"},{"post_id":"claqy94ki000vbklgerhebxh0","category_id":"claqy94ks001sbklg4bn7dbe2","_id":"claqy94ks001vbklggmt16iqz"},{"post_id":"claqy94kj000zbklg7vtc7oql","category_id":"claqy94ks001ubklg8sjf9oce","_id":"claqy94ks001xbklgdmzf4vcq"},{"post_id":"claqy94kk0011bklgd0r93h5d","category_id":"claqy94ks001wbklg9dpugcbl","_id":"claqy94kt001zbklg3qtp2hzt"},{"post_id":"claqy94km0015bklg3s2n54q7","category_id":"claqy94kt001ybklg7bxze0g8","_id":"claqy94kt0022bklg7882b3mi"},{"post_id":"claqy94km0017bklgbv3ke7zm","category_id":"claqy94kr001qbklgapg9ct52","_id":"claqy94ku0023bklg591r8y5x"},{"post_id":"claqy94ko001dbklg6kc2g24o","category_id":"claqy94kq001kbklgfbmv6d98","_id":"claqy94ku0024bklg3jt3hc1s"},{"post_id":"claqy94l20025bklg7yny9z1m","category_id":"claqy94l30027bklgdxdb25uf","_id":"claqy94l5002dbklghv5903fl"},{"post_id":"claqy94l30026bklgcv1j58ot","category_id":"claqy94l5002cbklg34l94o48","_id":"claqy94l5002fbklg7wyj6p30"},{"post_id":"claqy94l40029bklgccoz97w1","category_id":"claqy94l5002ebklg074a7s6i","_id":"claqy94l5002gbklg42j8fyo8"}],"PostTag":[{"post_id":"claqy94k10009bklga0ia6ovv","tag_id":"claqy94ju0005bklgckr85zda","_id":"claqy94k9000ebklgflbn638d"},{"post_id":"claqy94jm0001bklg73sd5omv","tag_id":"claqy94ju0005bklgckr85zda","_id":"claqy94kb000hbklgcqoy4jpc"},{"post_id":"claqy94k7000bbklg1iyne6xk","tag_id":"claqy94ju0005bklgckr85zda","_id":"claqy94kd000mbklgbv52hdwi"},{"post_id":"claqy94ka000gbklg8knmelr8","tag_id":"claqy94ju0005bklgckr85zda","_id":"claqy94kf000obklg5c6nex04"},{"post_id":"claqy94jr0003bklg2bw90cx4","tag_id":"claqy94k9000dbklg522ff4sx","_id":"claqy94kh000sbklg86qahzkj"},{"post_id":"claqy94kb000ibklgh8bm7e3p","tag_id":"claqy94ju0005bklgckr85zda","_id":"claqy94ki000ubklghmpr72zy"},{"post_id":"claqy94ke000nbklg4i0s6gpu","tag_id":"claqy94ju0005bklgckr85zda","_id":"claqy94kj000xbklga0sh8ewp"},{"post_id":"claqy94jv0007bklg6zep0oig","tag_id":"claqy94ju0005bklgckr85zda","_id":"claqy94kk0010bklgfl12bu3a"},{"post_id":"claqy94kf000pbklg9rceade1","tag_id":"claqy94ju0005bklgckr85zda","_id":"claqy94kl0012bklgdmtcew9i"},{"post_id":"claqy94kh000tbklg8jn40f8r","tag_id":"claqy94ju0005bklgckr85zda","_id":"claqy94km0016bklg2kkl0ky5"},{"post_id":"claqy94ki000vbklgerhebxh0","tag_id":"claqy94ju0005bklgckr85zda","_id":"claqy94kn0018bklgd8ms9eyn"},{"post_id":"claqy94kj000zbklg7vtc7oql","tag_id":"claqy94ju0005bklgckr85zda","_id":"claqy94ko001cbklg0i1n6avl"},{"post_id":"claqy94kk0011bklgd0r93h5d","tag_id":"claqy94ju0005bklgckr85zda","_id":"claqy94kp001ebklgb5dw1f0x"},{"post_id":"claqy94km0015bklg3s2n54q7","tag_id":"claqy94ju0005bklgckr85zda","_id":"claqy94kp001ibklg4nms2kyt"},{"post_id":"claqy94kn001bbklgd15dh12w","tag_id":"claqy94ju0005bklgckr85zda","_id":"claqy94kq001jbklgbms77tng"},{"post_id":"claqy94ko001dbklg6kc2g24o","tag_id":"claqy94ju0005bklgckr85zda","_id":"claqy94kr001mbklg18b51bs1"},{"post_id":"claqy94kp001hbklg23w26tjp","tag_id":"claqy94ju0005bklgckr85zda","_id":"claqy94kr001obklgfid9esks"},{"post_id":"claqy94l20025bklg7yny9z1m","tag_id":"claqy94ju0005bklgckr85zda","_id":"claqy94l40028bklg04i9bpc1"},{"post_id":"claqy94l30026bklgcv1j58ot","tag_id":"claqy94ju0005bklgckr85zda","_id":"claqy94l4002abklg2v12beme"},{"post_id":"claqy94l40029bklgccoz97w1","tag_id":"claqy94ju0005bklgckr85zda","_id":"claqy94l4002bbklgemtg29m2"}],"Tag":[{"name":"notes","_id":"claqy94ju0005bklgckr85zda"},{"name":"Study","_id":"claqy94k9000dbklg522ff4sx"}]}}