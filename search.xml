<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>new blog</title>
      <link href="/2022/11/22/new-blog/"/>
      <url>/2022/11/22/new-blog/</url>
      
        <content type="html"><![CDATA[<p>new bolg</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>HTML</title>
      <link href="/2022/11/21/html/"/>
      <url>/2022/11/21/html/</url>
      
        <content type="html"><![CDATA[<h1 id="Html"><a href="#Html" class="headerlink" title="Html"></a>Html</h1><h2 id="1-适合编写html的便利软件"><a href="#1-适合编写html的便利软件" class="headerlink" title="1.适合编写html的便利软件"></a>1.适合编写html的便利软件</h2><p>HBuilderx：<a href="https://www.dcloud.io/hbuilderx.html">https://www.dcloud.io/hbuilderx.html</a></p><h2 id="2-什么是html"><a href="#2-什么是html" class="headerlink" title="2.什么是html"></a>2.什么是html</h2><ul><li>超文本标记语言</li><li>并不是编程语言</li></ul><h3 id="2-1网络三要素：协议，IP，端口"><a href="#2-1网络三要素：协议，IP，端口" class="headerlink" title="2.1网络三要素：协议，IP，端口"></a>2.1网络三要素：协议，IP，端口</h3><ul><li><a href="http://www.baidu.com:80（对标）">http://www.baidu.com:80（对标）</a></li></ul><h3 id="2-2html的每一个标签都是成对出现"><a href="#2-2html的每一个标签都是成对出现" class="headerlink" title="2.2html的每一个标签都是成对出现"></a>2.2html的每一个标签都是成对出现</h3><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token comment">&lt;!-- html标签是html网页的根标签 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>第一个html<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token comment">&lt;!-- 我们主要关注这个body标签 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>网页中的内容<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3-标签介绍"><a href="#3-标签介绍" class="headerlink" title="3.标签介绍"></a>3.标签介绍</h2><h3 id="3-1-标签含义"><a href="#3-1-标签含义" class="headerlink" title="3.1 标签含义"></a>3.1 标签含义</h3><pre class="line-numbers language-txt" data-language="txt"><code class="language-txt">&lt;!DOCTYPE html> : 表示本文档遵循html5规范&lt;html> ： 表示一个网页根标签/根元素（root element）&lt;head> : 定义了一个html网页的头信息，主要是一些元数据【描述或者管理数据的数据】&lt;meta charset="utf-8"> : 设置浏览器以哪种编码来解析网页，如果不设置就有可能会产生乱码&lt;title> : 设置浏览器的标签页的显示&lt;body> : HTML所有要显示在网页的内容<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-2-单标签和双标签"><a href="#3-2-单标签和双标签" class="headerlink" title="3.2 单标签和双标签"></a>3.2 单标签和双标签</h3><pre class="line-numbers language-html" data-language="html"><code class="language-html">双标签：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>双标签内部<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>单标签：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span><span class="token punctuation">></span></span>，<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>  一般不需要在双标签内部输入内容时都可以简写为单标签<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="4-需要了解的见标签"><a href="#4-需要了解的见标签" class="headerlink" title="4.需要了解的见标签"></a>4.需要了解的见标签</h2><h3 id="4-1标题标签，段落标签，换行标签以及水平线标签"><a href="#4-1标题标签，段落标签，换行标签以及水平线标签" class="headerlink" title="4.1标题标签，段落标签，换行标签以及水平线标签"></a>4.1标题标签，段落标签，换行标签以及水平线标签</h3><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>一级标题<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>二级标题<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>...一直到6级标题<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>这里添加的内容为一个段落 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>可以有多个p标签<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>相当于换行的功能换行标签  在需要换行的位置添加<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>就可以自动换行<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>水平线标签添加一条线单标签 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span><span class="token punctuation">/></span></span>中的修饰内容可加可不加 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>5<span class="token punctuation">"</span></span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>red<span class="token punctuation">"</span></span> <span class="token attr-name">aign</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>left<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="4-2字体标签，特殊字符，文本格式标签以及锚点"><a href="#4-2字体标签，特殊字符，文本格式标签以及锚点" class="headerlink" title="4.2字体标签，特殊字符，文本格式标签以及锚点"></a>4.2字体标签，特殊字符，文本格式标签以及锚点</h3><pre class="line-numbers language-html" data-language="html"><code class="language-html">字体标签<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>font</span> <span class="token attr-name">size</span> <span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>5<span class="token punctuation">"</span></span> <span class="token attr-name">;color</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>red<span class="token punctuation">"</span></span><span class="token attr-name">;</span> <span class="token attr-name">face</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>宋体<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>这里是要改变的字体<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>font</span><span class="token punctuation">></span></span>特殊字符&amp;lt &amp;gt&lt;     >  转义字符 &amp;lt就是&lt;  &amp;gt就是>的意思    文本格式标签粗体<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>strong</span><span class="token punctuation">></span></span>粗体<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>strong</span><span class="token punctuation">></span></span>    斜体<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>em</span><span class="token punctuation">></span></span>斜体<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>em</span><span class="token punctuation">></span></span>    删除线<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>del</span><span class="token punctuation">></span></span>删除线<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>del</span><span class="token punctuation">></span></span>    下划线<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>u</span><span class="token punctuation">></span></span>下划线<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>u</span><span class="token punctuation">></span></span>    大号<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>big</span><span class="token punctuation">></span></span>大号字体<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>big</span><span class="token punctuation">></span></span>    小号<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>small</span><span class="token punctuation">></span></span>小号字体<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>small</span><span class="token punctuation">></span></span>            锚点    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>top<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">harf</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#top<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>回到top这个定位了锚点的位置<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span> （相当于回到顶部）<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="5-重要的标签"><a href="#5-重要的标签" class="headerlink" title="5.重要的标签"></a>5.重要的标签</h2><h3 id="5-1-div-和span"><a href="#5-1-div-和span" class="headerlink" title="5.1 div 和span"></a>5.1 div 和span</h3><ul><li>div和span都属于容器标签 可以用来存放任何东西 包括标签</li><li>区别<ul><li>div换行</li><li>span不换行  多个span共享一行</li></ul></li></ul><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>标题<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">border</span><span class="token punctuation">:</span> 1px solid red<span class="token punctuation">;</span> <span class="token property">width</span><span class="token punctuation">:</span> 300px<span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>这里是div的内容在这里添加一个span容器容器的内容是我的span<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">border</span><span class="token punctuation">:</span> 1px solid blue<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>我是span<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>这里是第二个div<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">border</span><span class="token punctuation">:</span> 1px solid red<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>这里是div外的span容器<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="5-2-图片和超链接以及列表标签"><a href="#5-2-图片和超链接以及列表标签" class="headerlink" title="5.2 图片和超链接以及列表标签"></a>5.2 图片和超链接以及列表标签</h3><ul><li>图片标签</li></ul><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>这里放图片的路径<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>200<span class="token punctuation">"</span></span> <span class="token attr-name">heigth</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>200<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>当图片不能显示时出现的提示信息<span class="token punctuation">"</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>这里是鼠标放在图片上的提示信息<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><ul><li>超链接标签</li></ul><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">hraf</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>这里放需要跳转的链接路径 可以是绝对路径也可以是相对路径<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_self<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>超链接<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span>target : 开启新链接的方式_blank: 在浏览器中打开一个新的窗口_parent: 在父窗口打开_self: 在当前窗口打开，默认_top: 在整个浏览器中打开链接，删除其他所有框架<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>列表标签<ul><li>列表分为有序列表和无序列表</li></ul></li></ul><pre class="line-numbers language-html" data-language="html"><code class="language-html">1.有序列表有序可选项有: 数字 大小写字母 大小写阿拉伯数组i或者I<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ol</span> <span class="token attr-name">type</span> <span class="token attr-value"><span class="token punctuation attr-equals">=</span> <span class="token punctuation">"</span>1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>新闻<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>娱乐<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ol</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span>2.无序列表无序列表可选项：空心圆：circle实心圆：disc黑色实心方块：square<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>disc<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>体育<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="5-3表格标签"><a href="#5-3表格标签" class="headerlink" title="5.3表格标签"></a>5.3表格标签</h3><h4 id="1-表格的结构化标签"><a href="#1-表格的结构化标签" class="headerlink" title="1.表格的结构化标签"></a>1.表格的结构化标签</h4><ol><li>caption：表格的标题</li><li>thead：表格的头部</li><li>tbody：表格的整体</li><li>tfoot：表格的尾部</li></ol><h4 id="2-表格的标签"><a href="#2-表格的标签" class="headerlink" title="2.表格的标签"></a>2.表格的标签</h4><ol><li>table：表格的根标签</li><li>tr：   一个tr标签就表示一行</li><li>td：   一个td标签表示一个单元格 <ol><li>th和td一样 不过th用于thead中用来表示标题格</li></ol></li></ol><h4 id="3-标签的属性"><a href="#3-标签的属性" class="headerlink" title="3.标签的属性"></a>3.标签的属性</h4><ol><li>border ：边框值 可选”0“或者“1”</li><li>borderColor ：边框颜色</li><li>align ：   表格对齐功能   center    left    right</li><li>cellpadding :  单元格填充，单元格与内容之间的间距</li><li>cellspacing ： 单元格和单元格之间的距离</li></ol><h4 id="4-跨行和跨列"><a href="#4-跨行和跨列" class="headerlink" title="4.跨行和跨列"></a>4.跨行和跨列</h4><ol><li>colspan：横向合并</li><li>rowspan：纵向合并</li></ol><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>标题<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">border</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span> <span class="token attr-name">cellspacing</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">cellpadding</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>10<span class="token punctuation">"</span></span> <span class="token attr-name">align</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>center<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token comment">&lt;!-- 标题标签 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>caption</span><span class="token punctuation">></span></span>每日工作计划表<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>caption</span><span class="token punctuation">></span></span><span class="token comment">&lt;!-- 表格头部 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>thead</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>序号<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>工作事项<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>thead</span><span class="token punctuation">></span></span><span class="token comment">&lt;!-- 表格主体 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tbody</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span> <span class="token attr-name">align</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>center<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tbody</span><span class="token punctuation">></span></span><span class="token comment">&lt;!-- 表格底部 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tfoot</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span> <span class="token attr-name">align</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>center<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name">colspan</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>版权所有<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tfoot</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="5-4表单标签"><a href="#5-4表单标签" class="headerlink" title="5.4表单标签"></a>5.4表单标签</h3><p>form元素就是html中的表单标签。</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>提交的表单的目标的地址<span class="token punctuation">"</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>post<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    ....<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>5.4.1 表单标签中常用的标签框</p><ul><li>文本框</li><li>密码框</li><li>单选框</li><li>复选框</li><li>普通按钮</li><li>提交按钮</li><li>重置按钮</li><li>上传选项</li><li>下拉列表</li><li>文本域</li><li>隐藏域</li></ul><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>表单标签的标签框练习<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span><span class="token punctuation">></span></span><span class="token comment">&lt;!-- 文本框 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span><span class="token comment">&lt;!-- placeholder ： 提示文字 --></span>用户名称: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>username<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>请输入用户名称<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token comment">&lt;!-- 密码框 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span><span class="token comment">&lt;!-- placeholder ： 提示文字 --></span>用户密码: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>请输入用户密码<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token comment">&lt;!-- 单选框 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span><span class="token comment">&lt;!-- name ： 单选框的名字必须要相同，否则就无法实现单选 value : 手动的给单选项赋值checked="checked" : 加上了这句话表示默认的选项--></span>性别: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>gender<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span> <span class="token attr-name">checked</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checked<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>男<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>gender<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>2<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>女<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token comment">&lt;!-- 复选框 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>爱好:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>hobby<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>basketball<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>篮球<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>hobby<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>football<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>足球<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>hobby<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>pingpang<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>乒乓球<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token comment">&lt;!-- 上传选项 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>文件上传:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>file<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>user<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token comment">&lt;!-- 下拉列表 multiple : 开启下拉列表的多选模式--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>addr<span class="token punctuation">"</span></span> <span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>china<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>中国<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>japan<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>小日子<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>korea<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>棒子<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span><span class="token comment">&lt;!-- 文本域 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>textarea</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>info<span class="token punctuation">"</span></span> <span class="token attr-name">rows</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>10<span class="token punctuation">"</span></span> <span class="token attr-name">cols</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>10<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>textarea</span><span class="token punctuation">></span></span><span class="token comment">&lt;!-- 隐藏域 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>hidden<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>123<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>hid<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token comment">&lt;!-- 按钮 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>我很普通<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>reset<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>重置<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token comment">&lt;!-- 提交表单 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>image<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>img/001.png<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>提交<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> javaWeb </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Study </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>个人页面云服务</title>
      <link href="/2021/08/21/ge-ren-ye-mian-yun-fu-wu/"/>
      <url>/2021/08/21/ge-ren-ye-mian-yun-fu-wu/</url>
      
        <content type="html"><![CDATA[<h1 id="任务名称：个人主页项目"><a href="#任务名称：个人主页项目" class="headerlink" title="任务名称：个人主页项目"></a>任务名称：个人主页项目</h1><h2 id="项目部署与云服务搭建"><a href="#项目部署与云服务搭建" class="headerlink" title="项目部署与云服务搭建"></a>项目部署与云服务搭建</h2><h3 id="1-购买阿里云宝塔服务器"><a href="#1-购买阿里云宝塔服务器" class="headerlink" title="1.购买阿里云宝塔服务器"></a>1.购买阿里云宝塔服务器</h3><p><a href="https://www.aliyun.com/minisite/goods?userCode=k6ji3ksd">https://www.aliyun.com/minisite/goods?userCode=k6ji3ksd</a></p><p>2.<a href="https://account.aliyun.com/login/login.htm?oauth_callback=https://swas.console.aliyun.com/&amp;lang=zh#/servers">https://account.aliyun.com/login/login.htm?oauth_callback=https%3A%2F%2Fswas.console.aliyun.com%2F&amp;lang=zh#/servers</a></p><h3 id="登陆阿里云"><a href="#登陆阿里云" class="headerlink" title="登陆阿里云"></a>登陆阿里云</h3><p>在服务器列表，点击对应服务器详情</p><p><img src="/2021/08/21/ge-ren-ye-mian-yun-fu-wu/1.png" alt="1"></p><p>会来到如图所示的服务器详情页</p><p><img src="/2021/08/21/ge-ren-ye-mian-yun-fu-wu/2.png" alt="2"></p><p>然后建立连接</p><p><img src="/2021/08/21/ge-ren-ye-mian-yun-fu-wu/3.png" alt="3"></p><p>输入网址然后输入上图得到的账号密码</p><p><img src="/2021/08/21/ge-ren-ye-mian-yun-fu-wu/4.png" alt="4"></p><p>进入后点击软件商店搜索下载应用</p><p><img src="/2021/08/21/ge-ren-ye-mian-yun-fu-wu/5.png" alt="5"></p><p>进入tomcat设置界面修改端口号</p><p><img src="/2021/08/21/ge-ren-ye-mian-yun-fu-wu/6.png" alt="6"></p><p>之后点击服务重启tomcat即可</p><h3 id="点击文件找到tomcat文件夹点击进入"><a href="#点击文件找到tomcat文件夹点击进入" class="headerlink" title="点击文件找到tomcat文件夹点击进入"></a>点击文件找到tomcat文件夹点击进入</h3><p><img src="/2021/08/21/ge-ren-ye-mian-yun-fu-wu/7.png" alt="7"></p><p>点击进入ROOT中删除所有文件</p><p><img src="/2021/08/21/ge-ren-ye-mian-yun-fu-wu/8.png" alt="7"></p><p>进入<a href="https://github.com/gaojiancoder/-/tree/main%E5%B0%86%E7%9B%B8%E5%85%B3%E6%96%87%E4%BB%B6%E4%B8%8B%E8%BD%BD%E4%B8%8B%E6%9D%A5">https://github.com/gaojiancoder/-/tree/main将相关文件下载下来</a></p><p><img src="/2021/08/21/ge-ren-ye-mian-yun-fu-wu/9.png" alt="9"></p><p>除了不要的文件夹其余全部加入ROOT文件夹中</p><p><img src="/2021/08/21/ge-ren-ye-mian-yun-fu-wu/10.png" alt="10"></p><p>进入db.properties中修改内容</p><p><img src="/2021/08/21/ge-ren-ye-mian-yun-fu-wu/11.png" alt="11"></p><p>将数据名和用户名密码写入db.properties中</p><p><img src="/2021/08/21/ge-ren-ye-mian-yun-fu-wu/12.png" alt="12"></p><p>输入网址成功操作</p><p><img src="/2021/08/21/ge-ren-ye-mian-yun-fu-wu/13.png" alt="13"></p><p>创建成功</p>]]></content>
      
      
      
        <tags>
            
            <tag> notes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>面向对象</title>
      <link href="/2021/08/21/mian-xiang-dui-xiang/"/>
      <url>/2021/08/21/mian-xiang-dui-xiang/</url>
      
        <content type="html"><![CDATA[<h1 id="面向对象概述"><a href="#面向对象概述" class="headerlink" title="面向对象概述"></a>面向对象概述</h1><h2 id="本章重点"><a href="#本章重点" class="headerlink" title="本章重点"></a>本章重点</h2><ul><li>类与方法</li><li>构造方法</li><li>访问权限</li><li>继承</li><li>多态</li><li>抽象和接口</li><li>内存分析</li></ul><h2 id="面向对象和面向过程"><a href="#面向对象和面向过程" class="headerlink" title="面向对象和面向过程"></a>面向对象和面向过程</h2><p>面向对象：侧重的是对象，自己是上帝视角，你创建大象，告诉大象，进冰箱，不用管它怎么进</p><p>优点：可扩展性强，维护成本低</p><p>缺点：新手上手难</p><p>面向过程：侧重的是过程，如何大象装冰箱，第一步打开门，第二步装大象，第三步关门。</p><p>优点：简单</p><p>缺点：代码量大了维护性非常差</p><h2 id="构造放法"><a href="#构造放法" class="headerlink" title="构造放法"></a>构造放法</h2><p>在创建对象的时候自动调用的方法</p><p>语法：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> 类名<span class="token punctuation">(</span>传参<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>注意：</p><ul><li>没有返回值</li><li>在我们new的时候，自动调用构造方法</li></ul><p>作用：在创建对象的时候，给对象设置属性信息</p><p><img src="/2021/08/21/mian-xiang-dui-xiang/1.png" alt="image-20210821122825731"></p><h2 id="构造方法的重载"><a href="#构造方法的重载" class="headerlink" title="构造方法的重载"></a>构造方法的重载</h2><p>构造方法也是方法，也可以重载</p><p>作用：可以用更多的方式去创建对象</p><p>使用this可以访问其他构造方法  this()</p><p><img src="/2021/08/21/mian-xiang-dui-xiang/2.png" alt="image-20210821123534551"></p><h2 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h2><p>1.面向对象的思维来模拟LOL里的盖伦上阵杀敌</p><p><img src="/2021/08/21/mian-xiang-dui-xiang/3.png" alt="image-20210821124826776"></p><p>2.用面向对象的思维完成植物大战僵尸</p><p>植物</p><p><img src="/2021/08/21/mian-xiang-dui-xiang/4.png" alt="image-20210821124846522"></p><p>僵尸</p><p><img src="/2021/08/21/mian-xiang-dui-xiang/5.png" alt="image-20210821124901131"></p><p>场景</p><p><img src="/2021/08/21/mian-xiang-dui-xiang/6.png" alt="image-20210821124913078"></p><h2 id="static"><a href="#static" class="headerlink" title="static"></a>static</h2><p>静态的内容在内存中是保留一份，并且各个对象之间进行共享</p><p><img src="/2021/08/21/mian-xiang-dui-xiang/7.png" alt="image-20210821125957988"></p><p>推荐使用类名去访问</p><p>特点：</p><ul><li>数据共享</li><li>属于类的，不属于对象</li><li>优先于对象产生</li></ul><p>通用构造器，静态构造器</p><p>创建对象的过程：</p><p>1静态构造器</p><p>2通用构造器</p><p>构造方法—&gt;创建对象</p><h2 id="包和导包"><a href="#包和导包" class="headerlink" title="包和导包"></a>包和导包</h2><p>包：本质上是文件夹</p><p>导包：import包+类</p><p>不需要导包：</p><ul><li>在自己包里</li><li>java.lang包下的所有内容不用导包<ul><li>String</li><li>System.out.print</li></ul></li></ul><h2 id="访问权限"><a href="#访问权限" class="headerlink" title="访问权限"></a>访问权限</h2><p>public：公共的  哪里都可以使用</p><p>private：私有的  只有自己的类里可以使用</p><p>default：包访问权限   在自己的包里可以使用</p><h2 id="继承"><a href="#继承" class="headerlink" title="继承"></a>继承</h2><p>继承：子类可以自动拥有父类中除了私有内容外的其他所有内容</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> 类 <span class="token keyword">extends</span> 父类<span class="token punctuation">&#123;</span>  <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>作用：简化代码           重复操作的行为可写为父类</p><p>子类对父类进行了扩展</p><h2 id="super关键字"><a href="#super关键字" class="headerlink" title="super关键字"></a>super关键字</h2><p>super：表示父类中的内容</p><p>This：表示自己类中的内容</p><p>用super和this来区分父类和子类中重要的内容</p><p>创建对象的过程：先创建父类的对象然后创建子类的对象</p><p><img src="/2021/08/21/mian-xiang-dui-xiang/8.png" alt="image-20210821135635313"></p><p>小总结：</p><ul><li>super可以获取父类中的内容</li><li>可以调用父类中的构造方法，必须卸载子类构造方法的第一行，如果父类的构造是无参的可以不写，如果有参数必须要写</li></ul><h2 id="练习2"><a href="#练习2" class="headerlink" title="练习2"></a>练习2</h2><p><img src="/2021/08/21/mian-xiang-dui-xiang/9.png" alt="image-20210821135729924"></p><h3 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Game</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"开机，准备就绪"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">play</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"我要打游戏"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"关机，睡觉"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> DNF <span class="token keyword">extends</span> <span class="token class-name">Game</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">play</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"玩DNF"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> LOL <span class="token keyword">extends</span> <span class="token class-name">Game</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">play</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"玩LOL"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> CS <span class="token keyword">extends</span> <span class="token class-name">Game</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">play</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"玩CS"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Palyer</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">happy</span><span class="token punctuation">(</span><span class="token class-name">Game</span> game<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        game<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        game<span class="token punctuation">.</span><span class="token function">play</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        game<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"开心"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Client</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Game</span> game1 <span class="token operator">=</span><span class="token keyword">new</span> <span class="token function">DNF</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Game</span> game2 <span class="token operator">=</span><span class="token keyword">new</span> <span class="token function">LOL</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Game</span> game3 <span class="token operator">=</span><span class="token keyword">new</span> <span class="token function">CS</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Palyer</span> palyer <span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Palyer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        palyer<span class="token punctuation">.</span><span class="token function">happy</span><span class="token punctuation">(</span>game1<span class="token punctuation">)</span><span class="token punctuation">;</span>        palyer<span class="token punctuation">.</span><span class="token function">happy</span><span class="token punctuation">(</span>game3<span class="token punctuation">)</span><span class="token punctuation">;</span>        palyer<span class="token punctuation">.</span><span class="token function">happy</span><span class="token punctuation">(</span>game2<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="final"><a href="#final" class="headerlink" title="final"></a>final</h2><ul><li><p>被final修饰的变量不可以被改变</p></li><li><p>被final修饰的方法不可以重写</p></li><li><p>被final修饰的类不可以被继承</p><p>final是不可变的</p></li></ul><h2 id="抽象"><a href="#抽象" class="headerlink" title="抽象"></a>抽象</h2><p>抽象类：如果一个类中有抽象方法，这个类必须是抽象类</p><p>抽象方法：使用abstract来修饰，不可以有方法体，直接用分好结束</p><p>特点：</p><ul><li>抽象类不可以创建对象</li><li>抽象类的子类，必须重写父类中的抽像方法，否则子类必须是抽象类</li><li>通过抽象类可以强制的要求子类中必须有的方法‘</li><li>抽象类中可以有正常的方法</li></ul><h2 id="成员变量初始值"><a href="#成员变量初始值" class="headerlink" title="成员变量初始值"></a>成员变量初始值</h2><p>java中所有的变量必须先声明后赋值才能使用</p><p>Java中成员变量，在创建对象的时候，都会执行一次初始化操作，都会给一个默认自</p><p>基本数据类型默认值都是0，包括boolean-&gt;false</p><p>引用数据类型：null</p><h2 id="equals和"><a href="#equals和" class="headerlink" title="equals和=="></a>equals和==</h2><p>==判断左右两端的 数据类型是否一致</p><p>equals：判断两个对象是否相等</p><p>字符串要用equals来判断</p><p>==判断的是内存地址</p><p>equals判断的是值</p><p><img src="/2021/08/21/mian-xiang-dui-xiang/10.png" alt="image-20210821213308999"></p><h2 id="异常"><a href="#异常" class="headerlink" title="异常"></a>异常</h2><h3 id="程序错误分三种"><a href="#程序错误分三种" class="headerlink" title="程序错误分三种"></a>程序错误分三种</h3><p>1.编译错误</p><p>2.运行时错误</p><p>3逻辑错误</p><p><img src="/2021/08/21/mian-xiang-dui-xiang/21.png" alt="1"></p><h3 id="错误与异常的区别"><a href="#错误与异常的区别" class="headerlink" title="错误与异常的区别"></a>错误与异常的区别</h3><p>错误：是无法被处理的，程序在运行中出现的比较严重的问题</p><p>异常：能够被程序本身处理的</p><p>父类不声明异常继承的子类也不可以声明异常</p><p>父类声明异常，子类声明的异常不能超过父类异常的范围</p><h3 id="为什么要自定义异常"><a href="#为什么要自定义异常" class="headerlink" title="为什么要自定义异常"></a>为什么要自定义异常</h3><ul><li><p>1.封装</p></li><li><p>2.快速定位</p></li></ul><p>自定义异常步骤</p><ul><li>创建类</li><li>继承Exception类或者Exception子类</li><li>重写构造方法</li></ul><p><img src="/2021/08/21/mian-xiang-dui-xiang/22.png" alt="2"></p>]]></content>
      
      
      <categories>
          
          <category> object </category>
          
      </categories>
      
      
        <tags>
            
            <tag> notes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>枚举</title>
      <link href="/2021/08/16/mei-ju/"/>
      <url>/2021/08/16/mei-ju/</url>
      
        <content type="html"><![CDATA[<h2 id="枚举"><a href="#枚举" class="headerlink" title="枚举"></a>枚举</h2><h3 id="1书写格式"><a href="#1书写格式" class="headerlink" title="1书写格式"></a>1书写格式</h3><p>变量不可重复，用大写字母定义</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">enum</span> <span class="token class-name">Season</span> <span class="token punctuation">&#123;</span>    SPRING<span class="token punctuation">,</span>SUMMER<span class="token punctuation">,</span>AUTUMN<span class="token punctuation">,</span>WINTER<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="2枚举创建"><a href="#2枚举创建" class="headerlink" title="2枚举创建"></a>2枚举创建</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token comment">//枚举创建</span>    <span class="token class-name">Season</span> season<span class="token operator">=</span><span class="token class-name">Season</span><span class="token punctuation">.</span>SPRING<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3常用方法"><a href="#3常用方法" class="headerlink" title="3常用方法"></a>3常用方法</h3><p>values：方法返回在枚举中按照声明顺序产生的常量值组成的数组</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token class-name">Season</span><span class="token punctuation">[</span><span class="token punctuation">]</span> values <span class="token operator">=</span> <span class="token class-name">Season</span><span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Season</span> season<span class="token operator">:</span>values<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>season<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">/**SPRING*SUMMER*AUTUMN*WINTER*/</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>ordinal：某个枚举常量的索引</p><h3 id="构造方法"><a href="#构造方法" class="headerlink" title="构造方法"></a>构造方法</h3><p>只能由private修饰</p><p>常量必须在最前面定义</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">enum</span> light <span class="token punctuation">&#123;</span>    RED<span class="token punctuation">,</span>YELLOW<span class="token punctuation">,</span>GREEN<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="红绿灯案例"><a href="#红绿灯案例" class="headerlink" title="红绿灯案例"></a>红绿灯案例</h4><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        test1 test1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token function">test1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        test1<span class="token punctuation">.</span><span class="token function">test3</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">private</span> light light1 <span class="token operator">=</span> light<span class="token punctuation">.</span>RED<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">change</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">switch</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>light1<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">case</span> RED<span class="token operator">:</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>light1<span class="token operator">=</span>light<span class="token punctuation">.</span>YELLOW<span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> GREEN<span class="token operator">:</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>light1<span class="token operator">=</span>light<span class="token punctuation">.</span>RED<span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> YELLOW<span class="token operator">:</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>light1<span class="token operator">=</span>light<span class="token punctuation">.</span>GREEN<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test3</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">change</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>light1<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Enum </category>
          
      </categories>
      
      
        <tags>
            
            <tag> notes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>java8 Stream API 了解</title>
      <link href="/2021/08/16/java8-stream-api-liao-jie/"/>
      <url>/2021/08/16/java8-stream-api-liao-jie/</url>
      
        <content type="html"><![CDATA[<h2 id="Lambda-amp-amp-Stream"><a href="#Lambda-amp-amp-Stream" class="headerlink" title="Lambda&amp;&amp;Stream"></a>Lambda&amp;&amp;Stream</h2><h3 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h3><p>简化我们匿名内部类的调用</p><p>简化之前</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Runnable</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"你好"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>简化之后</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"你"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="依赖于函数接口"><a href="#依赖于函数接口" class="headerlink" title="依赖于函数接口"></a>依赖于函数接口</h3><p>1.在接口中只允许有一个抽象的方法</p><p>2.@FunctionalInterface标记为该接口为函数接口</p><p>3.可以通过default修饰为普通方法</p><h3 id="方法调用"><a href="#方法调用" class="headerlink" title="方法调用"></a>方法调用</h3><p>()   参数列表</p><p>-&gt;   分隔</p><p>{}方法体</p><p>无参调用</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">StreamDemo1</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-></span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"nih"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>      <span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>有参调用代码实现</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">StreamDemo1</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        youcan youcan1<span class="token operator">=</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span>j<span class="token punctuation">)</span><span class="token operator">-></span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> i<span class="token operator">+</span><span class="token string">"---"</span><span class="token operator">+</span>j<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>youcan1<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token annotation punctuation">@FunctionalInterface</span><span class="token keyword">private</span> <span class="token keyword">interface</span> youcan<span class="token punctuation">&#123;</span>        <span class="token class-name">String</span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token punctuation">,</span><span class="token keyword">int</span> j<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>精简</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">StreamDemo1</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>       <span class="token class-name">String</span> s<span class="token operator">=</span><span class="token punctuation">(</span><span class="token punctuation">(</span>youcan<span class="token punctuation">)</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span>j<span class="token punctuation">)</span><span class="token operator">-></span> i<span class="token operator">+</span><span class="token string">"---"</span><span class="token operator">+</span>j<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token annotation punctuation">@FunctionalInterface</span><span class="token keyword">private</span> <span class="token keyword">interface</span> youcan<span class="token punctuation">&#123;</span>        <span class="token class-name">String</span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token punctuation">,</span><span class="token keyword">int</span> j<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>代码案例ArrayList</p><p>forEach遍历数组</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ArrayLIst</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span> list <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span> <span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"d"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"a"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"s"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        list<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>s <span class="token operator">-></span> <span class="token punctuation">&#123;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Stream"><a href="#Stream" class="headerlink" title="Stream"></a>Stream</h2><p>Stream：非常方便精简的形式遍历集合实现过滤，排序等</p><h3 id="API"><a href="#API" class="headerlink" title="API"></a>API</h3><h4 id="1-filter-通过设置条件过滤元素"><a href="#1-filter-通过设置条件过滤元素" class="headerlink" title="1.filter:通过设置条件过滤元素"></a>1.filter:通过设置条件过滤元素</h4><p>Conrains():找出包含()中的元素</p><p>collect：终止操作符，把流元素集合起来</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span> string <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token string">"asd"</span><span class="token punctuation">,</span> <span class="token string">"asdf"</span><span class="token punctuation">,</span> <span class="token string">"213"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span> s <span class="token operator">=</span> string<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>str <span class="token operator">-></span> str<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">"s"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">//[asd, asdf]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2-distinct-去重-比较的是两个数的地址"><a href="#2-distinct-去重-比较的是两个数的地址" class="headerlink" title="2.distinct:去重,比较的是两个数的地址"></a>2.distinct:去重,比较的是两个数的地址</h4><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">distinct</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span> string <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token string">"asd"</span><span class="token punctuation">,</span> <span class="token string">"asdf"</span><span class="token punctuation">,</span> <span class="token string">"213"</span><span class="token punctuation">,</span> <span class="token string">"213"</span><span class="token punctuation">,</span> <span class="token string">"123123"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span> collect <span class="token operator">=</span> string<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">distinct</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>collect<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">//[asd, asdf, 213, 123123]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="3-limit：返回一个不超过给定长度的流"><a href="#3-limit：返回一个不超过给定长度的流" class="headerlink" title="3.limit：返回一个不超过给定长度的流"></a>3.limit：返回一个不超过给定长度的流</h4><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">limit</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span> string <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token string">"asd"</span><span class="token punctuation">,</span> <span class="token string">"asdf"</span><span class="token punctuation">,</span> <span class="token string">"213"</span><span class="token punctuation">,</span> <span class="token string">"213"</span><span class="token punctuation">,</span> <span class="token string">"123123"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span> collect <span class="token operator">=</span> string<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">limit</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>collect<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">//[asd, asdf]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="4-skip-丢掉前几个元素"><a href="#4-skip-丢掉前几个元素" class="headerlink" title="4.skip:丢掉前几个元素"></a>4.skip:丢掉前几个元素</h4><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">skip</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span> string <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token string">"asd"</span><span class="token punctuation">,</span> <span class="token string">"asdf"</span><span class="token punctuation">,</span> <span class="token string">"213"</span><span class="token punctuation">,</span> <span class="token string">"213"</span><span class="token punctuation">,</span> <span class="token string">"123123"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span> collect <span class="token operator">=</span> string<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">skip</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>collect<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">//[213, 213, 123123]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="5-map-对流中所有元素做统一处理"><a href="#5-map-对流中所有元素做统一处理" class="headerlink" title="5.map:对流中所有元素做统一处理"></a>5.map:对流中所有元素做统一处理</h4><p>接收函数为参数，函数会被应用到每个元素上</p><p>Concat:在元素后加后缀</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span> string <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token string">"asd"</span><span class="token punctuation">,</span> <span class="token string">"asdf"</span><span class="token punctuation">,</span> <span class="token string">"213"</span><span class="token punctuation">,</span> <span class="token string">"213"</span><span class="token punctuation">,</span> <span class="token string">"123123"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span> list <span class="token operator">=</span> string<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>str <span class="token operator">-></span> str<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token string">"__heima"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">//[asd__heima, asdf__heima, 213__heima, 213__heima, 123123__heima]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="6-flatMap：扁平化一个流，把各个数组的流合并起来成一个流"><a href="#6-flatMap：扁平化一个流，把各个数组的流合并起来成一个流" class="headerlink" title="6.flatMap：扁平化一个流，把各个数组的流合并起来成一个流"></a>6.flatMap：扁平化一个流，把各个数组的流合并起来成一个流</h4><h4 id="7-sorted：返回排序后的流"><a href="#7-sorted：返回排序后的流" class="headerlink" title="7.sorted：返回排序后的流"></a>7.sorted：返回排序后的流</h4><p>排序需要的第三方jar包</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>commons-collections<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>commons-collections<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>3.2.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"> <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">sorted</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span> string <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token string">"asd"</span><span class="token punctuation">,</span> <span class="token string">"asdf"</span><span class="token punctuation">,</span> <span class="token string">"213"</span><span class="token punctuation">,</span> <span class="token string">"213"</span><span class="token punctuation">,</span> <span class="token string">"123123"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span> collect <span class="token operator">=</span> string<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sorted</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>collect <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//[123123, 213, 213, asd, asdf]</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"----------------"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span> int1 <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token string">"40"</span><span class="token punctuation">,</span> <span class="token string">"-312"</span><span class="token punctuation">,</span> <span class="token string">"-32"</span><span class="token punctuation">,</span> <span class="token string">"213"</span><span class="token punctuation">,</span> <span class="token string">"123"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span> collect1 <span class="token operator">=</span> int1<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sorted</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>collect1<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//[-312, -32, 123, 213, 40]</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"----------"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span> int2 <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token string">"答复"</span><span class="token punctuation">,</span> <span class="token string">"阿道夫"</span><span class="token punctuation">,</span> <span class="token string">"奥"</span><span class="token punctuation">,</span> <span class="token string">"威风"</span><span class="token punctuation">,</span> <span class="token string">"好的"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span> collect2 <span class="token operator">=</span> int2<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sorted</span><span class="token punctuation">(</span><span class="token class-name">Collator</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token class-name">Locale</span><span class="token punctuation">.</span>CHINA<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>collect2<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">//[阿道夫, 奥, 答复, 好的, 威风]</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="终止操作符"><a href="#终止操作符" class="headerlink" title="终止操作符"></a>终止操作符</h3><h4 id="1-anyMatch-检查是否至少匹配一个元素"><a href="#1-anyMatch-检查是否至少匹配一个元素" class="headerlink" title="1.anyMatch:检查是否至少匹配一个元素"></a>1.anyMatch:检查是否至少匹配一个元素</h4><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">anymatch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span> string <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token string">"asd"</span><span class="token punctuation">,</span> <span class="token string">"asdf"</span><span class="token punctuation">,</span> <span class="token string">"213"</span><span class="token punctuation">,</span> <span class="token string">"213"</span><span class="token punctuation">,</span> <span class="token string">"123123"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">boolean</span> bc <span class="token operator">=</span> string<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">anyMatch</span><span class="token punctuation">(</span>s <span class="token operator">-></span> s<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">"2"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>bc<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token comment">//ture</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2-allMatch：是否匹配所有元素"><a href="#2-allMatch：是否匹配所有元素" class="headerlink" title="2.allMatch：是否匹配所有元素"></a>2.allMatch：是否匹配所有元素</h4><h4 id="3-noneMatch-没有匹配-所有元素都不满足条件"><a href="#3-noneMatch-没有匹配-所有元素都不满足条件" class="headerlink" title="3.noneMatch:没有匹配 所有元素都不满足条件"></a>3.noneMatch:没有匹配 所有元素都不满足条件</h4><h4 id="4-findAny：返回当前流的任意元素"><a href="#4-findAny：返回当前流的任意元素" class="headerlink" title="4.findAny：返回当前流的任意元素"></a>4.findAny：返回当前流的任意元素</h4><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">findAny</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span> string <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token string">"asd"</span><span class="token punctuation">,</span> <span class="token string">"asdf"</span><span class="token punctuation">,</span> <span class="token string">"213"</span><span class="token punctuation">,</span> <span class="token string">"213"</span><span class="token punctuation">,</span> <span class="token string">"123123"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Optional</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span> any <span class="token operator">=</span> string<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">findAny</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>any<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="5-forEach：遍历"><a href="#5-forEach：遍历" class="headerlink" title="5.forEach：遍历"></a>5.forEach：遍历</h4><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span> string <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token string">"asd"</span><span class="token punctuation">,</span> <span class="token string">"asdf"</span><span class="token punctuation">,</span> <span class="token string">"213"</span><span class="token punctuation">,</span> <span class="token string">"213"</span><span class="token punctuation">,</span> <span class="token string">"123123"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    string<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>s <span class="token operator">-></span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/** * asd * asdf * 213 * 213 * 123123 */</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="6-collect-将流转换成其他模式"><a href="#6-collect-将流转换成其他模式" class="headerlink" title="6.collect:将流转换成其他模式"></a>6.collect:将流转换成其他模式</h4><h4 id="7-reduce：将流中的元素反复结合起来，得到一个值"><a href="#7-reduce：将流中的元素反复结合起来，得到一个值" class="headerlink" title="7.reduce：将流中的元素反复结合起来，得到一个值"></a>7.reduce：将流中的元素反复结合起来，得到一个值</h4><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span> string <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token string">"asd"</span><span class="token punctuation">,</span> <span class="token string">"asdf"</span><span class="token punctuation">,</span> <span class="token string">"213"</span><span class="token punctuation">,</span> <span class="token string">"213"</span><span class="token punctuation">,</span> <span class="token string">"123123"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">Optional</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span> reduce <span class="token operator">=</span> string<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span>end<span class="token punctuation">,</span> item<span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> end <span class="token operator">+</span> item<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>reduce<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">//Optional[asdasdf213213123123]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="8-count-获取集合中元素数量"><a href="#8-count-获取集合中元素数量" class="headerlink" title="8.count:获取集合中元素数量"></a>8.count:获取集合中元素数量</h4>]]></content>
      
      
      <categories>
          
          <category> Stream </category>
          
      </categories>
      
      
        <tags>
            
            <tag> notes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>多线程</title>
      <link href="/2021/08/15/duo-xian-cheng/"/>
      <url>/2021/08/15/duo-xian-cheng/</url>
      
        <content type="html"><![CDATA[<h2 id="多线程"><a href="#多线程" class="headerlink" title="多线程"></a>多线程</h2><h3 id="创建多线程方法"><a href="#创建多线程方法" class="headerlink" title="创建多线程方法"></a>创建多线程方法</h3><p>1.继承Thread类</p><p>2.实现Runnable接口</p><p>3.实现Callable接口</p><h3 id="一-继承Thread类"><a href="#一-继承Thread类" class="headerlink" title="一.继承Thread类"></a>一.继承Thread类</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//创建线程方式yi：继承Thread类，重写run()方法，调用start开启线程</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestThread01</span> <span class="token keyword">extends</span> <span class="token class-name">Thread</span><span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//run方法线程体</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">20</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"我在看代码---"</span><span class="token operator">+</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">//main线程，主线程</span>        <span class="token comment">//创建一个线程对象</span>        <span class="token class-name">TestThread01</span> thread01 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TestThread01</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//调用start（）方法开启线程</span>        thread01<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">20</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"我在学习---"</span><span class="token operator">+</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>总结：线程开启不一定立即执行，由cpu调度实行</p><h4 id="下载图片案例"><a href="#下载图片案例" class="headerlink" title="下载图片案例"></a>下载图片案例</h4><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">FileUtils</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">File</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>net<span class="token punctuation">.</span></span>URL<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Download</span> <span class="token keyword">extends</span> <span class="token class-name">Thread</span><span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> url<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token class-name">Download</span><span class="token punctuation">(</span><span class="token class-name">String</span> url<span class="token punctuation">,</span><span class="token class-name">String</span> name<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>url <span class="token operator">=</span>url<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token operator">=</span>name<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">WebDownload</span> download <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WebDownload</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        download<span class="token punctuation">.</span><span class="token function">download</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"下载了文件："</span><span class="token operator">+</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Download</span> download<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Download</span><span class="token punctuation">(</span><span class="token string">"https://images3.alphacoders.com/911/911582.jpg"</span><span class="token punctuation">,</span><span class="token string">"1.png"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        download<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">//下载器</span>    <span class="token keyword">class</span> <span class="token class-name">WebDownload</span><span class="token punctuation">&#123;</span>        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">download</span><span class="token punctuation">(</span><span class="token class-name">String</span> url<span class="token punctuation">,</span><span class="token class-name">String</span> name<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">FileUtils</span><span class="token punctuation">.</span><span class="token function">copyURLToFile</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token function">URL</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"io异常"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="二-实现Runnable接口"><a href="#二-实现Runnable接口" class="headerlink" title="二.实现Runnable接口"></a>二.实现Runnable接口</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//方式二：实现runnable接口，重写run，执行线程需要丢入runnable接口实现类，调用start()</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestThread</span> <span class="token keyword">implements</span> <span class="token class-name">Runnable</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">20</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"看我："</span> <span class="token operator">+</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">TestThread</span> thread <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TestThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//创建接口的实现类</span>        <span class="token class-name">Thread</span> thread1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span>thread<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//创建线程对象</span>        thread1<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">20</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"看你："</span> <span class="token operator">+</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/2021/08/15/duo-xian-cheng/1.png" alt="1"></p><p>买票案例测试</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestThread</span> <span class="token keyword">implements</span> <span class="token class-name">Runnable</span><span class="token punctuation">&#123;</span>    <span class="token comment">//定义票</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> ticketNums <span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>ticketNums<span class="token operator">&lt;=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"-->拿到了第"</span><span class="token operator">+</span>ticketNums<span class="token operator">--</span><span class="token operator">+</span><span class="token string">"张票"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">TestThread</span> testThread <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TestThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span>testThread<span class="token punctuation">,</span><span class="token string">"小明"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span>testThread<span class="token punctuation">,</span><span class="token string">"小高"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span>testThread<span class="token punctuation">,</span><span class="token string">"我"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="龟兔赛跑案例"><a href="#龟兔赛跑案例" class="headerlink" title="龟兔赛跑案例"></a>龟兔赛跑案例</h4><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Race</span> <span class="token keyword">implements</span> <span class="token class-name">Runnable</span><span class="token punctuation">&#123;</span>    <span class="token comment">//胜利者</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> winner<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">100</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">"2"</span><span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span>i<span class="token operator">%</span><span class="token number">10</span><span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>                    <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">boolean</span> flag <span class="token operator">=</span> <span class="token function">gameOver</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"跑了"</span><span class="token operator">+</span>i<span class="token operator">+</span><span class="token string">"步"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">private</span> <span class="token keyword">boolean</span> <span class="token function">gameOver</span><span class="token punctuation">(</span><span class="token keyword">int</span> steps<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>winner<span class="token operator">!=</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>steps <span class="token operator">>=</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                winner <span class="token operator">=</span> <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>winner<span class="token operator">+</span><span class="token string">"赢了"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Race</span> race <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Race</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span>race<span class="token punctuation">,</span><span class="token string">"1"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span>race<span class="token punctuation">,</span><span class="token string">"2"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>总结：多线程操作同一个资源的情况下，线程不安全，数据紊乱</p><h3 id="三实现Callable接口"><a href="#三实现Callable接口" class="headerlink" title="三实现Callable接口"></a>三实现Callable接口</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">FileUtils</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">File</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>net<span class="token punctuation">.</span></span>URL<span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token comment">//方式三：实现Callable方法</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestCallable</span> <span class="token keyword">implements</span> <span class="token class-name">Callable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Boolean</span><span class="token punctuation">></span></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> url<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token class-name">TestCallable</span><span class="token punctuation">(</span><span class="token class-name">String</span> url<span class="token punctuation">,</span> <span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>url <span class="token operator">=</span> url<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>        <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token class-name">Boolean</span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">WebDownload</span> webDownload <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WebDownload</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        webDownload<span class="token punctuation">.</span><span class="token function">download</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"下载了文件："</span> <span class="token operator">+</span> name<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>        <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ExecutionException</span><span class="token punctuation">,</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">TestCallable</span> download <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TestCallable</span><span class="token punctuation">(</span><span class="token string">"https://images3.alphacoders.com/911/911582.jpg"</span><span class="token punctuation">,</span> <span class="token string">"1.png"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">ExecutorService</span> pool <span class="token operator">=</span> <span class="token class-name">Executors</span><span class="token punctuation">.</span><span class="token function">newFixedThreadPool</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Future</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Boolean</span><span class="token punctuation">></span></span> r1 <span class="token operator">=</span>pool<span class="token punctuation">.</span><span class="token function">submit</span><span class="token punctuation">(</span>download<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">boolean</span> rs1 <span class="token operator">=</span> r1<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        pool<span class="token punctuation">.</span><span class="token function">shutdown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>        <span class="token keyword">class</span> <span class="token class-name">WebDownload</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">download</span><span class="token punctuation">(</span><span class="token class-name">String</span> url<span class="token punctuation">,</span> <span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">FileUtils</span><span class="token punctuation">.</span><span class="token function">copyURLToFile</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token function">URL</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"io异常"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="四-Lamda表达式"><a href="#四-Lamda表达式" class="headerlink" title="四.Lamda表达式"></a>四.Lamda表达式</h3><h4 id="函数式接口"><a href="#函数式接口" class="headerlink" title="函数式接口"></a>函数式接口</h4><ul><li><p>理解FUnctional Interface（函数式接口）是学习的关键</p></li><li><p>任何接口，如果只包含唯一一个抽象方法，那么他就是一个函数式接口</p></li><li><p>我们可以通过lambda表达式来创建改接口的对象</p></li></ul><p><img src="/2021/08/15/duo-xian-cheng/2.png" alt="2"></p><h4 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h4><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestLambda02</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token class-name">ILove</span> love <span class="token operator">=</span>s<span class="token operator">-></span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"I louve"</span><span class="token operator">+</span>s <span class="token punctuation">)</span><span class="token punctuation">;</span>        love<span class="token punctuation">.</span><span class="token function">love</span><span class="token punctuation">(</span><span class="token string">"小明"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">interface</span> <span class="token class-name">ILove</span><span class="token punctuation">&#123;</span>    <span class="token keyword">void</span> <span class="token function">love</span><span class="token punctuation">(</span><span class="token class-name">String</span> s<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="五-线程"><a href="#五-线程" class="headerlink" title="五.线程"></a>五.线程</h3><h4 id="线程状态"><a href="#线程状态" class="headerlink" title="线程状态"></a>线程状态</h4><ul><li>创建状态</li><li>就绪状态</li><li>运行状态</li><li>阻塞状态</li><li>死亡状态</li></ul><h4 id="线程方法"><a href="#线程方法" class="headerlink" title="线程方法"></a>线程方法</h4><p>setPriority ：更改线程的优先级</p><p>sleep(long):指定毫秒内沉睡</p><p>join：插队</p><p>yield：暂停当前线程对象，执行其他线程</p><p>isAlive：测试线程是否处于活动状态</p><h4 id="停止方法测试代码实现"><a href="#停止方法测试代码实现" class="headerlink" title="停止方法测试代码实现"></a>停止方法测试代码实现</h4><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestStop</span> <span class="token keyword">implements</span> <span class="token class-name">Runnable</span> <span class="token punctuation">&#123;</span>    <span class="token comment">//设置标志位</span>    <span class="token keyword">private</span> <span class="token keyword">boolean</span> flag <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">120</span><span class="token punctuation">;</span>        <span class="token keyword">while</span> <span class="token punctuation">(</span>flag<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"run Thread ----------------"</span> <span class="token operator">+</span> <span class="token punctuation">(</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">stop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>flag <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">TestStop</span> testStop <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TestStop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span>testStop<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//        Thread.sleep(100);</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">100</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"main"</span> <span class="token operator">+</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">90</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                testStop<span class="token punctuation">.</span><span class="token function">stop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"停止"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="线程睡眠代码实现"><a href="#线程睡眠代码实现" class="headerlink" title="线程睡眠代码实现"></a>线程睡眠代码实现</h4><p>模拟网络延迟：放大问题的发生性，多线程操作不安全。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestSleep</span> <span class="token keyword">implements</span> <span class="token class-name">Runnable</span><span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> ticketNums <span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>ticketNums<span class="token operator">&lt;=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"-->拿到了第"</span><span class="token operator">+</span>ticketNums<span class="token operator">--</span><span class="token operator">+</span><span class="token string">"张票"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">TestSleep</span> testSleep <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TestSleep</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span>testSleep<span class="token punctuation">,</span><span class="token string">"小明"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span>testSleep<span class="token punctuation">,</span><span class="token string">"小高"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span>testSleep<span class="token punctuation">,</span><span class="token string">"我"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="测试倒计时代码实现"><a href="#测试倒计时代码实现" class="headerlink" title="测试倒计时代码实现"></a>测试倒计时代码实现</h4><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestSleep2</span> <span class="token keyword">implements</span> <span class="token class-name">Runnable</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> date <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">TestSleep2</span> testSleep2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TestSleep2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span>testSleep2<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>date<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>date <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="获取当前时间代码实现"><a href="#获取当前时间代码实现" class="headerlink" title="获取当前时间代码实现"></a>获取当前时间代码实现</h4><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestSleep2</span> <span class="token keyword">implements</span> <span class="token class-name">Runnable</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Date</span> date <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//获取系统当前时间</span>        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">SimpleDateFormat</span><span class="token punctuation">(</span><span class="token string">"HH:mm:ss"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>date<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                date <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//更新当前时间</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="六-线程同步"><a href="#六-线程同步" class="headerlink" title="六.线程同步"></a>六.线程同步</h3><h4 id="同步方法"><a href="#同步方法" class="headerlink" title="同步方法"></a>同步方法</h4><p>synchronized：在方法中加入以实现给方法上锁</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> unSafeBuy <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">BuyTicker</span> buyTicker <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BuyTicker</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span>buyTicker<span class="token punctuation">,</span> <span class="token string">"a"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span>buyTicker<span class="token punctuation">,</span> <span class="token string">"c"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span>buyTicker<span class="token punctuation">,</span> <span class="token string">"b"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name">BuyTicker</span> <span class="token keyword">implements</span> <span class="token class-name">Runnable</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token keyword">boolean</span> flag <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> ticket <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">while</span> <span class="token punctuation">(</span>flag<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>                <span class="token function">buy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">private</span> <span class="token keyword">synchronized</span> <span class="token keyword">void</span> <span class="token function">buy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>ticket <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            flag <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>            <span class="token keyword">return</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"拿到"</span> <span class="token operator">+</span> ticket<span class="token operator">--</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="lock锁"><a href="#lock锁" class="headerlink" title="lock锁"></a>lock锁</h4><p>使用方法在类中定义</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">private</span> <span class="token keyword">final</span>  <span class="token class-name">ReentrantLock</span> lock <span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">ReenTrantLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后在void方法中使用lock.lock给线程上锁用try ，finally语句</p><p>lock.unlock解锁写入finally中</p><p><img src="/2021/08/15/duo-xian-cheng/5.png"></p>]]></content>
      
      
      <categories>
          
          <category> Thread </category>
          
      </categories>
      
      
        <tags>
            
            <tag> notes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker</title>
      <link href="/2021/08/09/docker/"/>
      <url>/2021/08/09/docker/</url>
      
        <content type="html"><![CDATA[<h1 id="docker"><a href="#docker" class="headerlink" title="docker"></a>docker</h1><p>1.下载打开docker</p><p>2.docker images</p><p><img src="/2021/08/09/docker/1.png"></p><p>3.docker pull ubuntu</p><p>从Docker Hub下载ubuntu最新版镜像</p><p>4.docker run –name test  -ti –rm ubuntu  /bin/bash</p><p>ti进入终端交互式操作</p><p>进入镜像</p><p><img src="/2021/08/09/docker/2.png"></p><p>5.docker ps查看在运行的容器</p>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> notes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Sevelet2</title>
      <link href="/2021/08/09/sevelet2/"/>
      <url>/2021/08/09/sevelet2/</url>
      
        <content type="html"><![CDATA[<h1 id="Sevelet"><a href="#Sevelet" class="headerlink" title="Sevelet"></a>Sevelet</h1><h2 id="HttpServletResponse对象"><a href="#HttpServletResponse对象" class="headerlink" title="HttpServletResponse对象"></a>HttpServletResponse对象</h2><p>向客户端输出数据service()方法中接收的是Response接口的实例化对象，这个对象向客户端发送数据，响应头响应状态码的方法。</p><h3 id="输出流的两种形式："><a href="#输出流的两种形式：" class="headerlink" title="输出流的两种形式："></a>输出流的两种形式：</h3><p>getWrite()获取字符流，只能响应字符</p><p>getOutputStream()获取字节流，可以响应一切数据</p><p><img src="/2021/08/09/sevelet2/1.png" alt="1"></p><h3 id="解决响应乱码问题"><a href="#解决响应乱码问题" class="headerlink" title="解决响应乱码问题"></a>解决响应乱码问题</h3><p>乱码原因：服务端进行编码采用ISO-8859-1不支持中文</p><p>指定服务端编码格式，同时指定客户端编码格式，同时设置才好使</p><p><img src="/2021/08/09/sevelet2/2.png"></p><h3 id="重定向"><a href="#重定向" class="headerlink" title="重定向"></a>重定向</h3><p>重定向是一种服务器指导客户端的行为。重定向中有两个请求且属于客户端行为</p><p><img src="/2021/08/09/sevelet2/3.png"></p><h3 id="请求转发和重定向区别"><a href="#请求转发和重定向区别" class="headerlink" title="请求转发和重定向区别"></a>请求转发和重定向区别</h3><table><thead><tr><th align="left">请求转发(requst.getRequestDispatcher().forward())</th><th>重定向(response.sendRedirect())</th></tr></thead><tbody><tr><td align="left">一次请求，数据在request域共享</td><td>两次请求，数据不共享</td></tr><tr><td align="left">服务器端行为</td><td>客户端行为</td></tr><tr><td align="left">地址栏不发生变化</td><td>地址栏发生改变</td></tr><tr><td align="left">绝对地址定位到站点后</td><td>绝对地址可写到http://</td></tr></tbody></table><p>在当前资源下跳转可以重定向也可以请求转发，跨域做跳转只能重定向</p><p>共享request对象用请求转发，跳转地址不是当前项目下的只能重定向</p><p><img src="/2021/08/09/sevelet2/4.png"></p><h3 id="Cookie对象"><a href="#Cookie对象" class="headerlink" title="Cookie对象"></a>Cookie对象</h3><p>浏览器提供的技术，会存在客户端的目的是提高网络效益以及浏览器负载</p><h4 id="cookie的创建"><a href="#cookie的创建" class="headerlink" title="cookie的创建"></a>cookie的创建</h4><p><img src="/2021/08/09/sevelet2/5.png"></p><h4 id="cookie的获取"><a href="#cookie的获取" class="headerlink" title="cookie的获取"></a>cookie的获取</h4><p><img src="/2021/08/09/sevelet2/6.png"></p><h4 id="Cookie到期时间"><a href="#Cookie到期时间" class="headerlink" title="Cookie到期时间"></a>Cookie到期时间</h4><p><img src="/2021/08/09/sevelet2/7.png"></p><h4 id="Cookie注意点"><a href="#Cookie注意点" class="headerlink" title="Cookie注意点"></a>Cookie注意点</h4><p>1.cookie保存当前浏览器</p><p>2.cookie不支持中文，如果一定要中文需要先URLEncoder.encode()进行编码，然后通过URLDecoder.decode()解码</p><p>3.同名会覆盖</p><p>4.不同浏览器存放数量有限，也有大小限制</p><p>5.创建cookie对象都要响应response.addcookie()</p><h4 id="cookie的路径"><a href="#cookie的路径" class="headerlink" title="cookie的路径"></a>cookie的路径</h4><p><img src="/2021/08/09/sevelet2/8.png"></p><p>总结：只有访问的路径中包含cookie对象的path值时才可以获取到</p><h2 id="HttpSession对象"><a href="#HttpSession对象" class="headerlink" title="HttpSession对象"></a>HttpSession对象</h2><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>优点：传输数据可多次跳转，只要不销毁就可一直拿到</p><h3 id="创建Session"><a href="#创建Session" class="headerlink" title="创建Session"></a>创建Session</h3><p><img src="/2021/08/09/sevelet2/9.png"></p><h3 id="Session域对象"><a href="#Session域对象" class="headerlink" title="Session域对象"></a>Session域对象</h3><p><img src="/2021/08/09/sevelet2/10.png"></p><h3 id="Session销毁"><a href="#Session销毁" class="headerlink" title="Session销毁"></a>Session销毁</h3><p>1默认到期时间</p><p>2自己设定到期时间</p><p>3立即销毁  Session.invalidate()</p><p>4关闭浏览器就失效</p><p>5关闭服务器失效</p><p><img src="/2021/08/09/sevelet2/11.png"></p><h2 id="ServletContext对象"><a href="#ServletContext对象" class="headerlink" title="ServletContext对象"></a>ServletContext对象</h2><h3 id="ServletContext对象的获取"><a href="#ServletContext对象的获取" class="headerlink" title="ServletContext对象的获取"></a>ServletContext对象的获取</h3><p><img src="/2021/08/09/sevelet2/12.png" alt="1"></p><h3 id="ServletContext域对象"><a href="#ServletContext域对象" class="headerlink" title="ServletContext域对象"></a>ServletContext域对象</h3><p><img src="/2021/08/09/sevelet2/13.png" alt="1"></p><h2 id="文件的上传和下载"><a href="#文件的上传和下载" class="headerlink" title="文件的上传和下载"></a>文件的上传和下载</h2><h3 id="文件上传创建表单"><a href="#文件上传创建表单" class="headerlink" title="文件上传创建表单"></a>文件上传创建表单</h3><p><img src="/2021/08/09/sevelet2/14.png" alt="1"></p><h3 id="后台代码实现"><a href="#后台代码实现" class="headerlink" title="后台代码实现"></a>后台代码实现</h3><p>使用注解@MultipartConfig将一个Servlet标识为支持文件上传，Servlet将multipart/form-data的POST请求封装成Part，通过Part对上传文件的操作</p><p><img src="/2021/08/09/sevelet2/15.png"></p><p>编写完代码后先进入文件上传的HTML中传输文件然后找到传输的指定路径</p><h3 id="文件下载"><a href="#文件下载" class="headerlink" title="文件下载"></a>文件下载</h3><h4 id="超链接下载"><a href="#超链接下载" class="headerlink" title="超链接下载"></a>超链接下载</h4><p><img src="/2021/08/09/sevelet2/16.png"></p><p>后台下载</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@WebServlet</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"0"</span><span class="token punctuation">,</span> value <span class="token operator">=</span> <span class="token string">"/0"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> download <span class="token keyword">extends</span> <span class="token class-name">HttpServlet</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doGet</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ServletException</span><span class="token punctuation">,</span> <span class="token class-name">IOException</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"文件下载"</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>        request<span class="token punctuation">.</span><span class="token function">setCharacterEncoding</span><span class="token punctuation">(</span><span class="token string">"UTF-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//设置请求的编码格式</span>        <span class="token class-name">String</span> fileName <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getParameter</span><span class="token punctuation">(</span><span class="token string">"fileName"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//获取参数(得到要下载的文件名)</span>        <span class="token comment">//判断参数的非空 trim()去除字符串的前后空格</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>fileName <span class="token operator">==</span><span class="token keyword">null</span><span class="token operator">||</span> <span class="token string">""</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>fileName<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            response<span class="token punctuation">.</span><span class="token function">setContentType</span><span class="token punctuation">(</span><span class="token string">"text/html;charset=UTF-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            response<span class="token punctuation">.</span><span class="token function">getWriter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"请输入要下载的文件名!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            response<span class="token punctuation">.</span><span class="token function">getWriter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">//得到要下载的资料的路径</span>        <span class="token class-name">String</span> <span class="token class-name">Path</span> <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getServletContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getRealPath</span><span class="token punctuation">(</span><span class="token string">"/download/"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">File</span> file<span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token class-name">Path</span><span class="token operator">+</span>fileName<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//通过路径得到file对象</span>        <span class="token comment">//判断文件对象是否存在并且是一个标准文件</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>file<span class="token punctuation">.</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>file<span class="token punctuation">.</span><span class="token function">isFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            response<span class="token punctuation">.</span><span class="token function">setContentType</span><span class="token punctuation">(</span><span class="token string">"application/x-msdownload"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//设置响应类型</span>            response<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">"Content-Dispoition"</span><span class="token punctuation">,</span><span class="token string">"attachment;filename="</span><span class="token operator">+</span>fileName<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">FileInputStream</span> in <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileInputStream</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//得到file输入流</span>            <span class="token class-name">ServletOutputStream</span> out <span class="token operator">=</span> response<span class="token punctuation">.</span><span class="token function">getOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//得到字节输出流</span>            <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> bytes<span class="token operator">=</span><span class="token keyword">new</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token number">1024</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">//定义数组</span>            <span class="token keyword">int</span> len <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token comment">//定义长度</span>            <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>len<span class="token operator">=</span>in<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>bytes<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">!=</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            out<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>bytes<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span>len<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            out<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            in<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            response<span class="token punctuation">.</span><span class="token function">getWriter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">"文件不存在"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            response<span class="token punctuation">.</span><span class="token function">getWriter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">HTML</span> <span class="token name">PUBLIC</span> <span class="token string">"-//W3C//DTD HTML 4.01 Transitional//EN"</span>        <span class="token string">"http://www.w3.org/TR/html4/loose.dtd"</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>文件下载<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>download/14.png<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>文本文件<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>download/15.png<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>图片文件<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>download/16.png<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>压缩文件<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>download/14.png<span class="token punctuation">"</span></span> <span class="token attr-name">download</span><span class="token punctuation">></span></span>文本文件<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>download/15.png<span class="token punctuation">"</span></span> <span class="token attr-name">download</span><span class="token punctuation">></span></span>图片文件<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>download<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        文件名：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fileName<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>请输入<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">></span></span>下载<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Sevelet </category>
          
      </categories>
      
      
        <tags>
            
            <tag> notes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Redis初阶</title>
      <link href="/2021/08/09/redis-chu-jie/"/>
      <url>/2021/08/09/redis-chu-jie/</url>
      
        <content type="html"><![CDATA[<h1 id="Redis"><a href="#Redis" class="headerlink" title="Redis"></a>Redis</h1><h2 id="启动redis"><a href="#启动redis" class="headerlink" title="启动redis"></a>启动redis</h2><p>进入redis的redis.conf目录文件下执行redis-server redis.conf</p><p>/Users/gaojian/study/redis/redis-stable</p><p>开启redis成功这时就可以输入redis-cli进入操作</p><h2 id="redis-cli"><a href="#redis-cli" class="headerlink" title="redis-cli"></a>redis-cli</h2><p>Redis-cli -h(输入其他电脑的IP地址可远程连接)</p><p>Redis-cli -p(端口号，开启哪个端口号默认6379)</p><p>ping操作可以查看是否连接成功PONG</p><p>Select (number)切换数据库</p><p><img src="/2021/08/09/redis-chu-jie/1.png"></p><h3 id="string类型操作"><a href="#string类型操作" class="headerlink" title="string类型操作"></a>string类型操作</h3><p>存储set(一个)mset(多个)</p><p>获取get(一个)mget(多个)</p><p><img src="/2021/08/09/redis-chu-jie/2.png"></p><h3 id="hash类型操作"><a href="#hash类型操作" class="headerlink" title="hash类型操作"></a>hash类型操作</h3><h4 id="存取"><a href="#存取" class="headerlink" title="存取"></a>存取</h4><p><img src="/2021/08/09/redis-chu-jie/3.png"></p><pre class="line-numbers language-redis" data-language="redis"><code class="language-redis">hgetall user &quot;name&quot; &quot;lisi&quot; &quot;age&quot; &quot;18&quot; &quot;sex&quot; &quot;1&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>删除hdel user name age</p><h3 id="list类型"><a href="#list类型" class="headerlink" title="list类型"></a>list类型</h3><p>分为左添加(lpush)和右添加(rpush)</p><p><img src="/2021/08/09/redis-chu-jie/4.png"></p><p>获取值：lrange</p><p>查询几条语句：llen</p><p>删除：lrem （数量及格） （什么内容） 从左往右开始删除</p><h3 id="set类型"><a href="#set类型" class="headerlink" title="set类型"></a>set类型</h3><p>乱序 </p><p>添加数据saad letters (aaa nnn ccc jjj)</p><p>查询数据smembers letters</p><p>查询数量 scard letters</p><p>删除 srem letters ()</p><h3 id="Sorted-set-数据类型"><a href="#Sorted-set-数据类型" class="headerlink" title="Sorted set 数据类型"></a>Sorted set 数据类型</h3><p>根据分数来排序  集合类型</p><p><img src="/2021/08/09/redis-chu-jie/5.png"></p><p>查询数量 zcard score</p><p>删除 zrem score </p><p>查询数据zrange</p><h3 id="通用命令"><a href="#通用命令" class="headerlink" title="通用命令"></a>通用命令</h3><h4 id="层级关系目录形式存储数据"><a href="#层级关系目录形式存储数据" class="headerlink" title="层级关系目录形式存储数据"></a>层级关系目录形式存储数据</h4><p>get cart：user01：item01 apple</p><h4 id="失效时间"><a href="#失效时间" class="headerlink" title="失效时间"></a>失效时间</h4><p>Redis有四个不同的命令可以用于设置键的生存时间（存在多久）或过期时间（什么时候删除）</p><p>EXPIRE<key><ttl>:用于将键key的生存时间设置为ttl秒</p><p>PEXPIRE<key><ttl>:用于将键key的生存时间设置为ttl毫秒</p><p>EXPIREAT<key><timestamp>:用于将key的过期时间设置为timestamp所指定的秒数时间戳</p><p>PEXPIREAT<key><timestamp>:用于将key的过期时间设置为timestamp所指定的毫秒数时间戳</p><p>ttl获取的值为-1说明此key没有设置有效期，永不失效。当值为-2时证明过了有效期</p><p><img src="/2021/08/09/redis-chu-jie/6.png"></p><p>Expire 为没有设置时间的值设置时间</p><h4 id="删除：del"><a href="#删除：del" class="headerlink" title="删除：del"></a>删除：del</h4><h2 id="IDE创建redis配置"><a href="#IDE创建redis配置" class="headerlink" title="IDE创建redis配置"></a>IDE创建redis配置</h2><h3 id="配置pom-xml"><a href="#配置pom-xml" class="headerlink" title="配置pom.xml"></a>配置pom.xml</h3><p><img src="/2021/08/09/redis-chu-jie/7.png"></p><h4 id="配置-application-properties文件"><a href="#配置-application-properties文件" class="headerlink" title="配置.application.properties文件"></a>配置.application.properties文件</h4><p><img src="/2021/08/09/redis-chu-jie/8.png"></p><h4 id="连接jedis"><a href="#连接jedis" class="headerlink" title="连接jedis"></a>连接jedis</h4><p><img src="/2021/08/09/redis-chu-jie/9.png"></p><h4 id="jedis连接pool池"><a href="#jedis连接pool池" class="headerlink" title="jedis连接pool池"></a>jedis连接pool池</h4><p><img src="/2021/08/09/redis-chu-jie/10.png"></p><h3 id="封装jedisutil对外提供连接对象获取的方法"><a href="#封装jedisutil对外提供连接对象获取的方法" class="headerlink" title="封装jedisutil对外提供连接对象获取的方法"></a>封装jedisutil对外提供连接对象获取的方法</h3><p>先创建test.java</p><p><img src="/2021/08/09/redis-chu-jie/11.png"></p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span></span><span class="token class-name">After</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span></span><span class="token class-name">Before</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span></span><span class="token class-name">Test</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span>runner<span class="token punctuation">.</span></span><span class="token class-name">RunWith</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Autowired</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>test<span class="token punctuation">.</span>context<span class="token punctuation">.</span></span><span class="token class-name">SpringBootTest</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>test<span class="token punctuation">.</span>context<span class="token punctuation">.</span>junit4<span class="token punctuation">.</span></span><span class="token class-name">SpringRunner</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">redis<span class="token punctuation">.</span>clients<span class="token punctuation">.</span>jedis<span class="token punctuation">.</span></span><span class="token class-name">Jedis</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">redis<span class="token punctuation">.</span>clients<span class="token punctuation">.</span>jedis<span class="token punctuation">.</span></span><span class="token class-name">JedisPool</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">javax<span class="token punctuation">.</span>swing<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token annotation punctuation">@SpringBootTest</span><span class="token annotation punctuation">@RunWith</span><span class="token punctuation">(</span><span class="token class-name">SpringRunner</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestJedis</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">public</span> <span class="token class-name">JedisPool</span> jedisPool<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">Jedis</span> jedis <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>    <span class="token comment">//初始化jedis实例对象</span>    <span class="token annotation punctuation">@Before</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">initConnt</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        jedis <span class="token operator">=</span> jedisPool<span class="token punctuation">.</span><span class="token function">getResource</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>   <span class="token annotation punctuation">@After</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">closeConnt</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">null</span> <span class="token operator">!=</span> jedis<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            jedis<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在创建配置文件config配置文件</p><p><img src="/2021/08/09/redis-chu-jie/13.png"></p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Value</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Bean</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Configuration</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">redis<span class="token punctuation">.</span>clients<span class="token punctuation">.</span>jedis<span class="token punctuation">.</span></span><span class="token class-name">JedisPool</span><span class="token punctuation">;</span><span class="token annotation punctuation">@Configuration</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RedisConfig</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">"$&#123;redis.host&#125;"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> host<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">"$&#123;redis.port&#125;"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> port<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token keyword">public</span> <span class="token class-name">JedisPool</span> <span class="token function">jedisPool</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">JedisPool</span><span class="token punctuation">(</span>host<span class="token punctuation">,</span> port<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>最后需要在.java文件中加入@SpringBootApplication才是封装pool池成功</p><p><img src="/2021/08/09/redis-chu-jie/14.png"></p><h3 id="jdesi操作"><a href="#jdesi操作" class="headerlink" title="jdesi操作"></a>jdesi操作</h3><h4 id="操作string类型"><a href="#操作string类型" class="headerlink" title="操作string类型"></a>操作string类型</h4><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Test</span>   <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>       jedis<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">,</span><span class="token string">"zhang"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token class-name">String</span> name <span class="token operator">=</span> jedis<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//参数的奇数是key偶数是value</span>       jedis<span class="token punctuation">.</span><span class="token function">mset</span><span class="token punctuation">(</span><span class="token string">"address"</span><span class="token punctuation">,</span><span class="token string">"sh"</span><span class="token punctuation">,</span><span class="token string">"sex"</span><span class="token punctuation">,</span><span class="token string">"1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span> list <span class="token operator">=</span> jedis<span class="token punctuation">.</span><span class="token function">mget</span><span class="token punctuation">(</span><span class="token string">"address"</span><span class="token punctuation">,</span> <span class="token string">"sex"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       list<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//通用删除</span>       jedis<span class="token punctuation">.</span><span class="token function">del</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="操作hash类型"><a href="#操作hash类型" class="headerlink" title="操作hash类型"></a>操作hash类型</h4><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Test</span>   <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">hash</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>       jedis<span class="token punctuation">.</span><span class="token function">hset</span><span class="token punctuation">(</span><span class="token string">"user"</span><span class="token punctuation">,</span><span class="token string">"name"</span><span class="token punctuation">,</span><span class="token string">"gaojian"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token class-name">String</span> hget <span class="token operator">=</span> jedis<span class="token punctuation">.</span><span class="token function">hget</span><span class="token punctuation">(</span><span class="token string">"user"</span><span class="token punctuation">,</span> <span class="token string">"name"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>hget<span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span> <span class="token punctuation">,</span><span class="token class-name">String</span><span class="token punctuation">></span></span> map <span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"sex"</span><span class="token punctuation">,</span><span class="token string">"1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"age"</span><span class="token punctuation">,</span><span class="token string">"20"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       jedis<span class="token punctuation">.</span><span class="token function">hmset</span><span class="token punctuation">(</span><span class="token string">"user"</span><span class="token punctuation">,</span>map<span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span> hmget <span class="token operator">=</span> jedis<span class="token punctuation">.</span><span class="token function">hmget</span><span class="token punctuation">(</span><span class="token string">"user"</span><span class="token punctuation">,</span> <span class="token string">"age"</span><span class="token punctuation">,</span> <span class="token string">"sex"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       hmget<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">></span></span> user <span class="token operator">=</span> jedis<span class="token punctuation">.</span><span class="token function">hgetAll</span><span class="token punctuation">(</span><span class="token string">"user"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       user<span class="token punctuation">.</span><span class="token function">entrySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>e<span class="token operator">-></span><span class="token punctuation">&#123;</span>           <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">getKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"--->"</span><span class="token operator">+</span>e<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       jedis<span class="token punctuation">.</span><span class="token function">hdel</span><span class="token punctuation">(</span><span class="token string">"user"</span><span class="token punctuation">,</span><span class="token string">"name"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="操作list"><a href="#操作list" class="headerlink" title="操作list"></a>操作list</h4><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Test</span>  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>      jedis<span class="token punctuation">.</span><span class="token function">lpush</span><span class="token punctuation">(</span><span class="token string">"studunt"</span><span class="token punctuation">,</span><span class="token string">"zhang"</span><span class="token punctuation">,</span><span class="token string">"高"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      jedis<span class="token punctuation">.</span><span class="token function">rpush</span><span class="token punctuation">(</span><span class="token string">"student"</span><span class="token punctuation">,</span><span class="token string">"hao"</span><span class="token punctuation">,</span><span class="token string">"ni"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span> student <span class="token operator">=</span> jedis<span class="token punctuation">.</span><span class="token function">lrange</span><span class="token punctuation">(</span><span class="token string">"student"</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      student<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token class-name">Long</span> llen <span class="token operator">=</span> jedis<span class="token punctuation">.</span><span class="token function">llen</span><span class="token punctuation">(</span><span class="token string">"student"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>llen<span class="token punctuation">)</span><span class="token punctuation">;</span>      jedis<span class="token punctuation">.</span><span class="token function">lpop</span><span class="token punctuation">(</span><span class="token string">"student"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//左弹出</span>      jedis<span class="token punctuation">.</span><span class="token function">rpop</span><span class="token punctuation">(</span><span class="token string">"student"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//右弹出</span>          <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="操作set"><a href="#操作set" class="headerlink" title="操作set"></a>操作set</h4><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Test</span>   <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testSet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>     jedis<span class="token punctuation">.</span><span class="token function">sadd</span><span class="token punctuation">(</span><span class="token string">"letters"</span><span class="token punctuation">,</span><span class="token string">"11"</span><span class="token punctuation">,</span><span class="token string">"22"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span> set <span class="token operator">=</span> jedis<span class="token punctuation">.</span><span class="token function">smembers</span><span class="token punctuation">(</span><span class="token string">"letters"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       set<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token class-name">Long</span> scard <span class="token operator">=</span> jedis<span class="token punctuation">.</span><span class="token function">scard</span><span class="token punctuation">(</span><span class="token string">"letters"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//查数量</span>       <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>scard<span class="token punctuation">)</span><span class="token punctuation">;</span>       jedis<span class="token punctuation">.</span><span class="token function">srem</span><span class="token punctuation">(</span><span class="token string">"letters"</span><span class="token punctuation">,</span><span class="token string">"11"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//删除</span>   <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="操作Sorted-set"><a href="#操作Sorted-set" class="headerlink" title="操作Sorted set"></a>操作Sorted set</h4><pre class="line-numbers language-none"><code class="language-none">@Testpublic void sorted()&#123;    Map&lt;String ,Double&gt; map &#x3D; new HashMap&lt;&gt;();    map.put(&quot;zhang&quot;,7D);    map.put(&quot;li&quot;,1D);    map.put(&quot;zh&quot;,3D);    map.put(&quot;ang&quot;,5D);    map.put(&quot;san&quot;,9D);    jedis.zadd(&quot;asd&quot;,map);    Set&lt;String&gt; set &#x3D; jedis.zrange(&quot;asd&quot;, 0, 4);    set.forEach(System.out::println);    jedis.zrem(&quot;asd&quot;,&quot;san&quot;);&#x2F;&#x2F;删除<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="失效时间-1"><a href="#失效时间-1" class="headerlink" title="失效时间"></a>失效时间</h4><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testEx</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        jedis<span class="token punctuation">.</span><span class="token function">expire</span><span class="token punctuation">(</span><span class="token string">"cord"</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//给已经存在的key设置失效时间</span>        <span class="token comment">//查看失效时间</span>        jedis<span class="token punctuation">.</span><span class="token function">ttl</span><span class="token punctuation">(</span><span class="token string">"cord"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//xx,nx用法</span>        <span class="token class-name">SetParams</span> setParams <span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">SetParams</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        setParams<span class="token punctuation">.</span><span class="token function">nx</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//不存在才能成功</span>        setParams<span class="token punctuation">.</span><span class="token function">xx</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//存在才可以成功</span>        setParams<span class="token punctuation">.</span><span class="token function">ex</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        jedis<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">"code"</span><span class="token punctuation">,</span><span class="token string">"test"</span><span class="token punctuation">,</span>setParams<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="层级目录"><a href="#层级目录" class="headerlink" title="层级目录"></a>层级目录</h4><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Test</span>   <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testDir</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>       jedis<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">"card:user01:item01"</span><span class="token punctuation">,</span><span class="token string">"apple"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>jedis<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"card:user01:item01"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//层级目录</span>   <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="获取所有key-事务"><a href="#获取所有key-事务" class="headerlink" title="获取所有key+事务"></a>获取所有key+事务</h4><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Test</span>   <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testAllkey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>       <span class="token class-name">Long</span> size <span class="token operator">=</span> jedis<span class="token punctuation">.</span><span class="token function">dbSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//当前数据库key的数量</span>       <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>size<span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span> keys <span class="token operator">=</span> jedis<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span><span class="token string">"*"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//查询当前数据库的所有key</span>       keys<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java">    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testMulti</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token class-name">Transaction</span> tx <span class="token operator">=</span>jedis<span class="token punctuation">.</span><span class="token function">multi</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//开启事务</span>        tx<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">"tel"</span><span class="token punctuation">,</span><span class="token string">"10086"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        tx<span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//提交事务</span><span class="token comment">//        tx.discard();//回滚事务</span>    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="redis的持久化"><a href="#redis的持久化" class="headerlink" title="redis的持久化"></a>redis的持久化</h4><p>bgsave 优点：可以进行保存，突然崩溃数据也不会消失。缺点：需要频繁的使用</p><p>aof：优点：时时保存数据。缺点：随时间积累数据越来越大 从新启动会非常慢</p>]]></content>
      
      
      <categories>
          
          <category> redis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> notes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JDBC初阶</title>
      <link href="/2021/08/09/jdbc-chu-jie/"/>
      <url>/2021/08/09/jdbc-chu-jie/</url>
      
        <content type="html"><![CDATA[<h2 id="JDBC"><a href="#JDBC" class="headerlink" title="JDBC"></a>JDBC</h2><h3 id="1-概念-Java-Database-Connectivity-Java-数据库连接"><a href="#1-概念-Java-Database-Connectivity-Java-数据库连接" class="headerlink" title="1.概念:Java Database Connectivity    Java 数据库连接"></a>1.概念:Java Database Connectivity    Java 数据库连接</h3><p>本质:其实是官方（sun公司）定义的一套操作所有关系型数据库的规则，各个数据库的厂商去实现这套接口，提供数据库jar包。我们可以使用这套接口（JDBC）编程，真正的代码是驱动jar包中的实现类。</p><p>Eg:   person接口   worker类   person p = new worker();         p.eat();</p><h3 id="2-快速入门：我们依然用maven进行操作"><a href="#2-快速入门：我们依然用maven进行操作" class="headerlink" title="2.快速入门：我们依然用maven进行操作"></a>2.快速入门：我们依然用maven进行操作</h3><p>​    1.打开mvnrepository搜索mysql-connector-java</p><p>​    2.选择最新版本打开复制maven里的所有链接</p><p><img src="/2021/08/09/jdbc-chu-jie/1.png"></p><p>​    3.打开IDE创建maven工程项目</p><p>​    4.打开pom.xml文件在dependency中加入链接入下图</p><p><img src="/2021/08/09/jdbc-chu-jie/2.png"></p><h3 id="代码实现"><a href="#代码实现" class="headerlink" title="*代码实现"></a>*代码实现</h3><p>注册驱动–&gt;连接数据库–&gt;定义sql语句–&gt;循环输出语句</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> DB_URL <span class="token operator">=</span> <span class="token string">"jdbc:mysql://localhost:3306/bank"</span><span class="token punctuation">;</span>    <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> USER <span class="token operator">=</span> <span class="token string">"root"</span><span class="token punctuation">;</span>    <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> PASS <span class="token operator">=</span> <span class="token string">"12345678"</span><span class="token punctuation">;</span><span class="token comment">//数据库密码</span>    <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> QUERY <span class="token operator">=</span> <span class="token string">"SELECT * FROM user"</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// Open a connection</span>        <span class="token keyword">try</span> <span class="token punctuation">(</span><span class="token class-name">Connection</span> conn <span class="token operator">=</span> <span class="token class-name">DriverManager</span><span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span>DB_URL<span class="token punctuation">,</span> USER<span class="token punctuation">,</span> PASS<span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token class-name">Statement</span> stmt <span class="token operator">=</span> conn<span class="token punctuation">.</span><span class="token function">createStatement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token class-name">ResultSet</span> rs <span class="token operator">=</span> stmt<span class="token punctuation">.</span><span class="token function">executeQuery</span><span class="token punctuation">(</span>QUERY<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token comment">// Extract data from result set</span>            <span class="token keyword">while</span> <span class="token punctuation">(</span>rs<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token comment">// Retrieve by column name</span>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"ID: "</span> <span class="token operator">+</span> rs<span class="token punctuation">.</span><span class="token function">getInt</span><span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"name: "</span> <span class="token operator">+</span> rs<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">SQLException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>到此我们已经初步的实现了JDBC操作</p><h2 id="解决sql注入"><a href="#解决sql注入" class="headerlink" title="解决sql注入"></a>解决sql注入</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">jdbc</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">HashMap</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Map</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Scanner</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> JDBC <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">></span></span> userLoginInfo <span class="token operator">=</span> <span class="token function">initUI</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//创造方法管理登陆界面</span>        <span class="token keyword">boolean</span> loginSuccess <span class="token operator">=</span> <span class="token function">login</span><span class="token punctuation">(</span>userLoginInfo<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//登陆方法</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>loginSuccess <span class="token operator">?</span> <span class="token string">"登陆成功"</span> <span class="token operator">:</span> <span class="token string">"登陆失败"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//登陆反馈</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">boolean</span> <span class="token function">login</span><span class="token punctuation">(</span><span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">></span></span> userLoginInfo<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">boolean</span> loginSuccess <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token class-name">String</span> loginName <span class="token operator">=</span> userLoginInfo<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"loginName"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">String</span> loginPwd <span class="token operator">=</span> userLoginInfo<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"loginPwd"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Connection</span> coon <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token class-name">PreparedStatement</span> ps <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token class-name">ResultSet</span> rs <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">"com.mysql.cj.jdbc.Driver"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            coon <span class="token operator">=</span> <span class="token class-name">DriverManager</span><span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span><span class="token string">"jdbc:mysql://localhost:3306/bank"</span><span class="token punctuation">,</span> <span class="token string">"root"</span><span class="token punctuation">,</span> <span class="token string">"12345678"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">String</span> sql <span class="token operator">=</span> <span class="token string">"select*from login where loginName = ? and loginpwd = ?"</span><span class="token punctuation">;</span>            ps <span class="token operator">=</span> coon<span class="token punctuation">.</span><span class="token function">prepareStatement</span><span class="token punctuation">(</span>sql<span class="token punctuation">)</span><span class="token punctuation">;</span>            rs <span class="token operator">=</span> ps<span class="token punctuation">.</span><span class="token function">executeQuery</span><span class="token punctuation">(</span>sql<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>rs<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                loginSuccess <span class="token operator">=</span><span class="token boolean">true</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">ClassNotFoundException</span> <span class="token operator">|</span> <span class="token class-name">SQLException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">finally</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>rs <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>                    rs<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">SQLException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>ps <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>                    ps<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">SQLException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>coon <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>                    coon<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">SQLException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> loginSuccess<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">></span></span> <span class="token function">initUI</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Scanner</span> scanner <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"用户名："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">String</span> loginName <span class="token operator">=</span> scanner<span class="token punctuation">.</span><span class="token function">nextLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"密码："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">String</span> loginPwd <span class="token operator">=</span> scanner<span class="token punctuation">.</span><span class="token function">nextLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//创建用户名密码</span>        <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">></span></span> userLoginInfo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        userLoginInfo<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"loginName"</span><span class="token punctuation">,</span> loginName<span class="token punctuation">)</span><span class="token punctuation">;</span>        userLoginInfo<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"loginPwd"</span><span class="token punctuation">,</span> loginPwd<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//组装map</span>        <span class="token keyword">return</span> userLoginInfo<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> JDBC </category>
          
      </categories>
      
      
        <tags>
            
            <tag> notes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>redis下载与安装</title>
      <link href="/2021/08/06/redis-xia-zai-yu-an-zhuang/"/>
      <url>/2021/08/06/redis-xia-zai-yu-an-zhuang/</url>
      
        <content type="html"><![CDATA[<h1 id="Redis安装使用流程"><a href="#Redis安装使用流程" class="headerlink" title="Redis安装使用流程"></a>Redis安装使用流程</h1><p>百度搜索install redis</p><p><img src="/2021/08/06/redis-xia-zai-yu-an-zhuang/1.png"></p><p>在终端新建文件夹执行以下命令</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">wget http<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>download<span class="token punctuation">.</span>redis<span class="token punctuation">.</span>io<span class="token operator">/</span>redis<span class="token operator">-</span>stable<span class="token punctuation">.</span>tar<span class="token punctuation">.</span>gztar xvzf redis<span class="token operator">-</span>stable<span class="token punctuation">.</span>tar<span class="token punctuation">.</span>gzcd redis<span class="token operator">-</span>stablemake<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>然后cd 到bin的前一个目录复制路径配置环境变量</p><p><img src="/2021/08/06/redis-xia-zai-yu-an-zhuang/2.png"></p><p>进入~/.zshrc中将根目录复制到最后。环境变量配置完成</p><p>百度进入mvnrepository搜索jedis下载redis依赖jar包</p><p>加入新建工程pom.xml中</p><p><img src="/2021/08/06/redis-xia-zai-yu-an-zhuang/3.png"></p><p>配置环境变量： vim ~/.zshrc</p><p>配置完运行文件：source ~/.zshrc</p><p>查看文件程序在哪里：which redis-server</p><p>Lsof -i:端口号  ===查看端口运行程序</p><p>ifconfig    查看本机IP地址在en0下</p>]]></content>
      
      
      <categories>
          
          <category> redis </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Tomcat细小问题解决</title>
      <link href="/2021/08/05/tomcat-xi-xiao-wen-ti-jie-jue/"/>
      <url>/2021/08/05/tomcat-xi-xiao-wen-ti-jie-jue/</url>
      
        <content type="html"><![CDATA[<h2 id="一-解决网址路径修改问题"><a href="#一-解决网址路径修改问题" class="headerlink" title="一.解决网址路径修改问题"></a>一.解决网址路径修改问题</h2><p><img src="/2021/08/05/tomcat-xi-xiao-wen-ti-jie-jue/1.png"></p><p><img src="/2021/08/05/tomcat-xi-xiao-wen-ti-jie-jue/2.png"></p><p><img src="/2021/08/05/tomcat-xi-xiao-wen-ti-jie-jue/3.png"></p><h2 id="二-运行时无法得到网址问题"><a href="#二-运行时无法得到网址问题" class="headerlink" title="二.运行时无法得到网址问题"></a>二.运行时无法得到网址问题</h2><p><img src="/2021/08/05/tomcat-xi-xiao-wen-ti-jie-jue/%E5%B0%8F%E9%97%AE%E9%A2%98.png"></p><p>如果这两个不一致会导致无法响应</p>]]></content>
      
      
      <categories>
          
          <category> Tomcat </category>
          
      </categories>
      
      
        <tags>
            
            <tag> notes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mybatis第一次框架操作</title>
      <link href="/2021/08/04/mybatis-di-yi-ci-kuang-jia-cao-zuo/"/>
      <url>/2021/08/04/mybatis-di-yi-ci-kuang-jia-cao-zuo/</url>
      
        <content type="html"><![CDATA[<h1 id="mybatis"><a href="#mybatis" class="headerlink" title="mybatis"></a>mybatis</h1><p>第一章框架概况</p><h3 id="1-三层架构"><a href="#1-三层架构" class="headerlink" title="1.三层架构"></a>1.三层架构</h3><p>​    界面层：和用户打交道，接收用户的请求参数显示处理结果。（jsp，HTML，servlet）</p><p>​    业务逻辑层：接收了界面层传递的数据，计算逻辑，调用数据库，获取数据</p><p>​    数据访问层：就是访问数据库，执行对数据的查询，修改，删除等</p><p>三层对应的包：</p><p>​    界面层：controller包  （servlet）</p><p>​    业务逻辑层：service包（XXXService类）</p><p>​    数据访问层：dao包（XXXDao类）</p><p>三层中类的交互</p><p>​    用户使用界面层—&gt;业务逻辑层—-&gt;数据访问层(持久层)—-&gt;数据库(mysql)</p><p>三层对应的处理框架</p><p>​    界面层—–servlet—-&gt;springmvc(框架)</p><p>​    业务逻辑层—–service类—-&gt;spring(框架)</p><p>​    数据访问层—-dao类——&gt;mybatis(框架)</p><h3 id="2-框架"><a href="#2-框架" class="headerlink" title="2.框架"></a>2.框架</h3><p>​    框架是一个舞台，是一个模板。定义好了一些功能，这些功能是可用的，可以加入项目中自己的功能，这些功能可以利用框架中写好的功能。</p><p>​    框架是针对某一领域有效的。特长是某一方面不是全能的，比如mybatis做数据库强但是不能做其他的。</p><p>mybatis框架</p><p>​    1sql mapper ：sql映射</p><p>​        可以把数据库中的一行数据映射为一个java对象</p><p>​    2。Data Access Objects(DAOs):数据访问，对数据库执行增删改查</p><h3 id="3-功能"><a href="#3-功能" class="headerlink" title="3.功能"></a>3.功能</h3><p>mybatis提供了哪些功能：<br>1提供了创建Connection,Statement,ResultSet的能力，不用开发人员自己创建了</p><p>2提供了执行SQL语句的能力</p><p>3提供了循环SQL，把SQL的结果转换为Java对象，list集合的能力</p><p>4提供了关闭资源的能力</p><p>开发人员要做的是：提供SQL语句</p><p>流程：开发人员提供SQL语句—&gt;mybatis处理SQL—–&gt;得到list集合或java对象(表中的数据)</p><h2 id="第二章入门案例"><a href="#第二章入门案例" class="headerlink" title="第二章入门案例"></a>第二章入门案例</h2><h3 id="总体流程"><a href="#总体流程" class="headerlink" title="总体流程"></a>总体流程</h3><p><img src="/2021/08/04/mybatis-di-yi-ci-kuang-jia-cao-zuo/2.png" alt="2"></p><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p><strong>1.在IDE中创建一个maven工程，补全路径下的resources包</strong></p><p><img src="/2021/08/04/mybatis-di-yi-ci-kuang-jia-cao-zuo/1.png" alt="1"></p><p><strong>2.进入mvnrepository搜索mybatis选择最新版本复制链接</strong></p><p><img src="/2021/08/04/mybatis-di-yi-ci-kuang-jia-cao-zuo/3.png" alt="3"></p><p><strong>进入ide找到pom，将上面复制的加入pom中</strong></p><p><img src="/2021/08/04/mybatis-di-yi-ci-kuang-jia-cao-zuo/4.png" alt="4"></p><p><strong>接着再在mvnrepository中搜索mysql下载mysql驱动</strong></p><p><img src="/2021/08/04/mybatis-di-yi-ci-kuang-jia-cao-zuo/5.png" alt="5"></p><p><strong>在pom中加入依赖</strong></p><p><img src="/2021/08/04/mybatis-di-yi-ci-kuang-jia-cao-zuo/6.png" alt="6"></p><p><strong>接着在pom中build下加入日志插件</strong></p><p><img src="/2021/08/04/mybatis-di-yi-ci-kuang-jia-cao-zuo/7.png" alt="7"></p><p>准备工作完成</p><h2 id="案例实施"><a href="#案例实施" class="headerlink" title="案例实施"></a>案例实施</h2><p>1创建Student</p><p><img src="/2021/08/04/mybatis-di-yi-ci-kuang-jia-cao-zuo/8.png" alt="8"></p><p>alt+回车 选择图中这两个进入里面全选</p><p><img src="/2021/08/04/mybatis-di-yi-ci-kuang-jia-cao-zuo/9.png" alt="9"></p><p>接着创建个packeg包命名为dao在里面创建StudentDao.java接口和StudentDao.xml文件</p><p><img src="/2021/08/04/mybatis-di-yi-ci-kuang-jia-cao-zuo/10.png" alt="10"></p><p><img src="/2021/08/04/mybatis-di-yi-ci-kuang-jia-cao-zuo/11.png" alt="11"></p><p>StudentDao接口中这么写</p><p><img src="/2021/08/04/mybatis-di-yi-ci-kuang-jia-cao-zuo/12.png" alt="12"></p><p>在reources中创建.xml表</p><p><img src="/2021/08/04/mybatis-di-yi-ci-kuang-jia-cao-zuo/13.png" alt="13"></p><p><img src="/2021/08/04/mybatis-di-yi-ci-kuang-jia-cao-zuo/14.png" alt="14"></p><p><img src="/2021/08/04/mybatis-di-yi-ci-kuang-jia-cao-zuo/15.png" alt="15"></p><p><img src="/2021/08/04/mybatis-di-yi-ci-kuang-jia-cao-zuo/16.png" alt="16"></p><p>创建myapp.java来运行这个命令</p><p><img src="/2021/08/04/mybatis-di-yi-ci-kuang-jia-cao-zuo/17.png" alt="17"></p><h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><p><em><strong><u>Student</u></strong></em></p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">io<span class="token punctuation">.</span>gaojian<span class="token punctuation">.</span>bjpowernode<span class="token punctuation">.</span>domain</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Student</span> <span class="token punctuation">&#123;</span>    <span class="token comment">//定义属性，要求是属性名和列名一致</span>    <span class="token keyword">private</span> <span class="token class-name">Integer</span> id<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> email<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">Integer</span> age<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token class-name">Integer</span> <span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> id<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setId</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> id<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>id <span class="token operator">=</span> id<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> name<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setName</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getEmail</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> email<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setEmail</span><span class="token punctuation">(</span><span class="token class-name">String</span> email<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>email <span class="token operator">=</span> email<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token class-name">Integer</span> <span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> age<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setAge</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> age<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token string">"Student&#123;"</span> <span class="token operator">+</span>                <span class="token string">"id="</span> <span class="token operator">+</span> id <span class="token operator">+</span>                <span class="token string">", name='"</span> <span class="token operator">+</span> name <span class="token operator">+</span> <span class="token string">'\''</span> <span class="token operator">+</span>                <span class="token string">", email='"</span> <span class="token operator">+</span> email <span class="token operator">+</span> <span class="token string">'\''</span> <span class="token operator">+</span>                <span class="token string">", age="</span> <span class="token operator">+</span> age <span class="token operator">+</span>                <span class="token string">'&#125;'</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><em><strong><u>Studentdao</u></strong></em></p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token namespace">io<span class="token punctuation">.</span>gaojian<span class="token punctuation">.</span>bjpowernode<span class="token punctuation">.</span>domain<span class="token punctuation">.</span></span><span class="token class-name">Student</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">StudentDao</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Student</span><span class="token punctuation">></span></span> <span class="token function">selectStudent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><em><strong><u>StudentDao.xml</u></strong></em></p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token operator">&lt;</span><span class="token operator">?</span>xml version<span class="token operator">=</span><span class="token string">"1.0"</span> encoding<span class="token operator">=</span><span class="token string">"UTF-8"</span> <span class="token operator">?</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">!</span>DOCTYPE mapper        PUBLIC <span class="token string">"-//mybatis.org//DTD Mapper 3.0//EN"</span>        <span class="token string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span><span class="token operator">></span><span class="token operator">&lt;</span>mapper namespace<span class="token operator">=</span><span class="token string">"io.gaojian.bjpowernode.dao.StudentDao"</span><span class="token operator">></span>    <span class="token operator">&lt;</span>select id<span class="token operator">=</span><span class="token string">"selectStudent"</span> resultType<span class="token operator">=</span><span class="token string">"io.gaojian.bjpowernode.domain.Student"</span><span class="token operator">></span>        select id<span class="token punctuation">,</span>name<span class="token punctuation">,</span>email<span class="token punctuation">,</span>age from student order by id<span class="token punctuation">;</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>select<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>mapper<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong><u><em>Mybatis.xml</em></u></strong></p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token operator">&lt;</span><span class="token operator">?</span>xml version<span class="token operator">=</span><span class="token string">"1.0"</span> encoding<span class="token operator">=</span><span class="token string">"UTF-8"</span> <span class="token operator">?</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">!</span>DOCTYPE configuration        PUBLIC <span class="token string">"-//mybatis.org//DTD Config 3.0//EN"</span>        <span class="token string">"http://mybatis.org/dtd/mybatis-3-config.dtd"</span><span class="token operator">></span><span class="token generics"><span class="token punctuation">&lt;</span>configuration<span class="token punctuation">></span></span>        <span class="token generics"><span class="token punctuation">&lt;</span>settings<span class="token punctuation">></span></span>        <span class="token operator">&lt;</span>setting name<span class="token operator">=</span><span class="token string">"logImpl"</span> value<span class="token operator">=</span><span class="token string">"STDOUT_LOGGING"</span><span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>settings<span class="token operator">></span>    <span class="token operator">&lt;</span>environments <span class="token keyword">default</span><span class="token operator">=</span><span class="token string">"bank"</span><span class="token operator">></span>        <span class="token operator">&lt;</span>environment id<span class="token operator">=</span><span class="token string">"bank"</span><span class="token operator">></span>            <span class="token operator">&lt;</span>transactionManager type<span class="token operator">=</span><span class="token string">"JDBC"</span><span class="token operator">/</span><span class="token operator">></span>            <span class="token operator">&lt;</span>dataSource type<span class="token operator">=</span><span class="token string">"POOLED"</span><span class="token operator">></span>                <span class="token operator">&lt;</span>property name<span class="token operator">=</span><span class="token string">"driver"</span> value<span class="token operator">=</span><span class="token string">"com.mysql.cj.jdbc.Driver"</span><span class="token operator">/</span><span class="token operator">></span>                <span class="token operator">&lt;</span>property name<span class="token operator">=</span><span class="token string">"url"</span> value<span class="token operator">=</span><span class="token string">"jdbc:mysql://localhost:3306/bank"</span><span class="token operator">/</span><span class="token operator">></span>                <span class="token operator">&lt;</span>property name<span class="token operator">=</span><span class="token string">"username"</span> value<span class="token operator">=</span><span class="token string">"root"</span><span class="token operator">/</span><span class="token operator">></span>                <span class="token operator">&lt;</span>property name<span class="token operator">=</span><span class="token string">"password"</span> value<span class="token operator">=</span><span class="token string">"12345678"</span><span class="token operator">/</span><span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">/</span>dataSource<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>environment<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>environments<span class="token operator">></span>    <span class="token generics"><span class="token punctuation">&lt;</span>mappers<span class="token punctuation">></span></span>        <span class="token operator">&lt;</span>mapper resource<span class="token operator">=</span><span class="token string">"io/gaojian/bjpowernode/dao/StudentsceDao.xml"</span><span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>mappers<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>configuration<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong><u><em>Pom.xml</em></u></strong></p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token operator">&lt;</span><span class="token operator">?</span>xml version<span class="token operator">=</span><span class="token string">"1.0"</span> encoding<span class="token operator">=</span><span class="token string">"UTF-8"</span><span class="token operator">?</span><span class="token operator">></span><span class="token operator">&lt;</span>project xmlns<span class="token operator">=</span><span class="token string">"http://maven.apache.org/POM/4.0.0"</span> xmlns<span class="token operator">:</span>xsi<span class="token operator">=</span><span class="token string">"http://www.w3.org/2001/XMLSchema-instance"</span>         xsi<span class="token operator">:</span>schemaLocation<span class="token operator">=</span><span class="token string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span><span class="token operator">></span>    <span class="token generics"><span class="token punctuation">&lt;</span>modelVersion<span class="token punctuation">></span></span><span class="token number">4.0</span><span class="token number">.0</span><span class="token operator">&lt;</span><span class="token operator">/</span>modelVersion<span class="token operator">></span>    <span class="token generics"><span class="token punctuation">&lt;</span>groupId<span class="token punctuation">></span></span>io<span class="token punctuation">.</span>gaojian<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">></span>    <span class="token generics"><span class="token punctuation">&lt;</span>artifactId<span class="token punctuation">></span></span>mybatis<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">></span>    <span class="token generics"><span class="token punctuation">&lt;</span>version<span class="token punctuation">></span></span><span class="token number">1.0</span><span class="token operator">-</span>SNAPSHOT<span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">></span>    <span class="token generics"><span class="token punctuation">&lt;</span>name<span class="token punctuation">></span></span>mybatis<span class="token operator">&lt;</span><span class="token operator">/</span>name<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> FIXME change it <span class="token keyword">to</span> <span class="token namespace">the</span> project's website <span class="token operator">--</span><span class="token operator">></span>    <span class="token generics"><span class="token punctuation">&lt;</span>url<span class="token punctuation">></span></span>http<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>www<span class="token punctuation">.</span>example<span class="token punctuation">.</span>com<span class="token operator">&lt;</span><span class="token operator">/</span>url<span class="token operator">></span>    <span class="token generics"><span class="token punctuation">&lt;</span>properties<span class="token punctuation">></span></span>        <span class="token generics"><span class="token punctuation">&lt;</span>project<span class="token punctuation">.</span>build<span class="token punctuation">.</span>sourceEncoding<span class="token punctuation">></span></span>UTF<span class="token operator">-</span><span class="token number">8</span><span class="token operator">&lt;</span><span class="token operator">/</span>project<span class="token punctuation">.</span>build<span class="token punctuation">.</span>sourceEncoding<span class="token operator">></span>        <span class="token generics"><span class="token punctuation">&lt;</span>maven<span class="token punctuation">.</span>compiler<span class="token punctuation">.</span>source<span class="token punctuation">></span></span><span class="token number">1.8</span><span class="token operator">&lt;</span><span class="token operator">/</span>maven<span class="token punctuation">.</span>compiler<span class="token punctuation">.</span>source<span class="token operator">></span>        <span class="token generics"><span class="token punctuation">&lt;</span>maven<span class="token punctuation">.</span>compiler<span class="token punctuation">.</span>target<span class="token punctuation">></span></span><span class="token number">1.8</span><span class="token operator">&lt;</span><span class="token operator">/</span>maven<span class="token punctuation">.</span>compiler<span class="token punctuation">.</span>target<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>properties<span class="token operator">></span>    <span class="token generics"><span class="token punctuation">&lt;</span>dependencies<span class="token punctuation">></span></span>        <span class="token generics"><span class="token punctuation">&lt;</span>dependency<span class="token punctuation">></span></span>            <span class="token generics"><span class="token punctuation">&lt;</span>groupId<span class="token punctuation">></span></span>org<span class="token punctuation">.</span>mybatis<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">></span>            <span class="token generics"><span class="token punctuation">&lt;</span>artifactId<span class="token punctuation">></span></span>mybatis<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">></span>            <span class="token generics"><span class="token punctuation">&lt;</span>version<span class="token punctuation">></span></span><span class="token number">3.5</span><span class="token number">.7</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">></span>        <span class="token generics"><span class="token punctuation">&lt;</span>dependency<span class="token punctuation">></span></span>            <span class="token generics"><span class="token punctuation">&lt;</span>groupId<span class="token punctuation">></span></span>junit<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">></span>            <span class="token generics"><span class="token punctuation">&lt;</span>artifactId<span class="token punctuation">></span></span>junit<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">></span>            <span class="token generics"><span class="token punctuation">&lt;</span>version<span class="token punctuation">></span></span><span class="token number">4.11</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">></span>            <span class="token generics"><span class="token punctuation">&lt;</span>scope<span class="token punctuation">></span></span>test<span class="token operator">&lt;</span><span class="token operator">/</span>scope<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>mysql驱动<span class="token operator">--</span><span class="token operator">></span>        <span class="token generics"><span class="token punctuation">&lt;</span>dependency<span class="token punctuation">></span></span>            <span class="token generics"><span class="token punctuation">&lt;</span>groupId<span class="token punctuation">></span></span>mysql<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">></span>            <span class="token generics"><span class="token punctuation">&lt;</span>artifactId<span class="token punctuation">></span></span>mysql<span class="token operator">-</span>connector<span class="token operator">-</span>java<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">></span>            <span class="token generics"><span class="token punctuation">&lt;</span>version<span class="token punctuation">></span></span><span class="token number">8.0</span><span class="token number">.25</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>dependencies<span class="token operator">></span>    <span class="token generics"><span class="token punctuation">&lt;</span>build<span class="token punctuation">></span></span>        <span class="token generics"><span class="token punctuation">&lt;</span>resources<span class="token punctuation">></span></span>            <span class="token generics"><span class="token punctuation">&lt;</span>resource<span class="token punctuation">></span></span>                <span class="token generics"><span class="token punctuation">&lt;</span>directory<span class="token punctuation">></span></span>src<span class="token operator">/</span>main<span class="token operator">/</span>java<span class="token operator">&lt;</span><span class="token operator">/</span>directory<span class="token operator">></span>                <span class="token generics"><span class="token punctuation">&lt;</span>includes<span class="token punctuation">></span></span>                    <span class="token generics"><span class="token punctuation">&lt;</span>include<span class="token punctuation">></span></span><span class="token operator">*</span><span class="token operator">*</span><span class="token comment">/*.properties&lt;/include>                    &lt;include>**/</span><span class="token operator">*</span><span class="token punctuation">.</span>xml<span class="token operator">&lt;</span><span class="token operator">/</span>include<span class="token operator">></span>                <span class="token operator">&lt;</span><span class="token operator">/</span>includes<span class="token operator">></span>                <span class="token generics"><span class="token punctuation">&lt;</span>filtering<span class="token punctuation">></span></span><span class="token boolean">false</span><span class="token operator">&lt;</span><span class="token operator">/</span>filtering<span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">/</span>resource<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>resources<span class="token operator">></span>        <span class="token generics"><span class="token punctuation">&lt;</span>pluginManagement<span class="token punctuation">></span></span>            <span class="token generics"><span class="token punctuation">&lt;</span>plugins<span class="token punctuation">></span></span>                <span class="token generics"><span class="token punctuation">&lt;</span>plugin<span class="token punctuation">></span></span>                    <span class="token generics"><span class="token punctuation">&lt;</span>artifactId<span class="token punctuation">></span></span>maven<span class="token operator">-</span>clean<span class="token operator">-</span>plugin<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">></span>                    <span class="token generics"><span class="token punctuation">&lt;</span>version<span class="token punctuation">></span></span><span class="token number">3.1</span><span class="token number">.0</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">></span>                <span class="token operator">&lt;</span><span class="token operator">/</span>plugin<span class="token operator">></span>                <span class="token generics"><span class="token punctuation">&lt;</span>plugin<span class="token punctuation">></span></span>                    <span class="token generics"><span class="token punctuation">&lt;</span>artifactId<span class="token punctuation">></span></span>maven<span class="token operator">-</span>resources<span class="token operator">-</span>plugin<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">></span>                    <span class="token generics"><span class="token punctuation">&lt;</span>version<span class="token punctuation">></span></span><span class="token number">3.0</span><span class="token number">.2</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">></span>                <span class="token operator">&lt;</span><span class="token operator">/</span>plugin<span class="token operator">></span>                <span class="token generics"><span class="token punctuation">&lt;</span>plugin<span class="token punctuation">></span></span>                    <span class="token generics"><span class="token punctuation">&lt;</span>artifactId<span class="token punctuation">></span></span>maven<span class="token operator">-</span>compiler<span class="token operator">-</span>plugin<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">></span>                    <span class="token generics"><span class="token punctuation">&lt;</span>version<span class="token punctuation">></span></span><span class="token number">3.8</span><span class="token number">.0</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">></span>                <span class="token operator">&lt;</span><span class="token operator">/</span>plugin<span class="token operator">></span>                <span class="token generics"><span class="token punctuation">&lt;</span>plugin<span class="token punctuation">></span></span>                    <span class="token generics"><span class="token punctuation">&lt;</span>artifactId<span class="token punctuation">></span></span>maven<span class="token operator">-</span>surefire<span class="token operator">-</span>plugin<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">></span>                    <span class="token generics"><span class="token punctuation">&lt;</span>version<span class="token punctuation">></span></span><span class="token number">2.22</span><span class="token number">.1</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">></span>                <span class="token operator">&lt;</span><span class="token operator">/</span>plugin<span class="token operator">></span>                <span class="token generics"><span class="token punctuation">&lt;</span>plugin<span class="token punctuation">></span></span>                    <span class="token generics"><span class="token punctuation">&lt;</span>artifactId<span class="token punctuation">></span></span>maven<span class="token operator">-</span>jar<span class="token operator">-</span>plugin<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">></span>                    <span class="token generics"><span class="token punctuation">&lt;</span>version<span class="token punctuation">></span></span><span class="token number">3.0</span><span class="token number">.2</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">></span>                <span class="token operator">&lt;</span><span class="token operator">/</span>plugin<span class="token operator">></span>                <span class="token generics"><span class="token punctuation">&lt;</span>plugin<span class="token punctuation">></span></span>                    <span class="token generics"><span class="token punctuation">&lt;</span>artifactId<span class="token punctuation">></span></span>maven<span class="token operator">-</span>install<span class="token operator">-</span>plugin<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">></span>                    <span class="token generics"><span class="token punctuation">&lt;</span>version<span class="token punctuation">></span></span><span class="token number">2.5</span><span class="token number">.2</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">></span>                <span class="token operator">&lt;</span><span class="token operator">/</span>plugin<span class="token operator">></span>                <span class="token generics"><span class="token punctuation">&lt;</span>plugin<span class="token punctuation">></span></span>                    <span class="token generics"><span class="token punctuation">&lt;</span>artifactId<span class="token punctuation">></span></span>maven<span class="token operator">-</span>deploy<span class="token operator">-</span>plugin<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">></span>                    <span class="token generics"><span class="token punctuation">&lt;</span>version<span class="token punctuation">></span></span><span class="token number">2.8</span><span class="token number">.2</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">></span>                <span class="token operator">&lt;</span><span class="token operator">/</span>plugin<span class="token operator">></span>                <span class="token generics"><span class="token punctuation">&lt;</span>plugin<span class="token punctuation">></span></span>                    <span class="token generics"><span class="token punctuation">&lt;</span>artifactId<span class="token punctuation">></span></span>maven<span class="token operator">-</span>site<span class="token operator">-</span>plugin<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">></span>                    <span class="token generics"><span class="token punctuation">&lt;</span>version<span class="token punctuation">></span></span><span class="token number">3.7</span><span class="token number">.1</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">></span>                <span class="token operator">&lt;</span><span class="token operator">/</span>plugin<span class="token operator">></span>                <span class="token generics"><span class="token punctuation">&lt;</span>plugin<span class="token punctuation">></span></span>                    <span class="token generics"><span class="token punctuation">&lt;</span>artifactId<span class="token punctuation">></span></span>maven<span class="token operator">-</span>project<span class="token operator">-</span>info<span class="token operator">-</span>reports<span class="token operator">-</span>plugin<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">></span>                    <span class="token generics"><span class="token punctuation">&lt;</span>version<span class="token punctuation">></span></span><span class="token number">3.0</span><span class="token number">.0</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">></span>                <span class="token operator">&lt;</span><span class="token operator">/</span>plugin<span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">/</span>plugins<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>pluginManagement<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>build<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>project<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong><u><em>MyApp</em></u></strong></p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token namespace">io<span class="token punctuation">.</span>gaojian<span class="token punctuation">.</span>bjpowernode<span class="token punctuation">.</span>domain<span class="token punctuation">.</span></span><span class="token class-name">Student</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>ibatis<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">Resources</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>ibatis<span class="token punctuation">.</span>session<span class="token punctuation">.</span></span><span class="token class-name">SqlSession</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>ibatis<span class="token punctuation">.</span>session<span class="token punctuation">.</span></span><span class="token class-name">SqlSessionFactory</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>ibatis<span class="token punctuation">.</span>session<span class="token punctuation">.</span></span><span class="token class-name">SqlSessionFactoryBuilder</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">InputStream</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyApp</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">String</span> config <span class="token operator">=</span> <span class="token string">"mybatis.xml"</span><span class="token punctuation">;</span>        <span class="token class-name">InputStream</span> in <span class="token operator">=</span> <span class="token class-name">Resources</span><span class="token punctuation">.</span><span class="token function">getResourceAsStream</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">SqlSessionFactoryBuilder</span> builder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SqlSessionFactoryBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">SqlSessionFactory</span> factory <span class="token operator">=</span> builder<span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">SqlSession</span> sqlSession <span class="token operator">=</span>factory<span class="token punctuation">.</span><span class="token function">openSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">String</span> sqlId <span class="token operator">=</span> <span class="token string">"selectStudent"</span><span class="token punctuation">;</span>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Student</span><span class="token punctuation">></span></span> studentList <span class="token operator">=</span> sqlSession<span class="token punctuation">.</span><span class="token function">selectList</span><span class="token punctuation">(</span>sqlId<span class="token punctuation">)</span><span class="token punctuation">;</span>        studentList<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>student <span class="token operator">-></span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>student<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        sqlSession<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> mybatis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> notes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>web工程tomcat部署</title>
      <link href="/2021/08/03/web-gong-cheng-tomcat-bu-shu/"/>
      <url>/2021/08/03/web-gong-cheng-tomcat-bu-shu/</url>
      
        <content type="html"><![CDATA[<h1 id="tomcat部署"><a href="#tomcat部署" class="headerlink" title="tomcat部署"></a>tomcat部署</h1><h2 id="1-进入Tomcat官网根据电脑版本号下载tomcat"><a href="#1-进入Tomcat官网根据电脑版本号下载tomcat" class="headerlink" title="1.进入Tomcat官网根据电脑版本号下载tomcat"></a>1.进入Tomcat官网根据电脑版本号下载tomcat</h2><p><a href="https://tomcat.apache.org/download-80.cgi">https://tomcat.apache.org/download-80.cgi</a></p><p>下载好后终端到一个自己指定的文件夹将其移动到其中</p><p>$ mv ~/Downloads/apache-tomcat-8.5.69.tar.gz .   </p><p>在终端中进行解压</p><p>$ tar zxvf apache-tomcat-8.5.69.tar.gz</p><p>解压完拿到文件路径后面IDE中会用到</p><p><img src="/2021/08/03/web-gong-cheng-tomcat-bu-shu/image-2.png" alt="image-2"></p><h2 id="2-在IDE中创建web模板"><a href="#2-在IDE中创建web模板" class="headerlink" title="2.在IDE中创建web模板"></a>2.在IDE中创建web模板</h2><p>IDE中new 一个project</p><p><img src="/2021/08/03/web-gong-cheng-tomcat-bu-shu/image-3.png" alt="image-3"></p><p>进入之后选中maven 勾选和选项</p><p><img src="/2021/08/03/web-gong-cheng-tomcat-bu-shu/image-4.png" alt="image-4"></p><p><img src="/2021/08/03/web-gong-cheng-tomcat-bu-shu/image-5.png" alt="image-5"></p><p>选完后创建标题 之后一路下一步</p><h3 id="3运行Tomcat"><a href="#3运行Tomcat" class="headerlink" title="3运行Tomcat"></a>3运行Tomcat</h3><p>1首先进行打包不打包无法运行 mvn clean install </p><p>2进行配置，点击Edit<img src="/2021/08/03/web-gong-cheng-tomcat-bu-shu/image-6.png" alt="image-6"></p><p>点击+号 输入tom搜索 选择本地的Local</p><p><img src="/2021/08/03/web-gong-cheng-tomcat-bu-shu/image-7.png" alt="image-7"></p><p>选择完local 点击FIX 出现两个选项选择第二个</p><p><img src="/2021/08/03/web-gong-cheng-tomcat-bu-shu/image-9.png" alt="image-9"></p>]]></content>
      
      
      <categories>
          
          <category> Tomcat </category>
          
      </categories>
      
      
        <tags>
            
            <tag> notes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL学习笔记6</title>
      <link href="/2021/08/01/mysql-xue-xi-bi-ji-6/"/>
      <url>/2021/08/01/mysql-xue-xi-bi-ji-6/</url>
      
        <content type="html"><![CDATA[<h1 id="——SQL的四种连接查询"><a href="#——SQL的四种连接查询" class="headerlink" title="——SQL的四种连接查询"></a>——SQL的四种连接查询</h1><h3 id="内连接"><a href="#内连接" class="headerlink" title="内连接"></a>内连接</h3><p>inner join 或者join</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">create table person(id int,name varchar(20),cardId int);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">create table card(id int,name varchar(20));<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">insert into card values(1,&#39;饭卡&#39;);insert into card values(2,&#39;建行卡);insert into card values(3,&#39;农行卡&#39;);insert into card values(4,&#39;工商卡&#39;);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">insert into person values(1,&#39; 张三&#39;,1);insert into person values(2,&#39;李四&#39;,3);insert into person values(3,&#39;王五&#39;,6);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">select*from person inner join card on person.cardId&#x3D;card.id;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>+——+——–+——–+——+———–+<br>| id   | name   | cardId | id   | name      |<br>+——+——–+——–+——+———–+<br>|    1 | 张三   |      1 |    1 | 饭卡      |<br>|    2 | 李四   |      3 |    3 | 农行卡    |<br>+——+——–+——–+——+———–+<br>2 rows in set (0.00 sec)<br>内联查询就是两张表中的数据通过某个字段相对查询出相关记录数据</p><h3 id="外连接"><a href="#外连接" class="headerlink" title="外连接"></a>外连接</h3><p>左连接left join 或者 left outer join<br>右连接right join 或 right outer join<br>完全外连接 full join 或full outer join——————mysql暂不支持</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">select*from person left join card on person.cardId&#x3D;card.id;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>+——+——–+——–+——+———–+<br>| id   | name   | cardId | id   | name      |<br>+——+——–+——–+——+———–+<br>|    1 | 张三   |      1 |    1 | 饭卡      |<br>|    2 | 李四   |      3 |    3 | 农行卡    |<br>|    2 | 李四   |      3 |    3 | 农行卡    |<br>|    3 | 王五   |      6 | NULL | NULL      |<br>+——+——–+——–+——+———–+<br>4 rows in set (0.00 sec)<br>会把左边表里的数据取出来右边表中的数据有就显示出来没有就null。right join 咋刚刚相反</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">select*from person right join card on person.cardId&#x3D;card.id;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>+——+——–+——–+——+———–+<br>| id   | name   | cardId | id   | name      |<br>+——+——–+——–+——+———–+<br>|    1 | 张三   |      1 |    1 | 饭卡      |<br>| NULL | NULL   |   NULL |    2 | 建行卡    |<br>|    2 | 李四   |      3 |    3 | 农行卡    |<br>| NULL | NULL   |   NULL |    4 | 工商卡    |<br>|    2 | 李四   |      3 |    3 | 农行卡    |<br>+——+——–+——–+——+———–+<br>5 rows in set (0.00 sec)</p><h2 id="MySQL事务"><a href="#MySQL事务" class="headerlink" title="MySQL事务"></a>MySQL事务</h2><p>事务是一个最小的不可分割的工作单元，事务能够保证一个业务的完整性。为的就是多条语句能同时成功或者同时失败。</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">select @@autocommit;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>+————–+<br>| @@autocommit |<br>+————–+<br>|            1 |<br>+————–+<br>1 row in set (0.00 sec)<br>默认事务开启的作用是什么？<br>当我们去执行一个sql语句的时候，效果会立即体现出来，且不能回滚</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">create database bank;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>创建数据库</p><pre class="line-numbers language-my" data-language="my"><code class="language-my">create table user(id int primary key,name varchar(20),money int);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">insert into user values(1,&#39;a&#39;,1000);<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">select*from user;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>+—-+——+——-+<br>| id | name | money |<br>+—-+——+——-+<br>|  1 | a    |  1000 |<br>+—-+——+——-+<br>rollback事务回滚（撤销上一句操作）</p><h3 id="事务的四大特征"><a href="#事务的四大特征" class="headerlink" title="事务的四大特征"></a>事务的四大特征</h3><p>A  原子性：事务是最小的单位，不可分割<br>C 一致性：事务要求，同一事务中的sql语句，必须保证同时成功或者失败<br>I 隔离性：事务1和事务2之间具有隔离性<br>D  持久性：事务一旦结束，就不可回滚</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>事务开启：<br>1修改默认提交 set autocommit = 0<br>2 begin；<br>3 start transaaction;<br>事务手动提交：commit；<br>事务手动回滚：rollback；</p><h3 id="事务的隔离性"><a href="#事务的隔离性" class="headerlink" title="事务的隔离性"></a>事务的隔离性</h3><p>1,read uncommitted    读未提交的<br>2,read committed     读已经提交的<br>3,repeatable read     可以重复读<br>4,serializable         串行化</p><h3 id="如何查看数据库隔离级别"><a href="#如何查看数据库隔离级别" class="headerlink" title="如何查看数据库隔离级别"></a>如何查看数据库隔离级别</h3><p>MySQL 8.0 ：<br>select @@global.transaction_isolation;————系统级别的<br>select @@transaction_isolation;————会话级别的<br>MySQL5.x：<br>select @@global.tx_isolation;————系统级别的<br>select @@tx_isolation;————会话级别的<br>如何修改隔离级别<br>set global transaction isolation level 隔离级别;</p><h3 id="隔离性解析"><a href="#隔离性解析" class="headerlink" title="隔离性解析"></a>隔离性解析</h3><p>1—  会出现脏读  既a提交可以回滚的数据b在另一边看到了 之后a回滚<br>2—   会出现不可重复读  既a提交了不可回滚 b也提交 会出现时差性前后看到不一致<br>3—   a在一边提交 b在另一边看不见 但是如果提交相同的会出现错误提示已提交过来  这叫做幻读<br>4—   a开启事务 start transaaction;写入操作 ，b也开启事务写入操作 a不commit结束事务操作b就无法执行语句<br>多个人同时只能一人进行操作 其他人会进入排队状态（串行化）。<br>—串行化带来的问题是性能差</p>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> notes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL学习笔记5</title>
      <link href="/2021/08/01/mysql-xue-xi-bi-ji-5/"/>
      <url>/2021/08/01/mysql-xue-xi-bi-ji-5/</url>
      
        <content type="html"><![CDATA[<h1 id="MySQL查询练习"><a href="#MySQL查询练习" class="headerlink" title="MySQL查询练习"></a>MySQL查询练习</h1><h3 id="学生表Student"><a href="#学生表Student" class="headerlink" title="学生表Student"></a>学生表Student</h3><p>——学号，姓名，性别，出生年月日，所在班级。</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">create table student(  sno varchar(20) primary key,  sname varchar(20) not null,  ssex varchar(10) not null,  sbirthday datetime,  class varchar(20)  );<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="——课程表Course"><a href="#——课程表Course" class="headerlink" title="——课程表Course"></a>——课程表Course</h3><p>——课程号，课程名称，教师编号</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">create table course(  cno varchar(20) primary key,  sname varchar(20) not null,  tno varchar(20) not null,  foreign key(tno) references teacher(tno));<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="——成绩表-Score"><a href="#——成绩表-Score" class="headerlink" title="——成绩表 Score"></a>——成绩表 Score</h3><p>——学号，课程号，成绩</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">create table score(  sno varchar(20) not null,  cno varchar(20) not null,  degree decimal,  foreign key(sno) references student(sno),     foreign key(cno) references course(cno),  primary key(sno,cno)  );<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="——教师表-Teacher"><a href="#——教师表-Teacher" class="headerlink" title="——教师表 Teacher"></a>——教师表 Teacher</h3><p>——教师编号，教师姓名，教师性别，出生年月日，职称，所在部门。</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">create table teacher(  tno varchar(20) primary key,  tname varchar(20) not null,  tsex varchar(10) not null,  tbirthday datetime,  prof varchar(20) not null,  depart varchar(20) not null  );<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="——往表中添加数据"><a href="#——往表中添加数据" class="headerlink" title="——往表中添加数据"></a>——往表中添加数据</h3><p>—添加学生信息<br>—添加教师信息<br>—添加课程表<br>—添加成绩表</p><h2 id="查询练习"><a href="#查询练习" class="headerlink" title="查询练习"></a>查询练习</h2><h3 id="——查询student表的所有记录。-代表所有"><a href="#——查询student表的所有记录。-代表所有" class="headerlink" title="——查询student表的所有记录。*代表所有"></a>——查询student表的所有记录。*代表所有</h3><p>mysql&gt; select *from student;<br>+—–+————–+——+———————+——-+<br>| sno | sname        | ssex | sbirthday           | class |<br>+—–+————–+——+———————+——-+<br>| 101 | 撒旦法达     | 男   | 1977-04-23 00:00:00 | 95037 |<br>| 102 | 阿斯蒂芬     | 女   | 1977-04-23 00:00:00 | 95033 |<br>| 103 | 发电房芬     | 女   | 1977-04-23 00:00:00 | 95035 |<br>| 104 | 曾阿凡达     | 男   | 1977-04-23 00:00:00 | 95033 |<br>| 105 | 四方达狗     | 男   | 1977-04-23 00:00:00 | 95032 |<br>| 106 | 曾华         | 女   | 1977-04-23 00:00:00 | 95031 |<br>| 107 | 阿法狗       | 男   | 1977-04-23 00:00:00 | 95033 |<br>| 108 | 沙发         | 男   | 1977-04-23 00:00:00 | 95033 |<br>| 109 | 曾曾华       | 女   | 1977-04-23 00:00:00 | 95033 |<br>+—–+————–+——+———————+——-+<br>9 rows in set (0.00 sec)</p><h3 id="——查询student表中的所有记录的sname，ssex，class列-select"><a href="#——查询student表中的所有记录的sname，ssex，class列-select" class="headerlink" title="——查询student表中的所有记录的sname，ssex，class列     select"></a>——查询student表中的所有记录的sname，ssex，class列     select</h3><p>mysql&gt; select sname,ssex,class from student;<br>+————–+——+——-+<br>| sname        | ssex | class |<br>+————–+——+——-+<br>| 撒旦法达     | 男   | 95037 |<br>| 阿斯蒂芬     | 女   | 95033 |<br>| 发电房芬     | 女   | 95035 |<br>| 曾阿凡达     | 男   | 95033 |<br>| 四方达狗     | 男   | 95032 |<br>| 曾华         | 女   | 95031 |<br>| 阿法狗       | 男   | 95033 |<br>| 沙发         | 男   | 95033 |<br>| 曾曾华       | 女   | 95033 |<br>+————–+——+——-+<br>9 rows in set (0.00 sec)</p><h3 id="——查询教师所有的单位既不重复的depart列-select-distinct-排重"><a href="#——查询教师所有的单位既不重复的depart列-select-distinct-排重" class="headerlink" title="——查询教师所有的单位既不重复的depart列   select distinct 排重"></a>——查询教师所有的单位既不重复的depart列   select distinct 排重</h3><p>mysql&gt; select distinct depart from teacher;<br>+—————–+<br>| depart          |<br>+—————–+<br>| 计算机系        |<br>| 电子工程系      |<br>+—————–+<br>2 rows in set (0.00 sec)</p><h3 id="——查询score表中成绩在60-80之间的所有记录-查询区间-between。。。and"><a href="#——查询score表中成绩在60-80之间的所有记录-查询区间-between。。。and" class="headerlink" title="——查询score表中成绩在60-80之间的所有记录     查询区间 between。。。and"></a>——查询score表中成绩在60-80之间的所有记录     查询区间 between。。。and</h3><p>mysql&gt; select*from score where degree between 60 and 80;<br>+—–+——-+——–+<br>| sno | cno   | degree |<br>+—–+——-+——–+<br>| 102 | 2-801 |     77 |<br>| 105 | 2-801 |     67 |<br>+—–+——-+——–+<br>2 rows in set (0.00 sec)</p><h3 id="——查询score表中成绩为98，87的记录-in"><a href="#——查询score表中成绩为98，87的记录-in" class="headerlink" title="——查询score表中成绩为98，87的记录      in"></a>——查询score表中成绩为98，87的记录      in</h3><p>select *from score where degree in (98,87);<br>mysql&gt; select *from score where degree in (98,87);<br>+—–+——-+——–+<br>| sno | cno   | degree |<br>+—–+——-+——–+<br>| 103 | 3-802 |     87 |<br>| 104 | 2-802 |     87 |<br>| 106 | 3-801 |     98 |<br>| 108 | 3-802 |     87 |<br>+—–+——-+——–+<br>4 rows in set (0.00 sec)</p><h3 id="——查询student表中95031班的性别为女的同学记录-or"><a href="#——查询student表中95031班的性别为女的同学记录-or" class="headerlink" title="——查询student表中95031班的性别为女的同学记录   or"></a>——查询student表中95031班的性别为女的同学记录   or</h3><p>mysql&gt; select *from student where class=’95033’ or ssex = ‘女’;<br>+—–+————–+——+———————+——-+<br>| sno | sname        | ssex | sbirthday           | class |<br>+—–+————–+——+———————+——-+<br>| 102 | 阿斯蒂芬     | 女   | 1977-04-23 00:00:00 | 95033 |<br>| 103 | 发电房芬     | 女   | 1977-04-23 00:00:00 | 95035 |<br>| 104 | 曾阿凡达     | 男   | 1977-04-23 00:00:00 | 95033 |<br>| 106 | 曾华         | 女   | 1977-04-23 00:00:00 | 95031 |<br>| 107 | 阿法狗       | 男   | 1977-04-23 00:00:00 | 95033 |<br>| 108 | 沙发         | 男   | 1977-04-23 00:00:00 | 95033 |<br>| 109 | 曾曾华       | 女   | 1977-04-23 00:00:00 | 95033 |<br>+—–+————–+——+———————+——-+<br>7 rows in set (0.00 sec)</p><h3 id="——以class降序查询student表的所有记录-order-by-…desc"><a href="#——以class降序查询student表的所有记录-order-by-…desc" class="headerlink" title="——以class降序查询student表的所有记录  order by …desc"></a>——以class降序查询student表的所有记录  order by …desc</h3><p>mysql&gt; select *from student order by class desc;<br>+—–+————–+——+———————+——-+<br>| sno | sname        | ssex | sbirthday           | class |<br>+—–+————–+——+———————+——-+<br>| 101 | 撒旦法达     | 男   | 1977-04-23 00:00:00 | 95037 |<br>| 103 | 发电房芬     | 女   | 1977-04-23 00:00:00 | 95035 |<br>| 102 | 阿斯蒂芬     | 女   | 1977-04-23 00:00:00 | 95033 |<br>| 104 | 曾阿凡达     | 男   | 1977-04-23 00:00:00 | 95033 |<br>| 107 | 阿法狗       | 男   | 1977-04-23 00:00:00 | 95033 |<br>| 108 | 沙发         | 男   | 1977-04-23 00:00:00 | 95033 |<br>| 109 | 曾曾华       | 女   | 1977-04-23 00:00:00 | 95033 |<br>| 105 | 四方达狗     | 男   | 1977-04-23 00:00:00 | 95032 |<br>| 106 | 曾华         | 女   | 1977-04-23 00:00:00 | 95031 |<br>+—–+————–+——+———————+——-+<br>9 rows in set (0.00 sec)</p><h3 id="——查询以cno升序，degree降序查询score表的所有记录"><a href="#——查询以cno升序，degree降序查询score表的所有记录" class="headerlink" title="——查询以cno升序，degree降序查询score表的所有记录"></a>——查询以cno升序，degree降序查询score表的所有记录</h3><p>mysql&gt; select *from score order by cno asc,degree desc;<br>+—–+——-+——–+<br>| sno | cno   | degree |<br>+—–+——-+——–+<br>| 102 | 2-801 |     77 |<br>| 105 | 2-801 |     67 |<br>| 104 | 2-802 |     87 |<br>| 106 | 3-801 |     98 |<br>| 101 | 3-801 |     89 |<br>| 103 | 3-802 |     87 |<br>| 108 | 3-802 |     87 |<br>+—–+——-+——–+<br>7 rows in set (0.00 sec)</p><h3 id="——查询95033班的学生人数-count-统计"><a href="#——查询95033班的学生人数-count-统计" class="headerlink" title="——查询95033班的学生人数   count (统计)"></a>——查询95033班的学生人数   count (统计)</h3><p>mysql&gt; select count(<em>) from student where class = ‘95031’;<br>+———-+<br>| count(</em>) |<br>+———-+<br>|        1 |<br>+———-+<br>1 row in set (0.00 sec)</p><h3 id="——查询score表中的最高分的学生的学号和课程号（子查询或者排序）"><a href="#——查询score表中的最高分的学生的学号和课程号（子查询或者排序）" class="headerlink" title="——查询score表中的最高分的学生的学号和课程号（子查询或者排序）"></a>——查询score表中的最高分的学生的学号和课程号（子查询或者排序）</h3><p>mysql&gt; select sno,cno from score where degree =(select max(degree) from score);<br>+—–+——-+<br>| sno | cno   |<br>+—–+——-+<br>| 106 | 3-801 |<br>+—–+——-+<br>1 row in set (0.01 sec)</p><h3 id="——查询每门课的平均成绩-——avg-平均-group-by-分组"><a href="#——查询每门课的平均成绩-——avg-平均-group-by-分组" class="headerlink" title="——查询每门课的平均成绩  ——avg()平均  group by 分组"></a>——查询每门课的平均成绩  ——avg()平均  group by 分组</h3><p>mysql&gt; Select  cno,avg(degree) from score group by cno;<br>+——-+————-+<br>| cno   | avg(degree) |<br>+——-+————-+<br>| 2-801 |     72.0000 |<br>| 2-802 |     87.0000 |<br>| 3-801 |     93.5000 |<br>| 3-802 |     87.0000 |<br>+——-+————-+<br>4 rows in set (0.00 sec)</p><h3 id="——查询所有学生的sno，sname和degree列"><a href="#——查询所有学生的sno，sname和degree列" class="headerlink" title="——查询所有学生的sno，sname和degree列"></a>——查询所有学生的sno，sname和degree列</h3><p>mysql&gt; select sno,sname,degree from course,score where course.cno = score.cno;<br>+—–+—————–+——–+<br>| sno | sname           | degree |<br>+—–+—————–+——–+<br>| 102 | 数字电路        |     77 |<br>| 105 | 数字电路        |     67 |<br>| 104 | 高等数学        |     87 |<br>| 101 | 操作系统        |     89 |<br>| 106 | 操作系统        |     98 |<br>| 103 | 计算机导论      |     87 |<br>| 108 | 计算机导论      |     87 |<br>+—–+—————–+——–+<br>7 rows in set (0.01 sec)</p><h3 id="——查询“95033”班级学生每门课的平均分"><a href="#——查询“95033”班级学生每门课的平均分" class="headerlink" title="——查询“95033”班级学生每门课的平均分"></a>——查询“95033”班级学生每门课的平均分</h3><p>1.先把班级学生拿出来<br>2.在把1当条件到分数表里筛选<br>3.再以cno字段进行分组查询平均成绩<br>mysql&gt; select cno,avg(degree) from score where sno in (select sno from student where class = ‘95033’) group by cno;<br>+——-+————-+<br>| cno   | avg(degree) |<br>+——-+————-+<br>| 2-801 |     77.0000 |<br>| 2-802 |     87.0000 |<br>| 3-802 |     87.0000 |<br>+——-+————-+<br>3 rows in set (0.00 sec);</p><h3 id="——查询和学号为105，108的同学同年出生的所有学生的sno，sname，sbirthday。"><a href="#——查询和学号为105，108的同学同年出生的所有学生的sno，sname，sbirthday。" class="headerlink" title="——查询和学号为105，108的同学同年出生的所有学生的sno，sname，sbirthday。"></a>——查询和学号为105，108的同学同年出生的所有学生的sno，sname，sbirthday。</h3><p>mysql&gt; select *from student where year(sbirthday) in (select year(sbirthday)from student where sno in(105,108));<br>+—–+————–+——+———————+——-+<br>| sno | sname        | ssex | sbirthday           | class |<br>+—–+————–+——+———————+——-+<br>| 101 | 撒旦法达     | 男   | 1977-04-23 00:00:00 | 95037 |<br>| 102 | 阿斯蒂芬     | 女   | 1977-04-23 00:00:00 | 95033 |<br>| 103 | 发电房芬     | 女   | 1977-04-23 00:00:00 | 95035 |<br>| 104 | 曾阿凡达     | 男   | 1977-04-23 00:00:00 | 95033 |<br>| 105 | 四方达狗     | 男   | 1977-04-23 00:00:00 | 95032 |<br>| 106 | 曾华         | 女   | 1977-04-23 00:00:00 | 95031 |<br>| 107 | 阿法狗       | 男   | 1977-04-23 00:00:00 | 95033 |<br>| 108 | 沙发         | 男   | 1977-04-23 00:00:00 | 95033 |<br>| 109 | 曾曾华       | 女   | 1977-04-23 00:00:00 | 95033 |<br>+—–+————–+——+———————+——-+<br>9 rows in set (0.00 sec)</p><h3 id="——查询四狗老师教课的学生的成绩"><a href="#——查询四狗老师教课的学生的成绩" class="headerlink" title="——查询四狗老师教课的学生的成绩"></a>——查询四狗老师教课的学生的成绩</h3><p>mysql&gt; select *from score where cno=(select cno from course where tno = (select tno from teacher where tname = ‘四狗’));<br>+—–+——-+——–+<br>| sno | cno   | degree |<br>+—–+——-+——–+<br>| 102 | 2-801 |     77 |<br>| 105 | 2-801 |     67 |<br>+—–+——-+——–+<br>2 rows in set (0.00 sec)</p><h3 id="——查询计算机系与电子工程系不同职称的教师的tname和prof"><a href="#——查询计算机系与电子工程系不同职称的教师的tname和prof" class="headerlink" title="——查询计算机系与电子工程系不同职称的教师的tname和prof"></a>——查询计算机系与电子工程系不同职称的教师的tname和prof</h3><p>————union 求并集  合并到一起<br>select prof from teacher where depart =’电子工程系’；<br>select *from teacher where depart = ‘计算机系’ and prof not in (select  prof from teacher where depart =’电子工程系’)<br>union<br>select *from teacher where depart = ‘电子工程系’ and prof not in (select  prof from teacher where depart =’计算机系’);<br>+—-+————–+——+———————+———–+—————–+<br>| tno | tname        | tsex | tbirthday           | prof      | depart          |<br>+—–+————–+——+———————+———–+—————–+<br>| 801 | 法达         | 男   | 1977-04-30 00:00:00 | 讲师      | 计算机系        |<br>| 803 | 房芬         | 女   | 1977-04-13 00:00:00 | 教授      | 计算机系        |<br>| 805 | 四狗         | 男   | 1977-04-27 00:00:00 | 副教授    | 电子工程系      |<br>| 806 | 曾沙发华     | 女   | 1977-05-23 00:00:00 | 助教      | 电子工程系      |<br>+—–+————–+——+———————+———–+—————–+<br>4 rows in set (0.01 sec）</p><h3 id="——any任意（至少）-all且（所有）-as-别名（重命名打印）-union合并-having-count-gt-1-数量大于1-year-now-现在的年份-order-by-顺序查询"><a href="#——any任意（至少）-all且（所有）-as-别名（重命名打印）-union合并-having-count-gt-1-数量大于1-year-now-现在的年份-order-by-顺序查询" class="headerlink" title="——any任意（至少） all且（所有） as 别名（重命名打印） union合并 having count(*)&gt;1 数量大于1   year(now())现在的年份   order by 顺序查询"></a>——any任意（至少） all且（所有） as 别名（重命名打印） union合并 having count(*)&gt;1 数量大于1   year(now())现在的年份   order by 顺序查询</h3>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> notes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>maven创建与使用</title>
      <link href="/2021/07/29/maven-chuang-jian-yu-shi-yong/"/>
      <url>/2021/07/29/maven-chuang-jian-yu-shi-yong/</url>
      
        <content type="html"><![CDATA[<h2 id="1下载maven"><a href="#1下载maven" class="headerlink" title="1下载maven"></a>1下载maven</h2><p>输入以下网址进入maven官网 </p><pre class="line-numbers language-none"><code class="language-none">maven.apache.org<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2021/07/29/maven-chuang-jian-yu-shi-yong/2.png"><br>点击进入Download下滑找到第一个是Linux第二个是Windows版本<br><img src="/2021/07/29/maven-chuang-jian-yu-shi-yong/3.png"><br>下载完解压即可</p><h2 id="2配置path和环境路径"><a href="#2配置path和环境路径" class="headerlink" title="2配置path和环境路径"></a>2配置path和环境路径</h2><p>在终端输入mvn确定mvn是否配置了环境变量<br><img src="/2021/07/29/maven-chuang-jian-yu-shi-yong/1.png"><br>这是已经配置完成可以直接使用mvn。<br>如果没有出现该界面则到下载解压文件所在位置将路径加入到path中即可<br>输入该命令下载maven运行环境.m2路径</p><pre class="line-numbers language-none"><code class="language-none">mvn help:system<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2021/07/29/maven-chuang-jian-yu-shi-yong/4.png"><br>运行完毕   将下载解压下的文件settings.xml移动到.m2中</p><h2 id="3创建maven-IDE运行模板"><a href="#3创建maven-IDE运行模板" class="headerlink" title="3创建maven IDE运行模板"></a>3创建maven IDE运行模板</h2><p>创建一个新文件夹在当前文件夹中输入</p><pre class="line-numbers language-none"><code class="language-none">mvn archetype:generate -DgroupId&#x3D;io.gaojian -DartifactId&#x3D;demo -DarchetypeArtifactId&#x3D;maven-archetype-quickstart -DarchetypeVersion&#x3D;1.4 -DinteractiveMode&#x3D;false<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>输入此配置为不需要交互一切按默认设置算<br><img src="/2021/07/29/maven-chuang-jian-yu-shi-yong/5.png"></p><pre class="line-numbers language-none"><code class="language-none">mvn archetype:generate -DarchetypeArtifactId&#x3D;maven-archetype-quickstart -DarchetypeVersion&#x3D;1.4  <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>此配置为交互模式，模板名称，项目名称，版本号可以自己设置<br><img src="/2021/07/29/maven-chuang-jian-yu-shi-yong/6.png"><br>模板名称要倒写，创建完毕</p><h2 id="4-IDE运行"><a href="#4-IDE运行" class="headerlink" title="4.IDE运行"></a>4.IDE运行</h2><p>进入IDE 找到open 打开<br><img src="/2021/07/29/maven-chuang-jian-yu-shi-yong/7.png"><br>找到创建模板的文件夹位置点击open<br><img src="/2021/07/29/maven-chuang-jian-yu-shi-yong/8.png"><br>即操作完成</p><h2 id="5-maven操作"><a href="#5-maven操作" class="headerlink" title="5.maven操作"></a>5.maven操作</h2><p>可以在软件最右边找到maven按钮 会出现快捷操作按钮<br><img src="/2021/07/29/maven-chuang-jian-yu-shi-yong/9.png"><br>双击即可运行<br>也可以通过terminal来输入mvn语句执行<br><img src="/2021/07/29/maven-chuang-jian-yu-shi-yong/10.png"></p><h2 id="6-打包与运行"><a href="#6-打包与运行" class="headerlink" title="6.打包与运行"></a>6.打包与运行</h2><p>当运用maven写完一个程序或者项目时需要将成品发送给需要的人 这时就需要打包<br><img src="/2021/07/29/maven-chuang-jian-yu-shi-yong/11.png"><br>maven中install提供了打包的程序双击执行这时文件夹下会出现target文件夹 这就是已经打包完毕可以传输的了<br><img src="/2021/07/29/maven-chuang-jian-yu-shi-yong/12.png"><br>在当前文件下可用java -cp+项目名-版本号.jar +模板名.app来执行<br><img src="/2021/07/29/maven-chuang-jian-yu-shi-yong/13.png"></p>]]></content>
      
      
      <categories>
          
          <category> maven </category>
          
      </categories>
      
      
        <tags>
            
            <tag> notes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL学习笔记4</title>
      <link href="/2021/07/27/mysql-xue-xi-bi-ji-4/"/>
      <url>/2021/07/27/mysql-xue-xi-bi-ji-4/</url>
      
        <content type="html"><![CDATA[<h1 id="数据库的三大范式"><a href="#数据库的三大范式" class="headerlink" title="数据库的三大范式"></a>数据库的三大范式</h1><h2 id="第一范式-1NF"><a href="#第一范式-1NF" class="headerlink" title="第一范式 1NF"></a>第一范式 1NF</h2><pre class="line-numbers language-none"><code class="language-none">select*from student2;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>+——+———–+———————————————–+<br>| id   | name       | address                                                |<br>+——+———–+———————————————–+<br>|    2 | 张胜男     | 中国黑龙江省哈尔滨市向阳区50号      |<br>|    3 | 张胜男     | 中国黑龙江省哈尔滨市武侯区90号      |<br>|    1 | 吴刚        | 中国黑龙江省哈尔滨市高新区100号    |<br>+——+———–+———————————————–+<br>3 rows in set (0.00 sec)</p><p>这种还可以拆分的不属于第一范式</p><p>+—-+———–+——–+————–+————–+—————-+<br>| id | name      | cuntry | privence     | city              | details              |<br>+—-+———–+——–+————–+————–+—————-+<br>|  1 | 张三        | 中国   | 黑龙江省     | 哈尔滨市     | 向阳区50号     |<br>|  2 | 旺盛达    | 中国   | 黑龙江省     | 哈尔滨市     | 向阳区50号     |<br>|  3 | 张胜男    | 中国   | 黑龙江省     | 哈尔滨市     | 向阳区40号     |<br>+—-+———–+——–+————–+————–+—————-+<br>3 rows in set (0.00 sec)</p><p>达到不可拆分时为第一范式</p><h2 id="第二范式2NF"><a href="#第二范式2NF" class="headerlink" title="第二范式2NF"></a>第二范式2NF</h2><p>必须满足第一范式前提下，2NF要求除主键外的每一列都必须完全依赖于主键。</p><p>如果出现不完全依赖只可能发生在联合主键的情况下。</p><h3 id="示例——订单表"><a href="#示例——订单表" class="headerlink" title="示例——订单表"></a>示例——订单表</h3><pre class="line-numbers language-none"><code class="language-none">create table myorder(product_id int,customer_id int,product_name varchar(20),customer_name varchar(20),primary key(product_id,customer_id));<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>mysql&gt; desc myorder;<br>+—————+————-+——+—–+———+——-+<br>| Field                   | Type            | Null  | Key   | Default | Extra |<br>+—————+————-+——+—–+———+——-+<br>| product_id          | int                | NO   | PRI  | NULL    |          |<br>| customer_id       | int                | NO    | PRI  | NULL    |          |<br>| product_name    | varchar(20) | YES   |         | NULL    |           |<br>| customer_name | varchar(20) | YES   |         | NULL    |           |<br>+—————+————-+——+—–+———+——-+<br>4 rows in set (0.00 sec)<br>不满足第二范式，需要进行拆表</p><pre class="line-numbers language-none"><code class="language-none">create table myorder1(Order_id int primary key,product_id int,Customer_id int );<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>mysql&gt; desc myorder1;<br>+————-+——+——+—–+———+——-+<br>| Field              | Type | Null | Key | Default | Extra |<br>+————-+——+——+—–+———+——-+<br>| Order_id        | int  | NO    | PRI | NULL    |       |<br>| product_id     | int  | YES  |        | NULL    |       |<br>| Customer_id | int  | YES   |        | NULL    |       |<br>+————-+——+——+—–+———+——-+<br>3 rows in set (0.00 sec</p><pre class="line-numbers language-none"><code class="language-none">create table product(id int primary key,Name varchar(20));<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>mysql&gt; desc product;<br>+——-+————-+——+—–+———+——-+<br>| Field    | Type            | Null | Key | Default | Extra |<br>+——-+————-+——+—–+———+——-+<br>| id         | int               | NO   | PRI | NULL    |       |<br>| Name  | varchar(20) | YES  |        | NULL    |       |<br>+——-+————-+——+—–+———+——-+<br>2 rows in set (0.00 sec)</p><pre class="line-numbers language-none"><code class="language-none">create table customer(Id int primary key,Name varchar(20));<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>mysql&gt; desc customer;;<br>+——-+————-+——+—–+———+——-+<br>| Field   | Type            | Null    | Key | Default | Extra |<br>+——-+————-+——+—–+———+——-+<br>| Id        | int               | NO     | PRI | NULL    |       |<br>| Name  | varchar(20) | YES   |        | NULL    |       |<br>+——-+————-+——+—–+———+——-+<br>2 rows in set (0.01 sec)<br>——分成三个表后，满足第二范式的设计</p><h2 id="第三范式3NF"><a href="#第三范式3NF" class="headerlink" title="第三范式3NF"></a>第三范式3NF</h2><p>——必须先满足第二范式，除主键外不能有传递依赖关系。</p><h3 id="什么是传递依赖"><a href="#什么是传递依赖" class="headerlink" title="什么是传递依赖"></a>什么是传递依赖</h3><p>通俗的讲就是 a—&gt;b,b—&gt;c,a可以借着b推出c 这就是传递依赖</p>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> notes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL学习笔记3</title>
      <link href="/2021/07/26/mysql-xue-xi-bi-ji-3/"/>
      <url>/2021/07/26/mysql-xue-xi-bi-ji-3/</url>
      
        <content type="html"><![CDATA[<h1 id="MySQL建表约束-sql"><a href="#MySQL建表约束-sql" class="headerlink" title="MySQL建表约束.sql"></a>MySQL建表约束.sql</h1><h2 id="1-主键约束-primary-key——主键不能重复不能为空"><a href="#1-主键约束-primary-key——主键不能重复不能为空" class="headerlink" title="1.主键约束 primary key——主键不能重复不能为空"></a>1.主键约束 primary key——主键不能重复不能为空</h2><h3 id="添加主键"><a href="#添加主键" class="headerlink" title="添加主键"></a>添加主键</h3><p>alter table table-name add primary key(id,name);</p><h3 id="删除主键"><a href="#删除主键" class="headerlink" title="删除主键"></a>删除主键</h3><p>alter table table-name drop primary key;</p><h3 id="设置双主键-联合主键-：只要加起来不重复就可以"><a href="#设置双主键-联合主键-：只要加起来不重复就可以" class="headerlink" title="设置双主键(联合主键)：只要加起来不重复就可以"></a>设置双主键(联合主键)：只要加起来不重复就可以</h3><p>create table user(id int,name varchar(20),password varchar(20),primary key(id,name));</p><h2 id="2-自增约束-auto-increment"><a href="#2-自增约束-auto-increment" class="headerlink" title="2.自增约束 :auto-increment"></a>2.自增约束 :auto-increment</h2><p>起到管控id的作用，用在主键后面</p><h2 id="3-外键约束-foreign-key-class-id-references-classes-id"><a href="#3-外键约束-foreign-key-class-id-references-classes-id" class="headerlink" title="3.外键约束   foreign key(class-id) references classes(id)"></a>3.外键约束   foreign key(class-id) references classes(id)</h2><h3 id="涉及到两个表：主表，副表。"><a href="#涉及到两个表：主表，副表。" class="headerlink" title="涉及到两个表：主表，副表。"></a>涉及到两个表：主表，副表。</h3><pre class="line-numbers language-none"><code class="language-none">create table students(id int primary key,name varchar(20),class_id int,foreign key(class_id) references classes(id));<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Query OK, 0 rows affected (0.01 sec)</p><p>主表中的记录被副表引用是不可以被删除的。</p><p>主表中没有的数据值，在副表中不可以使用。</p><h2 id="4-唯一约束-alter-table-use1-add-unique-name"><a href="#4-唯一约束-alter-table-use1-add-unique-name" class="headerlink" title="4.唯一约束 :alter table use1 add unique(name);"></a>4.唯一约束 :alter table use1 add unique(name);</h2><p>——约束修饰的字段的值不可以重复</p><pre class="line-numbers language-none"><code class="language-none">alter table use1 add unique(name);<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>Query OK, 0 rows affected (0.00 sec)<br>Records: 0  Duplicates: 0  Warnings: 0</p><pre class="line-numbers language-none"><code class="language-none">desc use1;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>+——-+————-+——+—–+———+——-+<br>| Field    | Type            | Null | Key | Default | Extra |<br>+——-+————-+——+—–+———+——-+<br>| id         | int               | NO   | PRI | NULL    |           |<br>| name  | varchar(20) | YES  | UNI | NULL    |           |<br>+——-+————-+——+—–+———+——-+<br>2 rows in set (0.00 sec)</p><h3 id="如何删除唯一约束"><a href="#如何删除唯一约束" class="headerlink" title="如何删除唯一约束"></a>如何删除唯一约束</h3><p>Alter table table-name drop index &lt;加了约束的字段&gt;</p><h2 id="5-非空约束-not-null"><a href="#5-非空约束-not-null" class="headerlink" title="5.非空约束 not null"></a>5.非空约束 not null</h2><h2 id="6-默认约束"><a href="#6-默认约束" class="headerlink" title="6.默认约束"></a>6.默认约束</h2><p>当我们没有插入字段值得时候，如果没有传值，就使用默认值<br>使用在每个字段的类型后面   ——default</p>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> notes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL学习笔记2</title>
      <link href="/2021/07/26/mysql-xue-xi-bi-ji-2/"/>
      <url>/2021/07/26/mysql-xue-xi-bi-ji-2/</url>
      
        <content type="html"><![CDATA[<h2 id="mysql常用数据类型有哪些"><a href="#mysql常用数据类型有哪些" class="headerlink" title="mysql常用数据类型有哪些"></a>mysql常用数据类型有哪些</h2><h3 id="MySQL支持多种类型，大致可以分为三类："><a href="#MySQL支持多种类型，大致可以分为三类：" class="headerlink" title="MySQL支持多种类型，大致可以分为三类："></a>MySQL支持多种类型，大致可以分为三类：</h3><h4 id="（一）数值"><a href="#（一）数值" class="headerlink" title="（一）数值"></a>（一）数值</h4><p>类型                              字节                                   大小                                                  理解<br>TINYINT            1 byte                  (-128，127)            (0，255)                                      小整数值<br>SMALLINT          2 bytes    (-32 768，32 767)            (0，65 535)                               大整数值<br>MEDIUMINT       3 bytes    (-8 388 608，8 388 607)      (0，16 777 215)                  大整数值<br>INT或INTEGER   4 bytes    (-2 147 483 648，2 147 483 647) (0，4 294 967 295)    大整数值<br>BIGINT             8 bytes    (-9,223,372,036,854,775,808，9 223 372 036 854 775 807) 极大整数值<br>FLOAT              4 bytes    (-3.4E+38，-1.1E-38)，0，(1.17E-38，3.4E+38)      单精度 浮点数值<br>DOUBLE             8 bytes    (-1.7E+308,-2.2E-308),0,(2.2E-308，1.7E+308)           双精度 浮点数值</p><h4 id="（二）日期"><a href="#（二）日期" class="headerlink" title="（二）日期"></a>（二）日期</h4><p>日期/时间：date，time，year，datetime，timestam<br>类型            字节               格式                                                      理解定义<br>DATE            3  1000-01-01/9999-12-31     YYYY-MM-DD            日期值<br>TIME            3  ‘-838:59:59’/‘838:59:59’  HH:MM:SS             时间值或持续时间<br>YEAR           1   1901/2155                YYYY                                    年份值<br>DATETIME   8   1000-01-01 00:00:00\9999-12-31 23:59:59   YYYY-MM-DD HH:MM:SS 混合日期</p><h4 id="（三）字符串"><a href="#（三）字符串" class="headerlink" title="（三）字符串"></a>（三）字符串</h4><p>字符串：<br>  类型                           字节                                                       定义<br>  CHAR                  0-255 bytes                                             定长字符串<br>  VARCHAR               0-65535 bytes                                    变长字符串<br>  TINYBLOB              0-255 bytes                              不超过 255 个字符的二进制字符串<br>  TINYTEXT              0-255 bytes                                        短文本字符串<br>  BLOB                  0-65 535 bytes                            二进制形式的长文本数据<br>  TEXT                  0-65 535 bytes                                   长文本数据<br>  MEDIUMBLOB    0-16 777 215 bytes                  二进制形式的中等长度文本数据<br>  MEDIUMTEXT    0-16 777 215 bytes                            中等长度文本数据<br>  LONGBLOB      0-4 294 967 295 bytes                 二进制形式的极大文本数据<br>  LONGTEXT        0-4 294 967 295 bytes                         极大文本数据            </p><h3 id="增加数据"><a href="#增加数据" class="headerlink" title="增加数据"></a>增加数据</h3><p>Insert into pet values(‘Fluffy’,’Harold’,’n’,’1999-04-23’,null)；<br>Insert into pet values(‘Fluf’,’Qing’,’f’,’1999-04-27’,null)；</p><h3 id="删除数据"><a href="#删除数据" class="headerlink" title="删除数据"></a>删除数据</h3><p>mysql&gt; delete from pet where name = ‘Fluffy’;<br>Query OK, 1 row affected (0.01 sec)</p><h3 id="修改数据"><a href="#修改数据" class="headerlink" title="修改数据"></a>修改数据</h3><p>mysql&gt; update pet set name = ‘旺财’ where owner = ‘gao’;<br>Query OK, 2 rows affected (0.00 sec)<br>Rows matched: 2  Changed: 2  Warnings: 0</p><p>mysql&gt; select*from pet;<br>+———+——-+——+————+——-+<br>| name    | owner    | sex  | birth            | death |<br>+———+——-+——+————+——-+<br>| 旺财      | gao       | m     | 1999-03-02 | NULL  |<br>| Fluf       | Qing      | m     | 1999-04-27 | NULL  |<br>| Fffy       | Wang     | f      | 1993-04-22 | NULL  |<br>| Fdsdffy | Jian       | f       | 1996-09-02 | NULL  |<br>| 旺财      | Gao       | m    | 1945-10-02 | NULL  |<br>+———+——-+——+————+——-+<br>5 rows in set (0.00 sec)</p><h3 id="总结一些：数据记录常见操作"><a href="#总结一些：数据记录常见操作" class="headerlink" title="总结一些：数据记录常见操作"></a>总结一些：数据记录常见操作</h3><p>——增加： insert into &lt;表name&gt;  values（）；<br>——删除：delete from &lt;表name&gt; where ……<br>——修改：update &lt;表name&gt; set<br>——查找：select*from &lt;表name&gt;</p>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> notes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>“MySQL如何在终端操作1”</title>
      <link href="/2021/07/25/mysql-ru-he-zai-zhong-duan-cao-zuo-1/"/>
      <url>/2021/07/25/mysql-ru-he-zai-zhong-duan-cao-zuo-1/</url>
      
        <content type="html"><![CDATA[<h1 id="mysql关系型数据库"><a href="#mysql关系型数据库" class="headerlink" title="mysql关系型数据库"></a>mysql关系型数据库</h1><h2 id="如何使用终端操作数据库"><a href="#如何使用终端操作数据库" class="headerlink" title="如何使用终端操作数据库?"></a>如何使用终端操作数据库?</h2><h3 id="1-如何登陆数据库"><a href="#1-如何登陆数据库" class="headerlink" title="1.如何登陆数据库"></a>1.如何登陆数据库</h3><p>首先进入终端，p后面为登陆MySQL的密码 首次进入会提示设置，如果没有则不需用输入。<br>gaojian at gaojian in ~<br>$ mysql -uroot -p12345678</p><h3 id="2-如何查询数据库服务器中所有的数据库？-show-databases"><a href="#2-如何查询数据库服务器中所有的数据库？-show-databases" class="headerlink" title="2.如何查询数据库服务器中所有的数据库？ show databases;"></a>2.如何查询数据库服务器中所有的数据库？ show databases;</h3><p>mysql&gt; show databases;<br>+——————–+<br>| Database           |<br>+——————–+<br>| demo               |<br>| information_schema |<br>| mysql              |<br>| performance_schema |<br>| sys                |<br>+——————–+<br>5 rows in set (0.00 sec)</p><h3 id="3-如何选中某一个数据库进行操作"><a href="#3-如何选中某一个数据库进行操作" class="headerlink" title="3.如何选中某一个数据库进行操作"></a>3.如何选中某一个数据库进行操作</h3><p>如果没有选中数据库直接进行操作</p><p>mysql&gt; select*from admin；<br>ERROR 1046 (3D000): No database selected<br>会报错</p><p>SQL语句 use demo<br>mysql&gt; use demo<br>Reading table information for completion of table and column names<br>You can turn off this feature to get a quicker startup with -A</p><p>Database changed<br>mysql&gt; select*from admin；<br>Empty set (0.00 sec)<br>使用use进入指定数据库</p><h3 id="如何退出数据库服务器-exit"><a href="#如何退出数据库服务器-exit" class="headerlink" title="如何退出数据库服务器 exit;"></a>如何退出数据库服务器 exit;</h3><p>mysql&gt; exit;<br>Bye</p><h3 id="如何在数据库服务器中创建我们的数据库？-Create-database"><a href="#如何在数据库服务器中创建我们的数据库？-Create-database" class="headerlink" title="如何在数据库服务器中创建我们的数据库？ Create database ;"></a>如何在数据库服务器中创建我们的数据库？ Create database <name>;</h3><p>Create database <name>;</p><p>mysql&gt; create database test;<br>Query OK, 1 row affected (0.00 sec)</p><h3 id="如何查看某个数据库中所有的数据表-show-tables"><a href="#如何查看某个数据库中所有的数据表-show-tables" class="headerlink" title="如何查看某个数据库中所有的数据表   show tables;"></a>如何查看某个数据库中所有的数据表   show tables;</h3><p>mysql&gt; show tables;<br>+—————-+<br>| Tables_in_test |<br>+—————-+<br>| pet            |<br>+—————-+<br>1 row in set (0.00 sec)</p><h3 id="如何创建一个数据表-create-table-pet"><a href="#如何创建一个数据表-create-table-pet" class="headerlink" title="如何创建一个数据表 create table pet"></a>如何创建一个数据表 create table pet</h3><p>mysql&gt; create table pet(<br>    -&gt; name varchar(20),<br>    -&gt; owner varchar(20),<br>    -&gt; sex char(1),<br>    -&gt; birth date,<br>    -&gt; death date);<br>Query OK, 0 rows affected (0.01 sec)</p><h3 id="查看创建好的数据表的结构-describe-pet"><a href="#查看创建好的数据表的结构-describe-pet" class="headerlink" title="查看创建好的数据表的结构 describe pet;"></a>查看创建好的数据表的结构 describe pet;</h3><p>mysql&gt; describe pet;<br>+——-+————-+——+—–+———+——-+<br>| Field    | Type     | Null | Key    | Default | Extra |<br>+——-+————-+——+—–+———+——-+<br>| name  | varchar(20) | YES  |        | NULL    |       |<br>| owner | varchar(20) | YES  |        | NULL    |       |<br>| sex   | char(1)     | YES  |        | NULL    |       |<br>| birth | date        | YES  |        | NULL    |       |<br>| death | date        | YES  |        | NULL    |       |<br>+——-+————-+——+—–+———+——-+<br>5 rows in set (0.00 sec)</p><h3 id="查看数据表中的记录-select-from-pet"><a href="#查看数据表中的记录-select-from-pet" class="headerlink" title="查看数据表中的记录 select*from pet;"></a>查看数据表中的记录 select*from pet;</h3><p>mysql&gt; select*from pet;<br>Empty set (0.01 sec)</p><h3 id="如何往数据表中添加数据记录-insert-into-pet"><a href="#如何往数据表中添加数据记录-insert-into-pet" class="headerlink" title="如何往数据表中添加数据记录 insert into pet"></a>如何往数据表中添加数据记录 insert into pet</h3><p>mysql&gt; insert into pet<br>    -&gt; values(‘bob’,’gao’,’n’,’1999-3-2’,null);<br>Query OK, 1 row affected (0.00 sec)</p><p>values输入的值要与表中的位置相对应</p><h4 id="再一次查询"><a href="#再一次查询" class="headerlink" title="再一次查询"></a>再一次查询</h4><p>mysql&gt; select *from pet;<br>+——+——-+——+————+——-+<br>| name | owner | sex  | birth            | death |<br>+——+——-+——+————+——-+<br>| bob  | gao   | n      | 1999-03-02 | NULL  |<br>+——+——-+——+————+——-+<br>1 row in set (0.00 sec)</p><h4 id="插入新数据和添加数据一样的操作"><a href="#插入新数据和添加数据一样的操作" class="headerlink" title="插入新数据和添加数据一样的操作"></a>插入新数据和添加数据一样的操作</h4>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> notes </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
